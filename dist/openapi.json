{
  "openapi": "3.0.0",
  "servers": [
    {
      "description": "DEMO API",
      "url": "https://startup2050.com/api/"
    },
    {
      "description": "Localhost API",
      "url": "http://localhost:8000/api/"
    }
  ],
  "info": {
    "description": "This contains all API for 3M Platform\n\n## Chat API Overview\n\nThe Chat API provides comprehensive messaging functionality for the platform, including direct messaging, message management, and chat room operations. All endpoints require authentication and integrate with RocketChat for real-time messaging.\n\n### Key Features\n\n- **AI Moderation**: All messages are analyzed for inappropriate content with a strike system\n- **File Attachments**: Support for images, documents, videos, and audio files\n- **Real-time Events**: WebSocket events for message updates and chat room changes\n- **Rate Limiting**: 60 requests/minute for most endpoints, 30/minute for sending messages\n- **Message Management**: Edit (within 6 minutes), delete, and search capabilities\n- **Chat Organization**: Archive, delete, and mute notification options\n\n### Authentication\n\nAll chat endpoints require authentication using Laravel Sanctum. Include the Bearer token in the Authorization header:\n\n```\nAuthorization: Bearer {your_token}\n```\n\n### Rate Limiting\n\n- 60 requests per minute per user for most endpoints\n- 30 requests per minute for message sending\n- 100 requests per hour for search operations\n\n### File Attachments\n\n- **Supported Formats**: Images, documents, videos, audio files\n- **File Size Limit**: Varies by file type\n- **Storage**: Files are stored securely and linked to messages\n- **Metadata**: File information is tracked including original filename and size\n\n### Real-time Events\n\nThe chat system uses WebSocket events for real-time updates:\n\n- **Message Sent**: `MessageSent` event when a new message is sent\n- **Chat Room Updated**: `ChatRoomUpdated` event when chat room status changes\n- **Read Status**: Real-time updates when messages are read\n\n## Support Tickets API Overview\n\nThe Support Tickets API provides comprehensive ticket management functionality, supporting both authenticated users and guest access. The system includes spam protection, file validation, and comprehensive ticket lifecycle management.\n\n### Key Features\n\n- **Dual Authentication**: Works with Bearer tokens or X-Guest-Email headers\n- **File Attachments**: Support for PDF, JPG, JPEG, PNG files (max 15MB each)\n- **Spam Protection**: Built-in spam detection and rate limiting\n- **Ticket Lifecycle**: Complete management from creation to resolution\n- **Message Threading**: Support for threaded conversations with file attachments\n- **Status Management**: Comprehensive status tracking and filtering\n- **Visual Styling**: Built-in CSS classes and color schemes for categories and importance levels\n- **User Information**: Complete user profile data when available\n\n### Authentication\n\nAll support ticket endpoints use optional authentication middleware, working with:\n\n- **Bearer Token**: `Authorization: Bearer {your_token}`\n- **Guest Access**: `X-Guest-Email: guest@example.com`\n\n### Rate Limiting\n\n- **Individual IP**: 10 requests per day\n- **IP Network**: 20 requests per day\n\n### File Attachments\n\n- **Supported Formats**: PDF, JPG, JPEG, PNG\n- **File Size Limit**: 15MB per file\n- **Validation**: File extension and content signature validation\n- **Storage**: Secure file storage with download URLs\n\n### Response Features\n\n- **Ticket Numbers**: Auto-generated in format `{PREFIX}-{6-digit-number}` (e.g., GEN-123456, FINT-789012)\n- **Styling Information**: CSS classes and color codes for categories and importance levels\n- **User Details**: Profile information including names, username, and profile picture\n- **Message Counts**: Total message count and latest message preview\n- **Formatted Dates**: Human-readable local timezone dates",
    "version": "1.0.0",
    "title": "3M Api",
    "contact": {
      "email": "alfi.dev@startup2050.com",
      "name": "Api Developer",
      "url": ""
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "Endpoints related to user authentication, including login, logout, token management, and API key validation. These routes are used to verify user credentials and establish secure access to the API."
    },
    {
      "name": "Profile",
      "description": "Endpoints for viewing, updating, and managing the authenticated user's profile information, such as personal details, preferences, photos, and account settings."
    },
    {
      "name": "Currencies",
      "description": "Get all the available currencies data"
    },
    {
      "name": "Chat",
      "description": "The Chat API provides comprehensive messaging functionality for the platform, including direct messaging, message management, and chat room operations. All endpoints require authentication and integrate with RocketChat for real-time messaging. Features include AI-powered content moderation, file attachments, real-time events, and rate limiting."
    },
    {
      "name": "Reports & Interactions",
      "description": "Endpoints for reporting users, blocking interactions, and requesting zoom calls"
    },
    {
      "name": "Contracts",
      "description": "Endpoints for managing contracts between sponsors and seekers, including contract creation, approval, modification, and lifecycle management."
    },
    {
      "name": "People",
      "description": "Endpoints for viewing public user profiles and their information. These endpoints allow authenticated users to view other users' profiles using their public username."
    },
    {
      "name": "Support Tickets",
      "description": "Endpoints for managing support tickets, including creating, viewing, updating tickets, retrieving categories, statuses, and notification options, and managing ticket messages with file attachments. Supports both authenticated users and guest access with pagination. File attachments support PDF, JPG, JPEG, PNG (max 15MB each). Rate limited: 10 requests per day per IP, 20 requests per day per IP network. All endpoints use optional authentication middleware, working with Bearer tokens or X-Guest-Email headers. Includes spam protection, file validation, and comprehensive ticket lifecycle management."
    },
    {
      "name": "Notifications",
      "description": "Endpoints for managing user notifications, including listing, filtering, marking as read, updating importance, and managing user preferences. All endpoints require Bearer token authentication."
          },
      {
        "name": "Affiliate",
        "description": "Endpoints for managing affiliate links, statistics, and earnings. All endpoints require Bearer token authentication using Laravel Sanctum."
      },
                {
      "name": "Wallet",
      "description": "Endpoints for managing user wallet and balance information, including retrieving current balance, deposits, withdrawals, and purchase power. All endpoints require Bearer token authentication."
    },
    {
      "name": "Search",
      "description": "Endpoints for searching user profiles with advanced filtering options including location, budget, languages, and custom parameters. Supports pagination, sorting, and role-based filtering. All endpoints require Bearer token authentication."
    }
  ],
  "paths": {
    "/login": {
      "parameters": [],
      "servers": [],
      "post": {
        "summary": "POST",
        "tags": [
          "Authentication"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "login_name": {
                              "type": "string"
                            },
                            "public_username": {
                              "type": "string"
                            },
                            "first_name": {
                              "type": "null"
                            },
                            "last_name": {
                              "type": "null"
                            },
                            "email": {
                              "type": "string"
                            },
                            "email_verified_at": {
                              "type": "string"
                            },
                            "email_verified": {
                              "type": "integer"
                            },
                            "gender": {
                              "type": "string"
                            },
                            "partner_preference": {
                              "type": "string"
                            },
                            "relationship_goals": {
                              "type": "string"
                            },
                            "role": {
                              "type": "string"
                            },
                            "profile_picture": {
                              "type": "string"
                            },
                            "created_at": {
                              "type": "string"
                            },
                            "updated_at": {
                              "type": "string"
                            },
                            "deleted_at": {
                              "type": "null"
                            },
                            "profile_picture_url": {
                              "type": "string"
                            }
                          }
                        },
                        "token": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "error": false,
                      "message": "Login successful",
                      "data": {
                        "user": {
                          "id": 5,
                          "login_name": "alfi_syah",
                          "public_username": "alfi_syah",
                          "first_name": null,
                          "last_name": null,
                          "email": "mrriyous@gmail.com",
                          "email_verified_at": "2025-06-02T06:15:00.000000Z",
                          "email_verified": 1,
                          "gender": "male",
                          "partner_preference": "female",
                          "relationship_goals": "long-term",
                          "role": "rs",
                          "profile_picture": "profile-pictures/5_1749097276.jpg",
                          "created_at": "2025-06-02T06:14:41.000000Z",
                          "updated_at": "2025-06-05T04:21:16.000000Z",
                          "deleted_at": null,
                          "profile_picture_url": "https://startup2050.com/storage/profile-pictures/5_1749097276.jpg"
                        },
                        "token": "93|y3wTIV52GxASW7x0YYViJVIYy55TBpYrxq0VAzZ0c452f980"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "recaptcha": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "error": true,
                      "errors": {
                        "recaptcha": [
                          "reCAPTCHA verification failed. Please try again"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "login",
        "description": "",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "username",
                  "password",
                  "is_mobile"
                ],
                "properties": {
                  "username": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "xd3rw9p0duu5z"
                    }
                  },
                  "password": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "2umpyvtmq04af"
                    }
                  },
                  "recaptcha": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "o3tid2pdqufw1"
                    },
                    "description": "Required if is_mobile != Y"
                  },
                  "is_mobile": {
                    "x-stoplight": {
                      "id": "ov3l324vg1t69"
                    },
                    "enum": [
                      "Y",
                      "N"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "summary": "Registration",
        "tags": [
          "Authentication"
        ],
        "responses": {
          "200": {
            "description": "Response For Step 1",
            "headers": {
              "header-0": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "recaptcha_session_id": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "error": false,
                      "recaptcha_session_id": "MVlNNTExVFZ3ZFd5Wk9SaDYxRmd0UU9CMFRQQUJYY0cyMDI1LTA2LTA2IDE0OjUxOjIyMTI3LjAuMC4x"
                    }
                  }
                }
              }
            }
          },
          "2XX": {
            "description": "Response For STEP 2",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "role": {
                          "type": "string"
                        },
                        "email": {
                          "type": "null"
                        },
                        "gender": {
                          "type": "string"
                        },
                        "last_name": {
                          "type": "null"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "first_name": {
                          "type": "null"
                        },
                        "login_name": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        },
                        "public_username": {
                          "type": "string"
                        },
                        "partner_preference": {
                          "type": "string"
                        },
                        "relationship_goals": {
                          "type": "string"
                        },
                        "profile_picture_url": {
                          "type": "string"
                        }
                      }
                    },
                    "error": {
                      "type": "boolean"
                    },
                    "token": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "user": {
                        "id": 55,
                        "role": "rs",
                        "email": null,
                        "gender": "male",
                        "last_name": null,
                        "created_at": "2025-06-06T15:11:21.000000Z",
                        "first_name": null,
                        "login_name": "nabil",
                        "updated_at": "2025-06-06T15:11:21.000000Z",
                        "public_username": "ellain",
                        "partner_preference": "female",
                        "relationship_goals": "long_term",
                        "profile_picture_url": "http://localhost:8001/images/placeholder-profile.png"
                      },
                      "error": false,
                      "token": "186|KGMppv3ksgOibqtcVqLXSWfo7GiUkdxD0fsIRLso423dc7da"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "registration",
        "description": "Registration will be having 2 steps for captcha verification at step 1\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "Example 1": {
                    "role": "rs",
                    "step": 2,
                    "email": "testinguser@testing.cmo",
                    "budget": 2500,
                    "gender": "male",
                    "currency": "SGD",
                    "password": "Password1234!",
                    "last_name": null,
                    "recaptcha": "03AFcWeA5rVkRfV13la_jGmC6huebt2MolXokDFeMjS5NjJLACG7oKIqk6uPpzm98U4tkTZxT9I5qekOsX9e2ewL-J-LJ3fQbN90Dd9EwpxgzvEAepmh2MGqwMpUkpXLoIeDMd5FuZjulmJzKhsQwsIsCeNsXKGSVHI7G9I77mNJgMm8ouYcct0H0p-TeYHXATHUqoYXrn2Ky-2waZGwuWNfXKRsTNPf0SK82t4ixzV1tYddKkAPJdMd7Y2WgpcW1U8_WqcdkVewNYZGh8CyaqeDhVMJu6JvQfAdXyGYD5PRMMnyu9HuFq1jauyyV5ybsaNTLtm5--c1jVmNnylUeo4GebZ3rNSpxYkxLcg1Y_A-dSVfB6UneTHRXWakkqWJNcQAgD6vfctoqgDjBdXCbj_mXlJp0mZ24E7E4-0z8sN4ksg-luXgrY20WEIjaGgLOm_9R2rnbjqUN05A1sEmI8W_2xOiZqbhHfBiyW71f1oWCbJ3KubYw7loriHaJy4YjzoFQjhzdkbx9O--NUPs_sKa2Xybh6PpROHHGEJgWxqzRglIeaCegXwdzFoqnc0fnaSbQMwSrimjIBLWTIb4G9l5XnS6b83EC-mmS6ORQzDfIspMgjFEkza3KOytYZxf2dKwCkKNowdT9awBcNORb7luy6TrMDL-wRb9NY6TyRPqSkBCdbaZgUKW0N2TTUS1-I0y6QaXeA8PaLbTRyY4VKxveZBdJwul5X--AyD9dRYZzdE0xLng9d-xAHdUJKIzQ18NAgx-be-JnQDoM-RMpDFK4C7tXDtpOdcZUA_6HLZLrBbyaMEOyajxdy5e9rXKizo8bCFyYq-wb60B_5lU27-KvbywRFCN7XvMGL4Ax9hBgJYRqCCsgKZZP26BY56EpXwCWYfqriB6fO8nHM431pyLn3vXuN9mik2FL2wuuOtaAhR7I4OUJMetxrYdYt3dL27vMT7xf3Sny1JEGWljnNBS9PEd14bVgaPkYgxeEj61R6mrMKOwJulB35jlWXmSHP7e_ywUSh75O97jBmEOxdDWKzDpv5uYuF17OH_kPsCbwPSSBCSp_RmviIwIG0-IBzx7Iv5-5_OjZs8DaPlO7wUrpZYMRjM_p1FisFx1qJuOcP34lB19SqZykalerF7DedkgZcMuSPKaf7VSs7nL4Br7kgAQxR21_WltgCojUbT5CbaCTN0a6r5tfYTlGXziYUE5Hf2TutA2bwPB_GkFznQ8V_w5APFkrxCdKtJhVVFqDkzdLtcFBvO0skoOVxg8iSEYj6DRbB3NF7LHqFwG7Q9_NmoH23jGIg5aIsQnDzGxkkJ2nz-r8VLhUFP0NbYmyv-2_SJJSr39nHIMdaod5q3kbXcPk8TxFSsL0MTRS8dtkSY12rNCJkN0m2QvBYNx5h_NFToAdFRXcQbVfibHWee_bajsKcbcw9WfjGS4-cbui7eqM0Ff5wN7CzFNpE5vdJRyrJjU2Nbf81x1qei2hL9eG7aWZFtjKesVN4y0B8X_GvxLM4tQZef3EIS9K1__fUb4ouX2IdgIghS8bUXFV9jeVRlAK0wjR1k7PcW9ZIn3dMkg6ci4qKfeNSdMPZQkFiT8hYl1Y_LZk2jjQqYh_ntUlqSAaEk6CWFtWVkSKnlGqVCgBQlJPEYG20mtPgD3dUh1EPW63sQtzdXxsyp78df_2nV1VT1-hVT2kgFOh8_0KNaoVqx8Ig6GLMJw1Pl8V0KzMzEXINn31axRp5GOBbOLA-0-aqmmN-K72RO7-vyyk4bGK2IGn_x56Wf2eBc9Nd9m3Wso0JqJyrU04tXhg6iCRr8uqigCD26hxWkW3V9CBAEJAMzzJ--da4RMR5RtqJclGEvUoOBFCtOi0l0zxLumAWGxHej9LfF182xORIxFhm-_BI4rLH2FTmPUFCFfuzKr08sSTDSThT_4D51q_6Lz1tcpFtY12CUCZWJbPy-QCzAmbWR-ap9IuMPj4u5pYfCXBsc_AZsoKwuRhJNTl6iei2tispfP259aKQOvX6fZn6jKngZM6yd03hlnnqlKJWk0EM81Au4k1YFjDJxhKjLnWB_twNPNUGiDQ-qC8RleXgllDGSX3WBoU",
                    "first_name": null,
                    "login_name": "joshua_jonan",
                    "terms_accepted": "1",
                    "public_username": "joshua_jonan",
                    "partner_preference": "female",
                    "relationship_goals": "medium_term",
                    "recaptcha_session_id": "c3g4UEx4b0NFd2FOajdVMGltd0FLbTk3dGFEOG82dzkyMDI1LTA2LTA2IDE1OjA0OjE5MTI3LjAuMC4x",
                    "password_confirmation": "Password1234!"
                  }
                },
                "properties": {
                  "role": {
                    "enum": [
                      "rs",
                      "srs"
                    ]
                  },
                  "step": {
                    "type": "integer"
                  },
                  "email": {
                    "type": "string"
                  },
                  "budget": {
                    "type": "integer"
                  },
                  "gender": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "last_name": {
                    "nullable": true
                  },
                  "recaptcha": {
                    "type": "string",
                    "description": "required on step 1, and if is_mobile != Y"
                  },
                  "first_name": {
                    "nullable": true
                  },
                  "login_name": {
                    "type": "string"
                  },
                  "terms_accepted": {
                    "type": "string"
                  },
                  "public_username": {
                    "type": "string"
                  },
                  "partner_preference": {
                    "type": "string"
                  },
                  "relationship_goals": {
                    "type": "string"
                  },
                  "recaptcha_session_id": {
                    "type": "string",
                    "description": "Required on step2, and is_mobile != Y"
                  },
                  "password_confirmation": {
                    "type": "string"
                  },
                  "is_mobile": {
                    "x-stoplight": {
                      "id": "9z1603rfe2g9y"
                    },
                    "enum": [
                      "Y",
                      "N"
                    ]
                  },
                  "affiliate_code": {
                    "type": "string",
                    "description": "Optional affiliate code for referral tracking",
                    "nullable": true
                  }
                }
              },
              "examples": {}
            }
          }
        }
      }
    },
    "/password/reset-link": {
      "post": {
        "summary": "Send Reset Password Link",
        "tags": [
          "Authentication"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "error": false,
                      "message": "We have emailed your password reset link."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "error": true,
                      "message": "We can't find a user with that email address.",
                      "errors": {
                        "email": [
                          "We can't find a user with that email address."
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "Error Response Example": {
                    "value": {
                      "error": true,
                      "message": "We can't find a user with that email address.",
                      "errors": {
                        "email": [
                          "We can't find a user with that email address."
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post-password-reset-link",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "0qpiuigm74dfo"
                    },
                    "format": "email"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account/verification-request": {
      "post": {
        "summary": "Send Verification Email",
        "tags": [
          "Authentication"
        ],
        "responses": {},
        "operationId": "post-account-verification-request",
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/user": {
      "get": {
        "summary": "Get User Data",
        "tags": [
          "Profile"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "login_name": {
                          "type": "string"
                        },
                        "public_username": {
                          "type": "string"
                        },
                        "first_name": {
                          "type": "string"
                        },
                        "last_name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "email_verified_at": {
                          "type": "string"
                        },
                        "email_verified": {
                          "type": "integer"
                        },
                        "gender": {
                          "type": "string"
                        },
                        "partner_preference": {
                          "type": "string"
                        },
                        "relationship_goals": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "profile_picture": {
                          "type": "string"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        },
                        "deleted_at": {
                          "type": "null"
                        },
                        "profile_picture_url": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "data": {
                        "id": 14,
                        "login_name": "mrriyous",
                        "public_username": "mrriyous",
                        "first_name": "Alfi",
                        "last_name": "Syahri",
                        "email": "mrriyous@gmail.com",
                        "email_verified_at": "2025-05-07T13:10:49.000000Z",
                        "email_verified": 1,
                        "gender": "male",
                        "partner_preference": "female",
                        "relationship_goals": "Long term relationships",
                        "role": "rs",
                        "profile_picture": "profile-pictures/14_1748358438.jpg",
                        "created_at": "2025-04-11T14:24:10.000000Z",
                        "updated_at": "2025-05-27T15:07:18.000000Z",
                        "deleted_at": null,
                        "profile_picture_url": "http://localhost:8000/storage/profile-pictures/14_1748358438.jpg"
                      }
                    }
                  }
                },
                "examples": {
                  "Sample Response": {
                    "value": {
                      "data": {
                        "id": 14,
                        "login_name": "user",
                        "public_username": "user",
                        "first_name": "user",
                        "last_name": "1",
                        "email": "testinguser@gmail.com",
                        "email_verified_at": "2025-05-07T13:10:49.000000Z",
                        "email_verified": 1,
                        "gender": "male",
                        "partner_preference": "female",
                        "relationship_goals": "Long term relationships",
                        "role": "rs",
                        "profile_picture": "profile-pictures/14_1748358438.jpg",
                        "created_at": "2025-04-11T14:24:10.000000Z",
                        "updated_at": "2025-05-27T15:07:18.000000Z",
                        "deleted_at": null,
                        "profile_picture_url": "http://localhost:8000/storage/profile-pictures/14_1748358438.jpg"
                      }
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "operationId": "get-user",
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/profile/basic-info": {
      "get": {
        "summary": "Profile Baisc Info",
        "tags": [
          "Profile"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "public_username": {
                          "type": "string"
                        },
                        "first_name": {
                          "type": "string"
                        },
                        "last_name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "gender": {
                          "type": "string"
                        },
                        "partner_preference": {
                          "type": "string"
                        },
                        "relationship_goals": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "profile_picture_url": {
                          "type": "string"
                        },
                        "email_verified": {
                          "type": "boolean"
                        },
                        "initials": {
                          "type": "string"
                        },
                        "profile": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "birth_date": {
                              "type": "string"
                            },
                            "age_display": {
                              "type": "string"
                            },
                            "orientation": {
                              "type": "string"
                            },
                            "short_intro": {
                              "type": "string"
                            },
                            "weight": {
                              "type": "string"
                            },
                            "height": {
                              "type": "string"
                            },
                            "extended_descriptions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            },
                            "family_views": {
                              "type": "string"
                            },
                            "financial_views": {
                              "type": "string"
                            },
                            "long_term_views": {
                              "type": "string"
                            },
                            "secret_text": {
                              "type": "string"
                            },
                            "education_level": {
                              "type": "string"
                            },
                            "profession": {
                              "type": "string"
                            },
                            "religion": {
                              "type": "string"
                            },
                            "ethnicity": {
                              "type": "string"
                            },
                            "astrology_belief": {
                              "type": "boolean"
                            },
                            "personality_type": {
                              "type": "string"
                            },
                            "location_residence": {
                              "type": "string"
                            },
                            "location_residence_place_id": {
                              "type": "string"
                            },
                            "location_residence_latitude": {
                              "type": "string"
                            },
                            "location_residence_longitude": {
                              "type": "string"
                            },
                            "location_residence_secondary_text": {
                              "type": "string"
                            },
                            "relocation_readiness": {
                              "type": "string"
                            },
                            "location_search": {
                              "type": "string"
                            },
                            "location_search_place_id": {
                              "type": "string"
                            },
                            "location_search_latitude": {
                              "type": "string"
                            },
                            "location_search_longitude": {
                              "type": "string"
                            },
                            "location_search_secondary_text": {
                              "type": "string"
                            },
                            "location_difference_reason": {
                              "type": "string"
                            },
                            "languages": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "code": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "fluency": {
                                    "type": "integer"
                                  }
                                }
                              }
                            },
                            "hobbies": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "emoji": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "created_at": {
                              "type": "string"
                            },
                            "updated_at": {
                              "type": "string"
                            }
                          }
                        },
                        "profileImages": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "url": {
                                "type": "string"
                              },
                              "thumbnail_url": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "error": false,
                      "data": {
                        "id": 14,
                        "public_username": "user",
                        "first_name": "User",
                        "last_name": "User",
                        "email": "user@gmail.com",
                        "gender": "male",
                        "partner_preference": "female",
                        "relationship_goals": "Long term relationships",
                        "role": "rs",
                        "profile_picture_url": "http://localhost:8000/storage/profile-pictures/14_1748358438.jpg",
                        "email_verified": true,
                        "initials": "AS",
                        "profile": {
                          "id": 1,
                          "birth_date": "1998-05-16",
                          "age_display": "Show Exact Age",
                          "orientation": "Heterosexual",
                          "short_intro": "Short intro",
                          "weight": "70.00",
                          "height": "170.00",
                          "extended_descriptions": [],
                          "family_views": "Family views",
                          "financial_views": "Financial Views",
                          "long_term_views": "Longterm Views Text",
                          "secret_text": "Secret Text",
                          "education_level": "High School",
                          "profession": "Software Engineer",
                          "religion": "Islam",
                          "ethnicity": "Black",
                          "astrology_belief": true,
                          "personality_type": "introvert",
                          "location_residence": "Jakarta Selatan",
                          "location_residence_place_id": "ChIJs7AiJOzxaS4RAk1AR_7QoDk",
                          "location_residence_latitude": "-6.2474095",
                          "location_residence_longitude": "106.8060767",
                          "location_residence_secondary_text": "South Jakarta City, Jakarta, Indonesia",
                          "relocation_readiness": "yes",
                          "location_search": "Medan",
                          "location_search_place_id": "ChIJ_bI-HMwxMTARYoKQpsgx1CM",
                          "location_search_latitude": "3.5951956",
                          "location_search_longitude": "98.6722227",
                          "location_search_secondary_text": "Medan City, North Sumatra, Indonesia",
                          "location_difference_reason": "I don't know",
                          "languages": [
                            {
                              "id": 5,
                              "code": "de",
                              "name": "German",
                              "fluency": 4
                            },
                            {
                              "id": 14,
                              "code": "ja",
                              "name": "Japanese",
                              "fluency": 5
                            },
                            {
                              "id": 1,
                              "code": "en",
                              "name": "English",
                              "fluency": 5
                            },
                            {
                              "id": 2,
                              "code": "ar",
                              "name": "Arabic",
                              "fluency": 5
                            },
                            {
                              "id": 11,
                              "code": "sv",
                              "name": "Swedish",
                              "fluency": 3
                            },
                            {
                              "id": 9,
                              "code": "zh",
                              "name": "Chinese",
                              "fluency": 5
                            }
                          ],
                          "hobbies": [
                            {
                              "id": 5,
                              "name": "Travel",
                              "emoji": "✈️"
                            },
                            {
                              "id": 1,
                              "name": "Reading",
                              "emoji": "📚"
                            },
                            {
                              "id": 3,
                              "name": "Gaming",
                              "emoji": "🎮"
                            },
                            {
                              "id": 4,
                              "name": "Music",
                              "emoji": "🎵"
                            },
                            {
                              "id": 12,
                              "name": "Fashion",
                              "emoji": "👔"
                            },
                            {
                              "id": 9,
                              "name": "Cooking",
                              "emoji": "🍳"
                            },
                            {
                              "id": 6,
                              "name": "Painting",
                              "emoji": "🎨"
                            },
                            {
                              "id": 8,
                              "name": "Charity",
                              "emoji": "💖"
                            }
                          ],
                          "created_at": "2025-04-16T15:25:06.000000Z",
                          "updated_at": "2025-06-05T06:19:59.000000Z"
                        },
                        "profileImages": [
                          {
                            "id": 14,
                            "url": "http://localhost:8000/storage/profile-pictures/14_1748358438.jpg",
                            "thumbnail_url": "http://localhost:8000/storage/profile-pictures/14_1748358438.jpg"
                          }
                        ],
                        "created_at": "2025-04-11T14:24:10.000000Z",
                        "updated_at": "2025-05-27T15:07:18.000000Z"
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "error": false,
                      "data": {
                        "id": 14,
                        "public_username": "user",
                        "first_name": "User",
                        "last_name": "User",
                        "email": "user@gmail.com",
                        "gender": "male",
                        "partner_preference": "female",
                        "relationship_goals": "Long term relationships",
                        "role": "rs",
                        "profile_picture_url": "http://localhost:8000/storage/profile-pictures/14_1748358438.jpg",
                        "email_verified": true,
                        "initials": "AS",
                        "profile": {
                          "id": 1,
                          "birth_date": "1998-05-16",
                          "age_display": "Show Exact Age",
                          "orientation": "Heterosexual",
                          "short_intro": "Short intro",
                          "weight": "70.00",
                          "height": "170.00",
                          "extended_descriptions": [],
                          "family_views": "Family views",
                          "financial_views": "Financial Views",
                          "long_term_views": "Longterm Views Text",
                          "secret_text": "Secret Text",
                          "education_level": "High School",
                          "profession": "Software Engineer",
                          "religion": "Islam",
                          "ethnicity": "Black",
                          "astrology_belief": true,
                          "personality_type": "introvert",
                          "location_residence": "Jakarta Selatan",
                          "location_residence_place_id": "ChIJs7AiJOzxaS4RAk1AR_7QoDk",
                          "location_residence_latitude": "-6.2474095",
                          "location_residence_longitude": "106.8060767",
                          "location_residence_secondary_text": "South Jakarta City, Jakarta, Indonesia",
                          "relocation_readiness": "yes",
                          "location_search": "Medan",
                          "location_search_place_id": "ChIJ_bI-HMwxMTARYoKQpsgx1CM",
                          "location_search_latitude": "3.5951956",
                          "location_search_longitude": "98.6722227",
                          "location_search_secondary_text": "Medan City, North Sumatra, Indonesia",
                          "location_difference_reason": "I don't know",
                          "languages": [
                            {
                              "id": 5,
                              "code": "de",
                              "name": "German",
                              "fluency": 4
                            },
                            {
                              "id": 14,
                              "code": "ja",
                              "name": "Japanese",
                              "fluency": 5
                            },
                            {
                              "id": 1,
                              "code": "en",
                              "name": "English",
                              "fluency": 5
                            },
                            {
                              "id": 2,
                              "code": "ar",
                              "name": "Arabic",
                              "fluency": 5
                            },
                            {
                              "id": 11,
                              "code": "sv",
                              "name": "Swedish",
                              "fluency": 3
                            },
                            {
                              "id": 9,
                              "code": "zh",
                              "name": "Chinese",
                              "fluency": 5
                            }
                          ],
                          "hobbies": [
                            {
                              "id": 5,
                              "name": "Travel",
                              "emoji": "✈️"
                            },
                            {
                              "id": 1,
                              "name": "Reading",
                              "emoji": "📚"
                            },
                            {
                              "id": 3,
                              "name": "Gaming",
                              "emoji": "🎮"
                            },
                            {
                              "id": 4,
                              "name": "Music",
                              "emoji": "🎵"
                            },
                            {
                              "id": 12,
                              "name": "Fashion",
                              "emoji": "👔"
                            },
                            {
                              "id": 9,
                              "name": "Cooking",
                              "emoji": "🍳"
                            },
                            {
                              "id": 6,
                              "name": "Painting",
                              "emoji": "🎨"
                            },
                            {
                              "id": 8,
                              "name": "Charity",
                              "emoji": "💖"
                            }
                          ],
                          "created_at": "2025-04-16T15:25:06.000000Z",
                          "updated_at": "2025-06-05T06:19:59.000000Z"
                        },
                        "profileImages": [
                          {
                            "id": 14,
                            "url": "http://localhost:8000/storage/profile-pictures/14_1748358438.jpg",
                            "thumbnail_url": "http://localhost:8000/storage/profile-pictures/14_1748358438.jpg"
                          }
                        ],
                        "created_at": "2025-04-11T14:24:10.000000Z",
                        "updated_at": "2025-05-27T15:07:18.000000Z"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-profile-basic-info",
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/profile/relationship-info": {
      "get": {
        "summary": "Get Profile Relationship Info",
        "tags": [
          "Profile"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "relationship_goals": {
                          "type": "string"
                        },
                        "partner_preference": {
                          "type": "string"
                        },
                        "duration_preference": {
                          "type": "string"
                        },
                        "available_time_morning": {
                          "type": "string"
                        },
                        "available_time_afternoon": {
                          "type": "string"
                        },
                        "available_time_evening": {
                          "type": "string"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "error": false,
                      "data": {
                        "id": 14,
                        "relationship_goals": "long_term",
                        "partner_preference": "female",
                        "duration_preference": "Long-term relationship (more than 6 months)",
                        "available_time_morning": "5",
                        "available_time_afternoon": "2",
                        "available_time_evening": "1",
                        "created_at": "2025-04-17T13:50:26.000000Z",
                        "updated_at": "2025-05-01T14:58:30.000000Z"
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "error": false,
                      "data": {
                        "id": 14,
                        "relationship_goals": "long_term",
                        "partner_preference": "female",
                        "duration_preference": "Long-term relationship (more than 6 months)",
                        "available_time_morning": "5",
                        "available_time_afternoon": "2",
                        "available_time_evening": "1",
                        "created_at": "2025-04-17T13:50:26.000000Z",
                        "updated_at": "2025-05-01T14:58:30.000000Z"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-profile-relationship-info",
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/profile/financial-info": {
      "get": {
        "summary": "Get Financial Info",
        "tags": [
          "Profile"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "currency": {
                          "type": "string"
                        },
                        "lifestyle_support_budget": {
                          "type": "string"
                        },
                        "lifestyle_support_budget_in_sc": {
                          "type": "string"
                        },
                        "lifestyle_support_budget_trimmed": {
                          "type": "string"
                        },
                        "lifestyle_support_budget_trimmed_in_sc": {
                          "type": "string"
                        },
                        "capital_level_precise": {
                          "type": "string"
                        },
                        "capital_level_less_precise": {
                          "type": "string"
                        },
                        "monthly_income_precise": {
                          "type": "string"
                        },
                        "monthly_income_less_precise": {
                          "type": "string"
                        },
                        "first_child_payment": {
                          "type": "string"
                        },
                        "second_child_payment": {
                          "type": "string"
                        },
                        "subsequent_child_payment": {
                          "type": "string"
                        },
                        "monthly_child_budget": {
                          "type": "string"
                        },
                        "marriage_gift": {
                          "type": "string"
                        },
                        "growth_bonus": {
                          "type": "string"
                        },
                        "growth_clause": {
                          "type": "string"
                        },
                        "termination_comp": {
                          "type": "string"
                        },
                        "termination_clause": {
                          "type": "string"
                        },
                        "milestone_gifts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "amount": {
                                "type": "string"
                              },
                              "period": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "currency_detail": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "code": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "symbol": {
                              "type": "string"
                            },
                            "prefix": {
                              "type": "string"
                            },
                            "suffix": {
                              "type": "string"
                            },
                            "icon": {
                              "type": "string"
                            },
                            "created_at": {
                              "type": "string"
                            },
                            "updated_at": {
                              "type": "string"
                            },
                            "deleted_at": {
                              "type": "null"
                            },
                            "icon_url": {
                              "type": "string"
                            }
                          }
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "error": false,
                      "data": {
                        "id": 1,
                        "currency": "USD",
                        "lifestyle_support_budget": "2500.00",
                        "lifestyle_support_budget_in_sc": "2500.00",
                        "lifestyle_support_budget_trimmed": "2,500",
                        "lifestyle_support_budget_trimmed_in_sc": "2,500",
                        "capital_level_precise": "$1,000-1,999",
                        "capital_level_less_precise": "below $1,000",
                        "monthly_income_precise": "$100-199",
                        "monthly_income_less_precise": "below $100",
                        "first_child_payment": "1000.00",
                        "second_child_payment": "10200.00",
                        "subsequent_child_payment": "20.00",
                        "monthly_child_budget": "2323.00",
                        "marriage_gift": "123.00",
                        "growth_bonus": "50.00",
                        "growth_clause": "20",
                        "termination_comp": "2000.00",
                        "termination_clause": "6",
                        "milestone_gifts": [
                          {
                            "id": 47,
                            "amount": "500.00",
                            "period": "1y"
                          },
                          {
                            "id": 48,
                            "amount": "1000.00",
                            "period": "2y"
                          },
                          {
                            "id": 49,
                            "amount": "1500.00",
                            "period": "2y"
                          },
                          {
                            "id": 50,
                            "amount": "400.00",
                            "period": "20y"
                          },
                          {
                            "id": 51,
                            "amount": "23.00",
                            "period": "1y"
                          }
                        ],
                        "currency_detail": {
                          "id": 10,
                          "code": "USD",
                          "name": "US Dollar",
                          "symbol": "$",
                          "prefix": "$",
                          "suffix": "",
                          "icon": "/static/icons/currency/usd.png",
                          "created_at": "2025-06-03T12:31:20.000000Z",
                          "updated_at": "2025-06-03T12:31:20.000000Z",
                          "deleted_at": null,
                          "icon_url": "http://localhost:8001/static/icons/currency/usd.png"
                        },
                        "created_at": "2025-04-17T15:04:05.000000Z",
                        "updated_at": "2025-04-17T15:40:19.000000Z"
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "error": false,
                      "data": {
                        "id": 1,
                        "currency": "USD",
                        "lifestyle_support_budget": "2500.00",
                        "lifestyle_support_budget_in_sc": "2500.00",
                        "lifestyle_support_budget_trimmed": "2,500",
                        "lifestyle_support_budget_trimmed_in_sc": "2,500",
                        "capital_level_precise": "$1,000-1,999",
                        "capital_level_less_precise": "below $1,000",
                        "monthly_income_precise": "$100-199",
                        "monthly_income_less_precise": "below $100",
                        "first_child_payment": "1000.00",
                        "second_child_payment": "10200.00",
                        "subsequent_child_payment": "20.00",
                        "monthly_child_budget": "2323.00",
                        "marriage_gift": "123.00",
                        "growth_bonus": "50.00",
                        "growth_clause": "20",
                        "termination_comp": "2000.00",
                        "termination_clause": "6",
                        "milestone_gifts": [
                          {
                            "id": 47,
                            "amount": "500.00",
                            "period": "1y"
                          },
                          {
                            "id": 48,
                            "amount": "1000.00",
                            "period": "2y"
                          },
                          {
                            "id": 49,
                            "amount": "1500.00",
                            "period": "2y"
                          },
                          {
                            "id": 50,
                            "amount": "400.00",
                            "period": "20y"
                          },
                          {
                            "id": 51,
                            "amount": "23.00",
                            "period": "1y"
                          }
                        ],
                        "currency_detail": {
                          "id": 10,
                          "code": "USD",
                          "name": "US Dollar",
                          "symbol": "$",
                          "prefix": "$",
                          "suffix": "",
                          "icon": "/static/icons/currency/usd.png",
                          "created_at": "2025-06-03T12:31:20.000000Z",
                          "updated_at": "2025-06-03T12:31:20.000000Z",
                          "deleted_at": null,
                          "icon_url": "http://localhost:8001/static/icons/currency/usd.png"
                        },
                        "created_at": "2025-04-17T15:04:05.000000Z",
                        "updated_at": "2025-04-17T15:40:19.000000Z"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-profile-financial-info",
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/profile/living-info": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [
          "Profile"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "user_id": {
                          "type": "integer"
                        },
                        "driving_license_availability": {
                          "type": "string"
                        },
                        "car_availability": {
                          "type": "string"
                        },
                        "driver_availability": {
                          "type": "string"
                        },
                        "living_format_test_moon": {
                          "type": "string"
                        },
                        "living_format_preliminary_contract": {
                          "type": "string"
                        },
                        "living_format_final_contract": {
                          "type": "string"
                        },
                        "living_format_test_moon_image_url": {
                          "type": "string"
                        },
                        "living_format_test_moon_image_thumbnail_url": {
                          "type": "string"
                        },
                        "living_format_preliminary_contract_image_url": {
                          "type": "string"
                        },
                        "living_format_preliminary_contract_image_thumbnail_url": {
                          "type": "string"
                        },
                        "living_format_final_contract_image_url": {
                          "type": "string"
                        },
                        "living_format_final_contract_image_thumbnail_url": {
                          "type": "string"
                        },
                        "housing_image_url": {
                          "type": "null"
                        },
                        "housing_image_thumbnail_url": {
                          "type": "null"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "error": false,
                      "data": {
                        "id": 1,
                        "user_id": 14,
                        "driving_license_availability": "no",
                        "car_availability": "yes",
                        "driver_availability": "yes",
                        "living_format_test_moon": "together_own_room",
                        "living_format_preliminary_contract": "together_one_room",
                        "living_format_final_contract": "together_own_room",
                        "living_format_test_moon_image_url": "http://localhost:8000/storage/living-form-pictures/pi_14_17470565097964.jpg",
                        "living_format_test_moon_image_thumbnail_url": "http://localhost:8000/storage/living-form-pictures/pi_thumb_14_17470565097964.jpg",
                        "living_format_preliminary_contract_image_url": "http://localhost:8000/storage/living-form-pictures/pi_14_17470565091008.jpg",
                        "living_format_preliminary_contract_image_thumbnail_url": "http://localhost:8000/storage/living-form-pictures/pi_thumb_14_17470565091008.jpg",
                        "living_format_final_contract_image_url": "http://localhost:8000/storage/living-form-pictures/pi_14_17483521547766.jpg",
                        "living_format_final_contract_image_thumbnail_url": "http://localhost:8000/storage/living-form-pictures/pi_thumb_14_17483521547766.jpg",
                        "housing_image_url": null,
                        "housing_image_thumbnail_url": null,
                        "created_at": "2025-04-18T14:52:34.000000Z",
                        "updated_at": "2025-05-27T13:22:34.000000Z"
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "error": false,
                      "data": {
                        "id": 1,
                        "user_id": 14,
                        "driving_license_availability": "no",
                        "car_availability": "yes",
                        "driver_availability": "yes",
                        "living_format_test_moon": "together_own_room",
                        "living_format_preliminary_contract": "together_one_room",
                        "living_format_final_contract": "together_own_room",
                        "living_format_test_moon_image_url": "http://localhost:8000/storage/living-form-pictures/pi_14_17470565097964.jpg",
                        "living_format_test_moon_image_thumbnail_url": "http://localhost:8000/storage/living-form-pictures/pi_thumb_14_17470565097964.jpg",
                        "living_format_preliminary_contract_image_url": "http://localhost:8000/storage/living-form-pictures/pi_14_17470565091008.jpg",
                        "living_format_preliminary_contract_image_thumbnail_url": "http://localhost:8000/storage/living-form-pictures/pi_thumb_14_17470565091008.jpg",
                        "living_format_final_contract_image_url": "http://localhost:8000/storage/living-form-pictures/pi_14_17483521547766.jpg",
                        "living_format_final_contract_image_thumbnail_url": "http://localhost:8000/storage/living-form-pictures/pi_thumb_14_17483521547766.jpg",
                        "housing_image_url": null,
                        "housing_image_thumbnail_url": null,
                        "created_at": "2025-04-18T14:52:34.000000Z",
                        "updated_at": "2025-05-27T13:22:34.000000Z"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-profile-living-info",
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/profile/picture": {
      "post": {
        "summary": "Upload User Profile Picture",
        "tags": [
          "Profile"
        ],
        "responses": {},
        "operationId": "post-profile-picture",
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "profile_picture": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "u3b18ioxwiokc"
                    },
                    "description": "file"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/profile/about": {
      "post": {
        "summary": "Update Profile About Section",
        "tags": [
          "Profile"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "role": {
                          "type": "string"
                        },
                        "email": {
                          "type": "null"
                        },
                        "gender": {
                          "type": "string"
                        },
                        "initials": {
                          "type": "string"
                        },
                        "last_name": {
                          "type": "string"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "first_name": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        },
                        "profileImages": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "url": {
                                "type": "string"
                              },
                              "thumbnail_url": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "email_verified": {
                          "type": "boolean"
                        },
                        "public_username": {
                          "type": "string"
                        },
                        "partner_preference": {
                          "type": "string"
                        },
                        "relationship_goals": {
                          "type": "string"
                        },
                        "profile_picture_url": {
                          "type": "string"
                        }
                      }
                    },
                    "error": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "data": {
                        "id": 52,
                        "role": "rs",
                        "email": null,
                        "gender": "female",
                        "initials": "NH",
                        "last_name": "Hajime",
                        "created_at": "2025-06-03T14:31:06.000000Z",
                        "first_name": "Noshi",
                        "updated_at": "2025-06-05T06:27:44.000000Z",
                        "profileImages": [
                          {
                            "id": 52,
                            "url": "http://localhost:8000/storage/profile-pictures/52_1749104864.jpg",
                            "thumbnail_url": "http://localhost:8000/storage/profile-pictures/52_1749104864.jpg"
                          }
                        ],
                        "email_verified": true,
                        "public_username": "noshi",
                        "partner_preference": "female",
                        "relationship_goals": "long_term",
                        "profile_picture_url": "http://localhost:8000/storage/profile-pictures/52_1749104864.jpg"
                      },
                      "error": false,
                      "message": "Profile updated successfully"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post-profile-about",
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "height": {
                    "type": "string"
                  },
                  "weight": {
                    "type": "string"
                  },
                  "hobbies": {
                    "type": "string"
                  },
                  "religion": {
                    "type": "string"
                  },
                  "ethnicity": {
                    "type": "string"
                  },
                  "languages": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "code": {
                          "type": "string"
                        },
                        "known": {
                          "type": "boolean"
                        },
                        "fluency": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "birth_date": {
                    "type": "string"
                  },
                  "profession": {
                    "type": "string"
                  },
                  "age_display": {
                    "type": "string"
                  },
                  "orientation": {
                    "type": "string"
                  },
                  "secret_text": {
                    "type": "string"
                  },
                  "short_intro": {
                    "type": "string"
                  },
                  "family_views": {
                    "type": "string"
                  },
                  "education_level": {
                    "type": "string"
                  },
                  "financial_views": {
                    "type": "string"
                  },
                  "location_search": {
                    "type": "string"
                  },
                  "long_term_views": {
                    "type": "string"
                  },
                  "public_username": {
                    "type": "string"
                  },
                  "astrology_belief": {
                    "type": "integer"
                  },
                  "personality_type": {
                    "type": "string"
                  },
                  "location_residence": {
                    "type": "string"
                  },
                  "partner_preference": {
                    "type": "null"
                  },
                  "relationship_goals": {
                    "type": "null"
                  },
                  "duration_preference": {
                    "type": "null"
                  },
                  "extended_description": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "relocation_readiness": {
                    "type": "string"
                  },
                  "available_time_evening": {
                    "type": "null"
                  },
                  "available_time_morning": {
                    "type": "null"
                  },
                  "available_time_afternoon": {
                    "type": "null"
                  },
                  "location_search_latitude": {
                    "type": "string"
                  },
                  "location_search_place_id": {
                    "type": "string"
                  },
                  "location_search_longitude": {
                    "type": "string"
                  },
                  "location_difference_reason": {
                    "type": "string"
                  },
                  "location_residence_latitude": {
                    "type": "string"
                  },
                  "location_residence_place_id": {
                    "type": "string"
                  },
                  "location_residence_longitude": {
                    "type": "string"
                  },
                  "location_search_secondary_text": {
                    "type": "string"
                  },
                  "location_residence_secondary_text": {
                    "type": "string"
                  }
                },
                "x-examples": {
                  "Example 1": {
                    "height": "180",
                    "weight": "80",
                    "hobbies": "6,2",
                    "religion": "islam",
                    "ethnicity": "hispanic",
                    "languages": [
                      {
                        "id": 1,
                        "code": "en",
                        "known": true,
                        "fluency": 5
                      },
                      {
                        "id": 2,
                        "code": "ar",
                        "known": true,
                        "fluency": 4
                      }
                    ],
                    "birth_date": "1998-06-04",
                    "profession": "profession",
                    "age_display": "Show Age Range",
                    "orientation": "Homosexual",
                    "secret_text": "secret",
                    "short_intro": "short text",
                    "family_views": "family",
                    "education_level": "education",
                    "financial_views": "financial",
                    "location_search": "Fukushima Road",
                    "long_term_views": "long term",
                    "public_username": "noshi",
                    "astrology_belief": 1,
                    "personality_type": "introvert",
                    "location_residence": "Route 9W",
                    "partner_preference": null,
                    "relationship_goals": null,
                    "duration_preference": null,
                    "extended_description": [
                      "long txext",
                      "long text 2"
                    ],
                    "relocation_readiness": "yes",
                    "available_time_evening": null,
                    "available_time_morning": null,
                    "available_time_afternoon": null,
                    "location_search_latitude": "40.9309767",
                    "location_search_place_id": "EjpGdWt1c2hpbWEgUm9hZCwg5LiL44K_55SwIEtvbWluYXRvLCBIaXJhbmFpLCBBb21vcmksIEphcGFuIi4qLAoUChIJL1956lGBm18RW1_AzbzAP00SFAoSCU-NdaRRgZtfEcEQ-3c2pG-a",
                    "location_search_longitude": "140.9568002",
                    "location_difference_reason": "reason",
                    "location_residence_latitude": "40.9602943",
                    "location_residence_place_id": "EhlSb3V0ZSA5VywgQWxwaW5lLCBOSiwgVVNBIi4qLAoUChIJL90qWbIV3YkR-1EsJ9q2-PISFAoSCTPcCM4Y8sKJEUE3jqhaxgKe",
                    "location_residence_longitude": "-73.9204738",
                    "location_search_secondary_text": "下タ田 Kominato, Hiranai, Aomori, Japan",
                    "location_residence_secondary_text": "Alpine, NJ, USA"
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "height": "180",
                    "weight": "80",
                    "hobbies": "6,2",
                    "religion": "islam",
                    "ethnicity": "hispanic",
                    "languages": [
                      {
                        "id": 1,
                        "code": "en",
                        "known": true,
                        "fluency": 5
                      },
                      {
                        "id": 2,
                        "code": "ar",
                        "known": true,
                        "fluency": 4
                      }
                    ],
                    "birth_date": "1998-06-04",
                    "profession": "profession",
                    "age_display": "Show Age Range",
                    "orientation": "Homosexual",
                    "secret_text": "secret",
                    "short_intro": "short text",
                    "family_views": "family",
                    "education_level": "education",
                    "financial_views": "financial",
                    "location_search": "Fukushima Road",
                    "long_term_views": "long term",
                    "public_username": "noshi",
                    "astrology_belief": 1,
                    "personality_type": "introvert",
                    "location_residence": "Route 9W",
                    "partner_preference": null,
                    "relationship_goals": null,
                    "duration_preference": null,
                    "extended_description": [
                      "long txext",
                      "long text 2"
                    ],
                    "relocation_readiness": "yes",
                    "available_time_evening": null,
                    "available_time_morning": null,
                    "available_time_afternoon": null,
                    "location_search_latitude": "40.9309767",
                    "location_search_place_id": "EjpGdWt1c2hpbWEgUm9hZCwg5LiL44K_55SwIEtvbWluYXRvLCBIaXJhbmFpLCBBb21vcmksIEphcGFuIi4qLAoUChIJL1956lGBm18RW1_AzbzAP00SFAoSCU-NdaRRgZtfEcEQ-3c2pG-a",
                    "location_search_longitude": "140.9568002",
                    "location_difference_reason": "reason",
                    "location_residence_latitude": "40.9602943",
                    "location_residence_place_id": "EhlSb3V0ZSA5VywgQWxwaW5lLCBOSiwgVVNBIi4qLAoUChIJL90qWbIV3YkR-1EsJ9q2-PISFAoSCTPcCM4Y8sKJEUE3jqhaxgKe",
                    "location_residence_longitude": "-73.9204738",
                    "location_search_secondary_text": "下タ田 Kominato, Hiranai, Aomori, Japan",
                    "location_residence_secondary_text": "Alpine, NJ, USA"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/profile/relationship": {
      "post": {
        "summary": "Update Profile Relationship Section",
        "tags": [
          "Profile"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "user_id": {
                          "type": "integer"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "deleted_at": {
                          "type": "null"
                        },
                        "updated_at": {
                          "type": "string"
                        },
                        "partner_preference": {
                          "type": "string"
                        },
                        "relationship_goals": {
                          "type": "string"
                        },
                        "duration_preference": {
                          "type": "string"
                        },
                        "available_time_evening": {
                          "type": "string"
                        },
                        "available_time_morning": {
                          "type": "string"
                        },
                        "available_time_afternoon": {
                          "type": "string"
                        }
                      }
                    },
                    "error": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "data": {
                        "id": 25,
                        "user_id": 52,
                        "created_at": "2025-06-03T14:31:06.000000Z",
                        "deleted_at": null,
                        "updated_at": "2025-06-08T13:48:01.000000Z",
                        "partner_preference": "female",
                        "relationship_goals": "Relationship Itself and Possibly Kids",
                        "duration_preference": "Medium term relationship (up to 6 months)",
                        "available_time_evening": "0",
                        "available_time_morning": "0.5",
                        "available_time_afternoon": "0.5"
                      },
                      "error": false,
                      "message": "Relationship preferences updated successfully"
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "data": {
                        "id": 25,
                        "user_id": 52,
                        "created_at": "2025-06-03T14:31:06.000000Z",
                        "deleted_at": null,
                        "updated_at": "2025-06-08T13:48:01.000000Z",
                        "partner_preference": "female",
                        "relationship_goals": "Relationship Itself and Possibly Kids",
                        "duration_preference": "Medium term relationship (up to 6 months)",
                        "available_time_evening": "0",
                        "available_time_morning": "0.5",
                        "available_time_afternoon": "0.5"
                      },
                      "error": false,
                      "message": "Relationship preferences updated successfully"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post-profile-relationship",
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "partner_preference": {
                    "type": "string"
                  },
                  "relationship_goals": {
                    "type": "string"
                  },
                  "duration_preference": {
                    "type": "string"
                  },
                  "available_time_evening": {
                    "type": "string"
                  },
                  "available_time_morning": {
                    "type": "string"
                  },
                  "available_time_afternoon": {
                    "type": "string"
                  }
                },
                "x-examples": {
                  "Example 1": {
                    "partner_preference": "female",
                    "relationship_goals": "Relationship Itself and Possibly Kids",
                    "duration_preference": "Medium term relationship (up to 6 months)",
                    "available_time_evening": "0",
                    "available_time_morning": "0.5",
                    "available_time_afternoon": "0.5"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/profile/financial": {
      "post": {
        "summary": "Update Profile Financial Section",
        "tags": [
          "Profile"
        ],
        "responses": {},
        "operationId": "post-profile-financial",
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "growth_bonus": {
                    "type": "string"
                  },
                  "growth_clause": {
                    "type": "string"
                  },
                  "marriage_gift": {
                    "type": "string"
                  },
                  "termination_comp": {
                    "type": "string"
                  },
                  "milestone_amounts": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "milestone_periods": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "termination_clause": {
                    "type": "string"
                  },
                  "first_child_payment": {
                    "type": "string"
                  },
                  "monthly_child_budget": {
                    "type": "string"
                  },
                  "second_child_payment": {
                    "type": "string"
                  },
                  "capital_level_precise": {
                    "type": "string"
                  },
                  "monthly_income_precise": {
                    "type": "string"
                  },
                  "lifestyle_support_budget": {
                    "type": "string"
                  },
                  "subsequent_child_payment": {
                    "type": "string"
                  },
                  "capital_level_less_precise": {
                    "type": "string"
                  },
                  "monthly_income_less_precise": {
                    "type": "string"
                  }
                },
                "x-examples": {
                  "Example 1": {
                    "growth_bonus": "2.00",
                    "growth_clause": "2",
                    "marriage_gift": "323.00",
                    "termination_comp": "12344.00",
                    "milestone_amounts": [
                      "23.00",
                      "123.00"
                    ],
                    "milestone_periods": [
                      "1y",
                      "3y"
                    ],
                    "termination_clause": "2",
                    "first_child_payment": "2400.00",
                    "monthly_child_budget": "200.00",
                    "second_child_payment": "2000.00",
                    "capital_level_precise": "$1,000-1,999",
                    "monthly_income_precise": "$1,000-1,999",
                    "lifestyle_support_budget": "1200.00",
                    "subsequent_child_payment": "122.00",
                    "capital_level_less_precise": "$1,000-9,999",
                    "monthly_income_less_precise": "$100-999"
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "growth_bonus": "2.00",
                    "growth_clause": "2",
                    "marriage_gift": "323.00",
                    "termination_comp": "12344.00",
                    "milestone_amounts": [
                      "23.00",
                      "123.00"
                    ],
                    "milestone_periods": [
                      "1y",
                      "3y"
                    ],
                    "termination_clause": "2",
                    "first_child_payment": "2400.00",
                    "monthly_child_budget": "200.00",
                    "second_child_payment": "2000.00",
                    "capital_level_precise": "$1,000-1,999",
                    "monthly_income_precise": "$1,000-1,999",
                    "lifestyle_support_budget": "1200.00",
                    "subsequent_child_payment": "122.00",
                    "capital_level_less_precise": "$1,000-9,999",
                    "monthly_income_less_precise": "$100-999"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/profile/living": {
      "post": {
        "summary": "Update Profile Living Section",
        "tags": [
          "Profile"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "user_id": {
                          "type": "integer"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        },
                        "housing_image": {
                          "type": "string"
                        },
                        "car_availability": {
                          "type": "null"
                        },
                        "driver_availability": {
                          "type": "null"
                        },
                        "housing_image_thumbnail": {
                          "type": "string"
                        },
                        "living_format_test_moon": {
                          "type": "null"
                        },
                        "driving_license_availability": {
                          "type": "null"
                        },
                        "living_format_final_contract": {
                          "type": "null"
                        },
                        "living_format_test_moon_image": {
                          "type": "string"
                        },
                        "living_format_test_moon_image_url": {
                          "type": "string"
                        },
                        "living_format_final_contract_image": {
                          "type": "string"
                        },
                        "living_format_preliminary_contract": {
                          "type": "null"
                        },
                        "living_format_final_contract_image_url": {
                          "type": "string"
                        },
                        "living_format_test_moon_image_thumbnail": {
                          "type": "string"
                        },
                        "living_format_preliminary_contract_image": {
                          "type": "string"
                        },
                        "living_format_test_moon_image_thumbnail_url": {
                          "type": "string"
                        },
                        "living_format_final_contract_image_thumbnail": {
                          "type": "string"
                        },
                        "living_format_preliminary_contract_image_url": {
                          "type": "string"
                        },
                        "living_format_final_contract_image_thumbnail_url": {
                          "type": "string"
                        },
                        "living_format_preliminary_contract_image_thumbnail": {
                          "type": "string"
                        },
                        "living_format_preliminary_contract_image_thumbnail_url": {
                          "type": "string"
                        }
                      }
                    },
                    "error": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "data": {
                        "id": 18,
                        "user_id": 52,
                        "created_at": "2025-06-08T13:54:14.000000Z",
                        "updated_at": "2025-06-08T13:54:14.000000Z",
                        "housing_image": "living-form-pictures/pi_52_17493908544440.jpg",
                        "car_availability": null,
                        "driver_availability": null,
                        "housing_image_thumbnail": "living-form-pictures/pi_thumb_52_17493908544440.jpg",
                        "living_format_test_moon": null,
                        "driving_license_availability": null,
                        "living_format_final_contract": null,
                        "living_format_test_moon_image": "living-form-pictures/pi_52_17493908544223.jpg",
                        "living_format_test_moon_image_url": "http://localhost:8000/storage/living-form-pictures/pi_52_17493908544223.jpg",
                        "living_format_final_contract_image": "living-form-pictures/pi_52_17493908545768.jpg",
                        "living_format_preliminary_contract": null,
                        "living_format_final_contract_image_url": "http://localhost:8000/storage/living-form-pictures/pi_52_17493908545768.jpg",
                        "living_format_test_moon_image_thumbnail": "living-form-pictures/pi_thumb_52_17493908544223.jpg",
                        "living_format_preliminary_contract_image": "living-form-pictures/pi_52_17493908549162.jpg",
                        "living_format_test_moon_image_thumbnail_url": "http://localhost:8000/storage/living-form-pictures/pi_thumb_52_17493908544223.jpg",
                        "living_format_final_contract_image_thumbnail": "living-form-pictures/pi_thumb_52_17493908545768.jpg",
                        "living_format_preliminary_contract_image_url": "http://localhost:8000/storage/living-form-pictures/pi_52_17493908549162.jpg",
                        "living_format_final_contract_image_thumbnail_url": "http://localhost:8000/storage/living-form-pictures/pi_thumb_52_17493908545768.jpg",
                        "living_format_preliminary_contract_image_thumbnail": "living-form-pictures/pi_thumb_52_17493908549162.jpg",
                        "living_format_preliminary_contract_image_thumbnail_url": "http://localhost:8000/storage/living-form-pictures/pi_thumb_52_17493908549162.jpg"
                      },
                      "error": false,
                      "message": "Living profile updated successfully"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post-profile-living",
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "housing_image": {
                    "type": "object",
                    "properties": {}
                  },
                  "car_availability": {
                    "type": "null"
                  },
                  "driver_availability": {
                    "type": "null"
                  },
                  "living_format_test_moon": {
                    "type": "null"
                  },
                  "driving_license_availability": {
                    "type": "null"
                  },
                  "living_format_final_contract": {
                    "type": "null"
                  },
                  "living_format_test_moon_image": {
                    "type": "object",
                    "properties": {}
                  },
                  "living_format_final_contract_image": {
                    "type": "object",
                    "properties": {}
                  },
                  "living_format_preliminary_contract": {
                    "type": "null"
                  },
                  "living_format_preliminary_contract_image": {
                    "type": "object",
                    "properties": {}
                  }
                },
                "x-examples": {
                  "Example 1": {
                    "housing_image": {},
                    "car_availability": null,
                    "driver_availability": null,
                    "living_format_test_moon": null,
                    "driving_license_availability": null,
                    "living_format_final_contract": null,
                    "living_format_test_moon_image": {},
                    "living_format_final_contract_image": {},
                    "living_format_preliminary_contract": null,
                    "living_format_preliminary_contract_image": {}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/profile/images": {
      "get": {
        "summary": "Get Album Images",
        "tags": [
          "Profile"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "url": {
                            "type": "string"
                          },
                          "thumbnail_url": {
                            "type": "string"
                          },
                          "caption": {
                            "type": "null"
                          },
                          "created_at": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "error": false,
                      "images": [
                        {
                          "id": 49,
                          "url": "http://localhost:8000/storage/profile-images/pi_14_17485027723884.jpg",
                          "thumbnail_url": "http://localhost:8000/storage/profile-images/pi_thumb_14_17485027723884.jpg",
                          "caption": null,
                          "created_at": "2025-05-02T08:34:16.000000Z"
                        },
                        {
                          "id": 56,
                          "url": "http://localhost:8000/storage/profile-images/pi_14_17485031192573.jpg",
                          "thumbnail_url": "http://localhost:8000/storage/profile-images/pi_thumb_14_17485031192573.jpg",
                          "caption": null,
                          "created_at": "2025-05-05T04:16:54.000000Z"
                        },
                        {
                          "id": 58,
                          "url": "http://localhost:8000/storage/profile-images/pi_14_17485032486496.jpg",
                          "thumbnail_url": "http://localhost:8000/storage/profile-images/pi_thumb_14_17485032486496.jpg",
                          "caption": null,
                          "created_at": "2025-05-05T04:57:27.000000Z"
                        }
                      ]
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "error": false,
                      "images": [
                        {
                          "id": 49,
                          "url": "http://localhost:8000/storage/profile-images/pi_14_17485027723884.jpg",
                          "thumbnail_url": "http://localhost:8000/storage/profile-images/pi_thumb_14_17485027723884.jpg",
                          "caption": null,
                          "created_at": "2025-05-02T08:34:16.000000Z"
                        },
                        {
                          "id": 56,
                          "url": "http://localhost:8000/storage/profile-images/pi_14_17485031192573.jpg",
                          "thumbnail_url": "http://localhost:8000/storage/profile-images/pi_thumb_14_17485031192573.jpg",
                          "caption": null,
                          "created_at": "2025-05-05T04:16:54.000000Z"
                        },
                        {
                          "id": 58,
                          "url": "http://localhost:8000/storage/profile-images/pi_14_17485032486496.jpg",
                          "thumbnail_url": "http://localhost:8000/storage/profile-images/pi_thumb_14_17485032486496.jpg",
                          "caption": null,
                          "created_at": "2025-05-05T04:57:27.000000Z"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-profile-images",
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "places",
                "interests",
                "fashion"
              ]
            },
            "in": "query",
            "name": "album_type"
          }
        ]
      },
      "post": {
        "summary": "Upload Album Images",
        "tags": [
          "Profile"
        ],
        "responses": {},
        "operationId": "post-profile-images",
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "image"
                ],
                "properties": {
                  "image": {
                    "type": "object",
                    "x-stoplight": {
                      "id": "xymylz1x7oso7"
                    }
                  },
                  "profile_image_id": {
                    "type": "integer",
                    "x-stoplight": {
                      "id": "1lvtxvpeyo2ti"
                    },
                    "description": "Send profile image id to update existing image, set null to upload new image"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/profile/images/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "delete": {
        "summary": "Delete Album Images",
        "tags": [
          "Profile"
        ],
        "responses": {},
        "operationId": "delete-profile-images-id",
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/places/autocomplete": {
      "get": {
        "summary": "Get Place Suggestions",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "suggestions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "placePrediction": {
                            "type": "object",
                            "properties": {
                              "text": {
                                "type": "object",
                                "properties": {
                                  "text": {
                                    "type": "string"
                                  },
                                  "matches": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "endOffset": {
                                          "type": "integer"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "place": {
                                "type": "string"
                              },
                              "types": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "placeId": {
                                "type": "string"
                              },
                              "structuredFormat": {
                                "type": "object",
                                "properties": {
                                  "mainText": {
                                    "type": "object",
                                    "properties": {
                                      "text": {
                                        "type": "string"
                                      },
                                      "matches": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "endOffset": {
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "secondaryText": {
                                    "type": "object",
                                    "properties": {
                                      "text": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "suggestions": [
                        {
                          "placePrediction": {
                            "text": {
                              "text": "Dubai - United Arab Emirates",
                              "matches": [
                                {
                                  "endOffset": 5
                                }
                              ]
                            },
                            "place": "places/ChIJRcbZaklDXz4RYlEphFBu5r0",
                            "types": [
                              "locality",
                              "political",
                              "geocode"
                            ],
                            "placeId": "ChIJRcbZaklDXz4RYlEphFBu5r0",
                            "structuredFormat": {
                              "mainText": {
                                "text": "Dubai",
                                "matches": [
                                  {
                                    "endOffset": 5
                                  }
                                ]
                              },
                              "secondaryText": {
                                "text": "United Arab Emirates"
                              }
                            }
                          }
                        },
                        {
                          "placePrediction": {
                            "text": {
                              "text": "Dubai Mall - Dubai - United Arab Emirates",
                              "matches": [
                                {
                                  "endOffset": 5
                                }
                              ]
                            },
                            "place": "places/ChIJB1zIKShoXz4RnbaTPPup7aU",
                            "types": [
                              "shopping_mall",
                              "point_of_interest",
                              "establishment"
                            ],
                            "placeId": "ChIJB1zIKShoXz4RnbaTPPup7aU",
                            "structuredFormat": {
                              "mainText": {
                                "text": "Dubai Mall",
                                "matches": [
                                  {
                                    "endOffset": 5
                                  }
                                ]
                              },
                              "secondaryText": {
                                "text": "Dubai - United Arab Emirates"
                              }
                            }
                          }
                        },
                        {
                          "placePrediction": {
                            "text": {
                              "text": "Dubai Hills Mall - Al Khail Road - Dubai - United Arab Emirates",
                              "matches": [
                                {
                                  "endOffset": 5
                                }
                              ]
                            },
                            "place": "places/ChIJ7d_LEEJvXz4R8oq3hLV_PmQ",
                            "types": [
                              "point_of_interest",
                              "establishment",
                              "shopping_mall"
                            ],
                            "placeId": "ChIJ7d_LEEJvXz4R8oq3hLV_PmQ",
                            "structuredFormat": {
                              "mainText": {
                                "text": "Dubai Hills Mall",
                                "matches": [
                                  {
                                    "endOffset": 5
                                  }
                                ]
                              },
                              "secondaryText": {
                                "text": "Al Khail Road - Dubai - United Arab Emirates"
                              }
                            }
                          }
                        },
                        {
                          "placePrediction": {
                            "text": {
                              "text": "Dubai International Airport (DXB) - Dubai - United Arab Emirates",
                              "matches": [
                                {
                                  "endOffset": 5
                                }
                              ]
                            },
                            "place": "places/ChIJaQ4mkwZdXz4R6e5IegDUleY",
                            "types": [
                              "airport",
                              "establishment",
                              "point_of_interest",
                              "international_airport"
                            ],
                            "placeId": "ChIJaQ4mkwZdXz4R6e5IegDUleY",
                            "structuredFormat": {
                              "mainText": {
                                "text": "Dubai International Airport (DXB)",
                                "matches": [
                                  {
                                    "endOffset": 5
                                  }
                                ]
                              },
                              "secondaryText": {
                                "text": "Dubai - United Arab Emirates"
                              }
                            }
                          }
                        },
                        {
                          "placePrediction": {
                            "text": {
                              "text": "Dubai Marina - Dubai - United Arab Emirates",
                              "matches": [
                                {
                                  "endOffset": 5
                                }
                              ]
                            },
                            "place": "places/ChIJ4ybBAlRrXz4RfG3EVWYeUbk",
                            "types": [
                              "neighborhood",
                              "political",
                              "geocode"
                            ],
                            "placeId": "ChIJ4ybBAlRrXz4RfG3EVWYeUbk",
                            "structuredFormat": {
                              "mainText": {
                                "text": "Dubai Marina",
                                "matches": [
                                  {
                                    "endOffset": 5
                                  }
                                ]
                              },
                              "secondaryText": {
                                "text": "Dubai - United Arab Emirates"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "suggestions": [
                        {
                          "placePrediction": {
                            "text": {
                              "text": "Dubai - United Arab Emirates",
                              "matches": [
                                {
                                  "endOffset": 5
                                }
                              ]
                            },
                            "place": "places/ChIJRcbZaklDXz4RYlEphFBu5r0",
                            "types": [
                              "locality",
                              "political",
                              "geocode"
                            ],
                            "placeId": "ChIJRcbZaklDXz4RYlEphFBu5r0",
                            "structuredFormat": {
                              "mainText": {
                                "text": "Dubai",
                                "matches": [
                                  {
                                    "endOffset": 5
                                  }
                                ]
                              },
                              "secondaryText": {
                                "text": "United Arab Emirates"
                              }
                            }
                          }
                        },
                        {
                          "placePrediction": {
                            "text": {
                              "text": "Dubai Mall - Dubai - United Arab Emirates",
                              "matches": [
                                {
                                  "endOffset": 5
                                }
                              ]
                            },
                            "place": "places/ChIJB1zIKShoXz4RnbaTPPup7aU",
                            "types": [
                              "shopping_mall",
                              "point_of_interest",
                              "establishment"
                            ],
                            "placeId": "ChIJB1zIKShoXz4RnbaTPPup7aU",
                            "structuredFormat": {
                              "mainText": {
                                "text": "Dubai Mall",
                                "matches": [
                                  {
                                    "endOffset": 5
                                  }
                                ]
                              },
                              "secondaryText": {
                                "text": "Dubai - United Arab Emirates"
                              }
                            }
                          }
                        },
                        {
                          "placePrediction": {
                            "text": {
                              "text": "Dubai Hills Mall - Al Khail Road - Dubai - United Arab Emirates",
                              "matches": [
                                {
                                  "endOffset": 5
                                }
                              ]
                            },
                            "place": "places/ChIJ7d_LEEJvXz4R8oq3hLV_PmQ",
                            "types": [
                              "point_of_interest",
                              "establishment",
                              "shopping_mall"
                            ],
                            "placeId": "ChIJ7d_LEEJvXz4R8oq3hLV_PmQ",
                            "structuredFormat": {
                              "mainText": {
                                "text": "Dubai Hills Mall",
                                "matches": [
                                  {
                                    "endOffset": 5
                                  }
                                ]
                              },
                              "secondaryText": {
                                "text": "Al Khail Road - Dubai - United Arab Emirates"
                              }
                            }
                          }
                        },
                        {
                          "placePrediction": {
                            "text": {
                              "text": "Dubai International Airport (DXB) - Dubai - United Arab Emirates",
                              "matches": [
                                {
                                  "endOffset": 5
                                }
                              ]
                            },
                            "place": "places/ChIJaQ4mkwZdXz4R6e5IegDUleY",
                            "types": [
                              "airport",
                              "establishment",
                              "point_of_interest",
                              "international_airport"
                            ],
                            "placeId": "ChIJaQ4mkwZdXz4R6e5IegDUleY",
                            "structuredFormat": {
                              "mainText": {
                                "text": "Dubai International Airport (DXB)",
                                "matches": [
                                  {
                                    "endOffset": 5
                                  }
                                ]
                              },
                              "secondaryText": {
                                "text": "Dubai - United Arab Emirates"
                              }
                            }
                          }
                        },
                        {
                          "placePrediction": {
                            "text": {
                              "text": "Dubai Marina - Dubai - United Arab Emirates",
                              "matches": [
                                {
                                  "endOffset": 5
                                }
                              ]
                            },
                            "place": "places/ChIJ4ybBAlRrXz4RfG3EVWYeUbk",
                            "types": [
                              "neighborhood",
                              "political",
                              "geocode"
                            ],
                            "placeId": "ChIJ4ybBAlRrXz4RfG3EVWYeUbk",
                            "structuredFormat": {
                              "mainText": {
                                "text": "Dubai Marina",
                                "matches": [
                                  {
                                    "endOffset": 5
                                  }
                                ]
                              },
                              "secondaryText": {
                                "text": "Dubai - United Arab Emirates"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-places-autocomplete",
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "input"
          }
        ]
      }
    },
    "/places/details": {
      "get": {
        "summary": "Get Place's Details",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "types": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "location": {
                      "type": "object",
                      "properties": {
                        "latitude": {
                          "type": "number"
                        },
                        "longitude": {
                          "type": "number"
                        }
                      }
                    },
                    "displayName": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "string"
                        },
                        "languageCode": {
                          "type": "string"
                        }
                      }
                    },
                    "formattedAddress": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "id": "ElZKbC4gTWVycGF0aSwgVGViaW5nIFRpbmdnaSBPa3VyYSwgS2VjLiBSdW1iYWkgUGVzaXNpciwgS290YSBQZWthbmJhcnUsIFJpYXUsIEluZG9uZXNpYSIuKiwKFAoSCeveS3AzrdUxEQPRJaQdsrCKEhQKEgnPsgE4nlLUMRFv7lJV5LLYFQ",
                      "types": [
                        "route"
                      ],
                      "location": {
                        "latitude": 0.5887691,
                        "longitude": 101.4962924
                      },
                      "displayName": {
                        "text": "Jalan Merpati",
                        "languageCode": "id"
                      },
                      "formattedAddress": "Jl. Merpati, Tebing Tinggi Okura, Kec. Rumbai Pesisir, Kota Pekanbaru, Riau, Indonesia"
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "id": "ChIJRcbZaklDXz4RYlEphFBu5r0",
                      "types": [
                        "locality",
                        "political"
                      ],
                      "formattedAddress": "Dubai - United Arab Emirates",
                      "location": {
                        "latitude": 25.2048493,
                        "longitude": 55.2707828
                      },
                      "displayName": {
                        "text": "Dubai",
                        "languageCode": "en"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-places-detail",
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "place_id"
          }
        ]
      },
      "parameters": []
    },
    "/places/reverse-geocode": {
      "get": {
        "summary": "Get Place details using lat lng",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "plus_code": {
                      "type": "object",
                      "properties": {
                        "compound_code": {
                          "type": "string"
                        },
                        "global_code": {
                          "type": "string"
                        }
                      }
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address_components": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "long_name": {
                                  "type": "string"
                                },
                                "short_name": {
                                  "type": "string"
                                },
                                "types": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "formatted_address": {
                            "type": "string"
                          },
                          "geometry": {
                            "type": "object",
                            "properties": {
                              "bounds": {
                                "type": "object",
                                "properties": {
                                  "northeast": {
                                    "type": "object",
                                    "properties": {
                                      "lat": {
                                        "type": "number"
                                      },
                                      "lng": {
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "southwest": {
                                    "type": "object",
                                    "properties": {
                                      "lat": {
                                        "type": "number"
                                      },
                                      "lng": {
                                        "type": "number"
                                      }
                                    }
                                  }
                                }
                              },
                              "location": {
                                "type": "object",
                                "properties": {
                                  "lat": {
                                    "type": "number"
                                  },
                                  "lng": {
                                    "type": "number"
                                  }
                                }
                              },
                              "location_type": {
                                "type": "string"
                              },
                              "viewport": {
                                "type": "object",
                                "properties": {
                                  "northeast": {
                                    "type": "object",
                                    "properties": {
                                      "lat": {
                                        "type": "number"
                                      },
                                      "lng": {
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "southwest": {
                                    "type": "object",
                                    "properties": {
                                      "lat": {
                                        "type": "number"
                                      },
                                      "lng": {
                                        "type": "number"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "place_id": {
                            "type": "string"
                          },
                          "types": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "plus_code": {
                        "compound_code": "5C7R+54G Dubai - United Arab Emirates",
                        "global_code": "7HQQ5C7R+54G"
                      },
                      "results": [
                        {
                          "address_components": [
                            {
                              "long_name": "Tariaq Bedon Esm",
                              "short_name": "Tariaq Bedon Esm",
                              "types": [
                                "route"
                              ]
                            },
                            {
                              "long_name": "Warisan",
                              "short_name": "Warisan",
                              "types": [
                                "neighborhood",
                                "political"
                              ]
                            },
                            {
                              "long_name": "Dubai",
                              "short_name": "Dubai",
                              "types": [
                                "locality",
                                "political"
                              ]
                            },
                            {
                              "long_name": "Dubai",
                              "short_name": "Dubai",
                              "types": [
                                "administrative_area_level_1",
                                "political"
                              ]
                            },
                            {
                              "long_name": "United Arab Emirates",
                              "short_name": "AE",
                              "types": [
                                "country",
                                "political"
                              ]
                            }
                          ],
                          "formatted_address": "Tariaq Bedon Esm - Warisan - Dubai - United Arab Emirates",
                          "geometry": {
                            "bounds": {
                              "northeast": {
                                "lat": 25.1629646,
                                "lng": 55.4471573
                              },
                              "southwest": {
                                "lat": 25.1608828,
                                "lng": 55.4387188
                              }
                            },
                            "location": {
                              "lat": 25.1619908,
                              "lng": 55.442958
                            },
                            "location_type": "GEOMETRIC_CENTER",
                            "viewport": {
                              "northeast": {
                                "lat": 25.1632726802915,
                                "lng": 55.4471573
                              },
                              "southwest": {
                                "lat": 25.1605747197085,
                                "lng": 55.4387188
                              }
                            }
                          },
                          "place_id": "ChIJq1o-8n5hXz4Romnf_RDLWL8",
                          "types": [
                            "route"
                          ]
                        },
                        {
                          "address_components": [
                            {
                              "long_name": "Dubai",
                              "short_name": "Dubai",
                              "types": [
                                "locality",
                                "political"
                              ]
                            },
                            {
                              "long_name": "Dubai",
                              "short_name": "Dubai",
                              "types": [
                                "administrative_area_level_1",
                                "political"
                              ]
                            },
                            {
                              "long_name": "United Arab Emirates",
                              "short_name": "AE",
                              "types": [
                                "country",
                                "political"
                              ]
                            }
                          ],
                          "formatted_address": "Dubai - United Arab Emirates",
                          "geometry": {
                            "bounds": {
                              "northeast": {
                                "lat": 25.3585607,
                                "lng": 55.5645216
                              },
                              "southwest": {
                                "lat": 24.7934842,
                                "lng": 54.89045429999999
                              }
                            },
                            "location": {
                              "lat": 25.2048493,
                              "lng": 55.2707828
                            },
                            "location_type": "APPROXIMATE",
                            "viewport": {
                              "northeast": {
                                "lat": 25.3585607,
                                "lng": 55.5645216
                              },
                              "southwest": {
                                "lat": 24.7934842,
                                "lng": 54.89045429999999
                              }
                            }
                          },
                          "place_id": "ChIJRcbZaklDXz4RYlEphFBu5r0",
                          "types": [
                            "locality",
                            "political"
                          ]
                        }
                      ],
                      "status": "OK"
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "plus_code": {
                        "compound_code": "5C7R+54G Dubai - United Arab Emirates",
                        "global_code": "7HQQ5C7R+54G"
                      },
                      "results": [
                        {
                          "address_components": [
                            {
                              "long_name": "Tariaq Bedon Esm",
                              "short_name": "Tariaq Bedon Esm",
                              "types": [
                                "route"
                              ]
                            },
                            {
                              "long_name": "Warisan",
                              "short_name": "Warisan",
                              "types": [
                                "neighborhood",
                                "political"
                              ]
                            },
                            {
                              "long_name": "Dubai",
                              "short_name": "Dubai",
                              "types": [
                                "locality",
                                "political"
                              ]
                            },
                            {
                              "long_name": "Dubai",
                              "short_name": "Dubai",
                              "types": [
                                "administrative_area_level_1",
                                "political"
                              ]
                            },
                            {
                              "long_name": "United Arab Emirates",
                              "short_name": "AE",
                              "types": [
                                "country",
                                "political"
                              ]
                            }
                          ],
                          "formatted_address": "Tariaq Bedon Esm - Warisan - Dubai - United Arab Emirates",
                          "geometry": {
                            "bounds": {
                              "northeast": {
                                "lat": 25.1629646,
                                "lng": 55.4471573
                              },
                              "southwest": {
                                "lat": 25.1608828,
                                "lng": 55.4387188
                              }
                            },
                            "location": {
                              "lat": 25.1619908,
                              "lng": 55.442958
                            },
                            "location_type": "GEOMETRIC_CENTER",
                            "viewport": {
                              "northeast": {
                                "lat": 25.1632726802915,
                                "lng": 55.4471573
                              },
                              "southwest": {
                                "lat": 25.1605747197085,
                                "lng": 55.4387188
                              }
                            }
                          },
                          "place_id": "ChIJq1o-8n5hXz4Romnf_RDLWL8",
                          "types": [
                            "route"
                          ]
                        },
                        {
                          "address_components": [
                            {
                              "long_name": "Dubai",
                              "short_name": "Dubai",
                              "types": [
                                "locality",
                                "political"
                              ]
                            },
                            {
                              "long_name": "Dubai",
                              "short_name": "Dubai",
                              "types": [
                                "administrative_area_level_1",
                                "political"
                              ]
                            },
                            {
                              "long_name": "United Arab Emirates",
                              "short_name": "AE",
                              "types": [
                                "country",
                                "political"
                              ]
                            }
                          ],
                          "formatted_address": "Dubai - United Arab Emirates",
                          "geometry": {
                            "bounds": {
                              "northeast": {
                                "lat": 25.3585607,
                                "lng": 55.5645216
                              },
                              "southwest": {
                                "lat": 24.7934842,
                                "lng": 54.89045429999999
                              }
                            },
                            "location": {
                              "lat": 25.2048493,
                              "lng": 55.2707828
                            },
                            "location_type": "APPROXIMATE",
                            "viewport": {
                              "northeast": {
                                "lat": 25.3585607,
                                "lng": 55.5645216
                              },
                              "southwest": {
                                "lat": 24.7934842,
                                "lng": 54.89045429999999
                              }
                            }
                          },
                          "place_id": "ChIJRcbZaklDXz4RYlEphFBu5r0",
                          "types": [
                            "locality",
                            "political"
                          ]
                        }
                      ],
                      "status": "OK"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-places-reverse-geocode",
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "longitude"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "latitude"
          }
        ]
      }
    },
    "/custom-parameter-categories": {
      "get": {
        "summary": "Get Custom Parameter Categories",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "placeholder": {
                            "type": "string"
                          },
                          "input_type": {
                            "type": "string"
                          },
                          "options": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "string"
                                },
                                "label": {
                                  "type": "string"
                                },
                                "img": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "error": false,
                      "data": [
                        {
                          "id": "profession",
                          "name": "Profession",
                          "description": "Search by profession or occupation",
                          "placeholder": "e.g., Software Engineer, Doctor, Teacher",
                          "input_type": "text"
                        },
                        {
                          "id": "education",
                          "name": "Education Level and Field",
                          "description": "Search by education level and field of study",
                          "placeholder": "e.g., Bachelor's in Computer Science, MBA",
                          "input_type": "text"
                        },
                        {
                          "id": "relationship_goals",
                          "name": "Relationship Goals",
                          "description": "Search by relationship goals and intentions",
                          "placeholder": "Select relationship goal",
                          "input_type": "select",
                          "options": [
                            {
                              "value": "medium_term",
                              "label": "For a medium-term relationship",
                              "img": "http://localhost:8001/static/icons/rt_medium_term.png"
                            },
                            {
                              "value": "long_term",
                              "label": "For a long-term relationship",
                              "img": "http://localhost:8001/static/icons/rt_long_term.png"
                            },
                            {
                              "value": "childbirth",
                              "label": "For a childbirth relationship",
                              "img": "http://localhost:8001/static/icons/rt_childbirth.png"
                            }
                          ]
                        },
                        {
                          "id": "religion",
                          "name": "Religion",
                          "description": "Search by religious affiliation",
                          "placeholder": "Select religion",
                          "input_type": "select",
                          "options": [
                            {
                              "value": "christianity",
                              "label": "Christianity"
                            },
                            {
                              "value": "islam",
                              "label": "Islam"
                            },
                            {
                              "value": "hinduism",
                              "label": "Hinduism"
                            },
                            {
                              "value": "buddhism",
                              "label": "Buddhism"
                            },
                            {
                              "value": "sikhism",
                              "label": "Sikhism"
                            },
                            {
                              "value": "judaism",
                              "label": "Judaism"
                            },
                            {
                              "value": "other",
                              "label": "Other"
                            },
                            {
                              "value": "none",
                              "label": "None"
                            },
                            {
                              "value": "spiritual",
                              "label": "Spiritual but not religious"
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "error": false,
                      "data": [
                        {
                          "id": "profession",
                          "name": "Profession",
                          "description": "Search by profession or occupation",
                          "placeholder": "e.g., Software Engineer, Doctor, Teacher",
                          "input_type": "text"
                        },
                        {
                          "id": "education",
                          "name": "Education Level and Field",
                          "description": "Search by education level and field of study",
                          "placeholder": "e.g., Bachelor's in Computer Science, MBA",
                          "input_type": "text"
                        },
                        {
                          "id": "relationship_goals",
                          "name": "Relationship Goals",
                          "description": "Search by relationship goals and intentions",
                          "placeholder": "Select relationship goal",
                          "input_type": "select",
                          "options": [
                            {
                              "value": "medium_term",
                              "label": "For a medium-term relationship",
                              "img": "http://localhost:8001/static/icons/rt_medium_term.png"
                            },
                            {
                              "value": "long_term",
                              "label": "For a long-term relationship",
                              "img": "http://localhost:8001/static/icons/rt_long_term.png"
                            },
                            {
                              "value": "childbirth",
                              "label": "For a childbirth relationship",
                              "img": "http://localhost:8001/static/icons/rt_childbirth.png"
                            }
                          ]
                        },
                        {
                          "id": "religion",
                          "name": "Religion",
                          "description": "Search by religious affiliation",
                          "placeholder": "Select religion",
                          "input_type": "select",
                          "options": [
                            {
                              "value": "christianity",
                              "label": "Christianity"
                            },
                            {
                              "value": "islam",
                              "label": "Islam"
                            },
                            {
                              "value": "hinduism",
                              "label": "Hinduism"
                            },
                            {
                              "value": "buddhism",
                              "label": "Buddhism"
                            },
                            {
                              "value": "sikhism",
                              "label": "Sikhism"
                            },
                            {
                              "value": "judaism",
                              "label": "Judaism"
                            },
                            {
                              "value": "other",
                              "label": "Other"
                            },
                            {
                              "value": "none",
                              "label": "None"
                            },
                            {
                              "value": "spiritual",
                              "label": "Spiritual but not religious"
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-custom-parameter-categories",
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/search-templates": {
      "get": {
        "summary": "Get User's Search Templates",
        "tags": [
          "Search"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "criteria": {
                        "type": "object",
                        "properties": {
                          "location": {
                            "type": "object",
                            "properties": {
                              "places": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "types": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "radius": {
                                      "type": "integer"
                                    },
                                    "location": {
                                      "type": "object",
                                      "properties": {
                                        "latitude": {
                                          "type": "number"
                                        },
                                        "longitude": {
                                          "type": "number"
                                        }
                                      }
                                    },
                                    "place_id": {
                                      "type": "string"
                                    },
                                    "description": {
                                      "type": "string"
                                    },
                                    "secondary_text": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "is_worldwide": {
                                "type": "boolean"
                              }
                            }
                          },
                          "languages": {
                            "type": "object",
                            "properties": {
                              "selected": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "match_mode": {
                                "type": "string"
                              }
                            }
                          },
                          "monthly_budget": {
                            "type": "object",
                            "properties": {
                              "max": {
                                "type": "integer"
                              },
                              "min": {
                                "type": "integer"
                              }
                            }
                          },
                          "custom_parameters": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {}
                            }
                          }
                        }
                      },
                      "is_default": {
                        "type": "boolean"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": [
                      {
                        "id": 40,
                        "name": "Search Template 1",
                        "criteria": {
                          "location": {
                            "places": [
                              {
                                "id": "ChIJ_bI-HMwxMTARYoKQpsgx1CM",
                                "name": "Medan",
                                "types": [
                                  "locality",
                                  "political",
                                  "geocode"
                                ],
                                "radius": 10,
                                "location": {
                                  "latitude": 3.5951956000000003,
                                  "longitude": 98.6722227
                                },
                                "place_id": "ChIJ_bI-HMwxMTARYoKQpsgx1CM",
                                "description": "Medan, Medan City, North Sumatra, Indonesia",
                                "secondary_text": "Medan City, North Sumatra, Indonesia"
                              }
                            ],
                            "is_worldwide": false
                          },
                          "languages": {
                            "selected": [
                              "English"
                            ],
                            "match_mode": "any"
                          },
                          "monthly_budget": {
                            "max": 10000,
                            "min": 1000
                          },
                          "custom_parameters": []
                        },
                        "is_default": false,
                        "created_at": "2025-05-02T11:33:13.000000Z",
                        "updated_at": "2025-05-09T12:49:53.000000Z"
                      }
                    ]
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": [
                      {
                        "id": 40,
                        "name": "Search Template 1",
                        "criteria": {
                          "location": {
                            "places": [
                              {
                                "id": "ChIJ_bI-HMwxMTARYoKQpsgx1CM",
                                "name": "Medan",
                                "types": [
                                  "locality",
                                  "political",
                                  "geocode"
                                ],
                                "radius": 10,
                                "location": {
                                  "latitude": 3.5951956000000003,
                                  "longitude": 98.6722227
                                },
                                "place_id": "ChIJ_bI-HMwxMTARYoKQpsgx1CM",
                                "description": "Medan, Medan City, North Sumatra, Indonesia",
                                "secondary_text": "Medan City, North Sumatra, Indonesia"
                              }
                            ],
                            "is_worldwide": false
                          },
                          "languages": {
                            "selected": [
                              "English"
                            ],
                            "match_mode": "any"
                          },
                          "monthly_budget": {
                            "max": 10000,
                            "min": 1000
                          },
                          "custom_parameters": []
                        },
                        "is_default": false,
                        "created_at": "2025-05-02T11:33:13.000000Z",
                        "updated_at": "2025-05-09T12:49:53.000000Z"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "get-search-templates",
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "post": {
        "summary": "Create New Search Template",
        "tags": [
          "Search"
        ],
        "responses": {},
        "operationId": "post-search-templates",
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "criteria": {
                    "type": "object",
                    "properties": {
                      "location": {
                        "type": "object",
                        "properties": {
                          "places": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "types": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "radius": {
                                  "type": "integer"
                                },
                                "location": {
                                  "type": "object",
                                  "properties": {
                                    "latitude": {
                                      "type": "number"
                                    },
                                    "longitude": {
                                      "type": "number"
                                    }
                                  }
                                },
                                "place_id": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "secondary_text": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "is_worldwide": {
                            "type": "boolean"
                          }
                        }
                      },
                      "languages": {
                        "type": "object",
                        "properties": {
                          "selected": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "match_mode": {
                            "type": "string"
                          }
                        }
                      },
                      "monthly_budget": {
                        "type": "object",
                        "properties": {
                          "max": {
                            "type": "string"
                          },
                          "min": {
                            "type": "string"
                          }
                        }
                      },
                      "custom_parameters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {}
                        }
                      }
                    }
                  }
                },
                "x-examples": {
                  "Example 1": {
                    "name": "Search Dubai",
                    "criteria": {
                      "location": {
                        "places": [
                          {
                            "id": "ChIJB1zIKShoXz4RnbaTPPup7aU",
                            "name": "Dubai Mall",
                            "types": [
                              "establishment",
                              "point_of_interest",
                              "shopping_mall"
                            ],
                            "radius": 10,
                            "location": {
                              "latitude": 25.1972295,
                              "longitude": 55.279747
                            },
                            "place_id": "ChIJB1zIKShoXz4RnbaTPPup7aU",
                            "description": "Dubai Mall - Dubai - United Arab Emirates",
                            "secondary_text": "Dubai - United Arab Emirates"
                          }
                        ],
                        "is_worldwide": false
                      },
                      "languages": {
                        "selected": [
                          "English"
                        ],
                        "match_mode": "any"
                      },
                      "monthly_budget": {
                        "max": "50000",
                        "min": "0"
                      },
                      "custom_parameters": []
                    }
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "name": "Search Dubai",
                    "criteria": {
                      "location": {
                        "places": [
                          {
                            "id": "ChIJB1zIKShoXz4RnbaTPPup7aU",
                            "name": "Dubai Mall",
                            "types": [
                              "establishment",
                              "point_of_interest",
                              "shopping_mall"
                            ],
                            "radius": 10,
                            "location": {
                              "latitude": 25.1972295,
                              "longitude": 55.279747
                            },
                            "place_id": "ChIJB1zIKShoXz4RnbaTPPup7aU",
                            "description": "Dubai Mall - Dubai - United Arab Emirates",
                            "secondary_text": "Dubai - United Arab Emirates"
                          }
                        ],
                        "is_worldwide": false
                      },
                      "languages": {
                        "selected": [
                          "English"
                        ],
                        "match_mode": "any"
                      },
                      "monthly_budget": {
                        "max": "50000",
                        "min": "0"
                      },
                      "custom_parameters": []
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/search-templates/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get Search Template Details",
        "tags": [
          "Search"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "user_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "criteria": {
                      "type": "object",
                      "properties": {
                        "location": {
                          "type": "object",
                          "properties": {
                            "places": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "types": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "radius": {
                                    "type": "integer"
                                  },
                                  "location": {
                                    "type": "object",
                                    "properties": {
                                      "latitude": {
                                        "type": "number"
                                      },
                                      "longitude": {
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "place_id": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "secondary_text": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "is_worldwide": {
                              "type": "boolean"
                            }
                          }
                        },
                        "languages": {
                          "type": "object",
                          "properties": {
                            "selected": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "match_mode": {
                              "type": "string"
                            }
                          }
                        },
                        "monthly_budget": {
                          "type": "object",
                          "properties": {
                            "max": {
                              "type": "integer"
                            },
                            "min": {
                              "type": "integer"
                            }
                          }
                        },
                        "custom_parameters": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      }
                    },
                    "is_default": {
                      "type": "boolean"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "deleted_at": {
                      "type": "null"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "id": 40,
                      "user_id": 14,
                      "name": "Search Template 1",
                      "criteria": {
                        "location": {
                          "places": [
                            {
                              "id": "ChIJ_bI-HMwxMTARYoKQpsgx1CM",
                              "name": "Medan",
                              "types": [
                                "locality",
                                "political",
                                "geocode"
                              ],
                              "radius": 10,
                              "location": {
                                "latitude": 3.5951956000000003,
                                "longitude": 98.6722227
                              },
                              "place_id": "ChIJ_bI-HMwxMTARYoKQpsgx1CM",
                              "description": "Medan, Medan City, North Sumatra, Indonesia",
                              "secondary_text": "Medan City, North Sumatra, Indonesia"
                            }
                          ],
                          "is_worldwide": false
                        },
                        "languages": {
                          "selected": [
                            "English"
                          ],
                          "match_mode": "any"
                        },
                        "monthly_budget": {
                          "max": 10000,
                          "min": 1000
                        },
                        "custom_parameters": []
                      },
                      "is_default": false,
                      "created_at": "2025-05-02T11:33:13.000000Z",
                      "updated_at": "2025-05-09T12:49:53.000000Z",
                      "deleted_at": null
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "id": 40,
                      "user_id": 14,
                      "name": "Search Template 1",
                      "criteria": {
                        "location": {
                          "places": [
                            {
                              "id": "ChIJ_bI-HMwxMTARYoKQpsgx1CM",
                              "name": "Medan",
                              "types": [
                                "locality",
                                "political",
                                "geocode"
                              ],
                              "radius": 10,
                              "location": {
                                "latitude": 3.5951956000000003,
                                "longitude": 98.6722227
                              },
                              "place_id": "ChIJ_bI-HMwxMTARYoKQpsgx1CM",
                              "description": "Medan, Medan City, North Sumatra, Indonesia",
                              "secondary_text": "Medan City, North Sumatra, Indonesia"
                            }
                          ],
                          "is_worldwide": false
                        },
                        "languages": {
                          "selected": [
                            "English"
                          ],
                          "match_mode": "any"
                        },
                        "monthly_budget": {
                          "max": 10000,
                          "min": 1000
                        },
                        "custom_parameters": []
                      },
                      "is_default": false,
                      "created_at": "2025-05-02T11:33:13.000000Z",
                      "updated_at": "2025-05-09T12:49:53.000000Z",
                      "deleted_at": null
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-search-templates-id",
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": []
      },
      "put": {
        "summary": "Update Search Template",
        "tags": [
          "Search"
        ],
        "responses": {},
        "operationId": "put-search-templates-id",
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "criteria": {
                    "type": "object",
                    "properties": {
                      "location": {
                        "type": "object",
                        "properties": {
                          "places": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "types": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "radius": {
                                  "type": "integer"
                                },
                                "location": {
                                  "type": "object",
                                  "properties": {
                                    "latitude": {
                                      "type": "number"
                                    },
                                    "longitude": {
                                      "type": "number"
                                    }
                                  }
                                },
                                "place_id": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "secondary_text": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "is_worldwide": {
                            "type": "boolean"
                          }
                        }
                      },
                      "languages": {
                        "type": "object",
                        "properties": {
                          "selected": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "match_mode": {
                            "type": "string"
                          }
                        }
                      },
                      "monthly_budget": {
                        "type": "object",
                        "properties": {
                          "max": {
                            "type": "string"
                          },
                          "min": {
                            "type": "string"
                          }
                        }
                      },
                      "custom_parameters": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string"
                            },
                            "category": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "x-examples": {
                  "Example 1": {
                    "criteria": {
                      "location": {
                        "places": [
                          {
                            "id": "ChIJB1zIKShoXz4RnbaTPPup7aU",
                            "name": "Dubai Mall",
                            "types": [
                              "establishment",
                              "point_of_interest",
                              "shopping_mall"
                            ],
                            "radius": 10,
                            "location": {
                              "latitude": 25.1972295,
                              "longitude": 55.279747
                            },
                            "place_id": "ChIJB1zIKShoXz4RnbaTPPup7aU",
                            "description": "Dubai Mall - Dubai - United Arab Emirates",
                            "secondary_text": "Dubai - United Arab Emirates"
                          }
                        ],
                        "is_worldwide": false
                      },
                      "languages": {
                        "selected": [
                          "English",
                          "German",
                          "French"
                        ],
                        "match_mode": "any"
                      },
                      "monthly_budget": {
                        "max": "50000",
                        "min": "0"
                      },
                      "custom_parameters": [
                        {
                          "value": "Software Engineer",
                          "category": "Profession"
                        }
                      ]
                    }
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "criteria": {
                      "location": {
                        "places": [
                          {
                            "id": "ChIJB1zIKShoXz4RnbaTPPup7aU",
                            "name": "Dubai Mall",
                            "types": [
                              "establishment",
                              "point_of_interest",
                              "shopping_mall"
                            ],
                            "radius": 10,
                            "location": {
                              "latitude": 25.1972295,
                              "longitude": 55.279747
                            },
                            "place_id": "ChIJB1zIKShoXz4RnbaTPPup7aU",
                            "description": "Dubai Mall - Dubai - United Arab Emirates",
                            "secondary_text": "Dubai - United Arab Emirates"
                          }
                        ],
                        "is_worldwide": false
                      },
                      "languages": {
                        "selected": [
                          "English",
                          "German",
                          "French"
                        ],
                        "match_mode": "any"
                      },
                      "monthly_budget": {
                        "max": "50000",
                        "min": "0"
                      },
                      "custom_parameters": [
                        {
                          "value": "Software Engineer",
                          "category": "Profession"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/search": {
      "post": {
        "summary": "Search Profiles",
        "description": "Search for user profiles with advanced filtering options. Supports location-based search, budget filtering, language matching, and custom parameter filtering. Results are automatically filtered based on user role and mutual interest settings.",
        "tags": [
          "Search"
        ],
        "operationId": "post-search",
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pagination": {
                    "type": "object",
                    "description": "Pagination settings for search results",
                    "properties": {
                      "page": {
                        "type": "integer",
                        "description": "The page number for pagination",
                        "default": 1,
                        "minimum": 1
                      },
                      "per_page": {
                        "type": "integer",
                        "description": "Number of results per page",
                        "default": 10,
                        "minimum": 1,
                        "maximum": 100
                      }
                    }
                  },
                  "sort": {
                    "type": "object",
                    "description": "Sorting configuration for search results",
                    "properties": {
                      "by": {
                        "type": "string",
                        "description": "Field to sort by",
                        "enum": ["monthly_budget", "age", "created_at"],
                        "default": "created_at"
                      },
                      "order": {
                        "type": "string",
                        "description": "Sort direction",
                        "enum": ["asc", "desc"],
                        "default": "desc"
                      }
                    }
                  },
                  "location": {
                    "type": "object",
                    "description": "Location-based search configuration",
                    "properties": {
                      "is_worldwide": {
                        "type": "boolean",
                        "description": "If true, search worldwide. If false, use specific locations or user's location",
                        "default": false
                      },
                      "places": {
                        "type": "array",
                        "description": "Array of location objects for specific location search",
                        "items": {
                          "type": "object",
                          "properties": {
                            "location": {
                              "type": "object",
                              "required": ["latitude", "longitude"],
                              "properties": {
                                "latitude": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "Location latitude",
                                  "minimum": -90,
                                  "maximum": 90
                                },
                                "longitude": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "Location longitude",
                                  "minimum": -180,
                                  "maximum": 180
                                }
                              }
                            },
                            "radius": {
                              "type": "number",
                              "format": "double",
                              "description": "Search radius in kilometers",
                              "minimum": 0.1,
                              "maximum": 1000
                            }
                          }
                        }
                      }
                    }
                  },
                  "monthly_budget": {
                    "type": "object",
                    "description": "Monthly budget filtering configuration",
                    "properties": {
                      "min": {
                        "type": "number",
                        "format": "double",
                        "description": "Minimum monthly budget"
                      },
                      "max": {
                        "type": "number",
                        "format": "double",
                        "description": "Maximum monthly budget (required for sponsor users)"
                      },
                      "currency": {
                        "type": "string",
                        "description": "Currency code (e.g., 'USD', 'AED'). Defaults to system default currency",
                        "pattern": "^[A-Z]{3}$"
                      }
                    }
                  },
                  "languages": {
                    "type": "object",
                    "description": "Language filtering configuration",
                    "properties": {
                      "selected": {
                        "type": "array",
                        "description": "Array of language names to search for",
                        "items": {
                          "type": "string"
                        }
                      },
                      "match_mode": {
                        "type": "string",
                        "description": "How to match languages",
                        "enum": ["any", "all"]
                      }
                    }
                  },
                  "custom_parameters": {
                    "type": "array",
                    "description": "Array of custom parameter objects for advanced filtering",
                    "items": {
                      "type": "object",
                      "required": ["category_key", "field_key", "value"],
                      "properties": {
                        "category_key": {
                          "type": "string",
                          "description": "Custom parameter category key"
                        },
                        "field_key": {
                          "type": "string",
                          "description": "Custom parameter field key"
                        },
                        "value": {
                          "type": "string",
                          "description": "Value to match against"
                        },
                        "value_range": {
                          "type": "object",
                          "description": "Range object with min/max values for range-based searches",
                          "properties": {
                            "min": {
                              "type": "string"
                            },
                            "max": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "x-examples": {
                  "Comprehensive Search Example": {
                    "pagination": {
                      "page": 1,
                      "per_page": 10
                    },
                    "sort": {
                      "by": "monthly_budget",
                      "order": "desc"
                    },
                    "location": {
                      "is_worldwide": false,
                      "places": [
                        {
                          "location": {
                            "latitude": 25.276987,
                            "longitude": 55.296249
                          },
                          "radius": 10
                        }
                      ]
                    },
                    "monthly_budget": {
                      "min": 1000,
                      "max": 10000,
                      "currency": "USD"
                    },
                    "languages": {
                      "selected": ["English", "Arabic"],
                      "match_mode": "any"
                    },
                    "custom_parameters": [
                      {
                        "category_key": "general_info",
                        "field_key": "education_level",
                        "value": "bachelor"
                      },
                      {
                        "category_key": "general_info",
                        "field_key": "age",
                        "value": "25-35"
                      }
                    ]
                  }
                }
              },
              "examples": {
                "Comprehensive Search Example": {
                  "summary": "Search for profiles in Dubai with specific criteria",
                  "description": "Search for profiles within 10km of Dubai with budget between $1,000-$10,000, who speak English or Arabic, with bachelor's education and age 25-35",
                  "value": {
                    "pagination": {
                      "page": 1,
                      "per_page": 10
                    },
                    "sort": {
                      "by": "monthly_budget",
                      "order": "desc"
                    },
                    "location": {
                      "is_worldwide": false,
                      "places": [
                        {
                          "location": {
                            "latitude": 25.276987,
                            "longitude": 55.296249
                          },
                          "radius": 10
                        }
                      ]
                    },
                    "monthly_budget": {
                      "min": 1000,
                      "max": 10000,
                      "currency": "USD"
                    },
                    "languages": {
                      "selected": ["English", "Arabic"],
                      "match_mode": "any"
                    },
                    "custom_parameters": [
                      {
                        "category_key": "general_info",
                        "field_key": "education_level",
                        "value": "bachelor"
                      },
                      {
                        "category_key": "general_info",
                        "field_key": "age",
                        "value": "25-35"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Search results retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "description": "Array of user profile objects",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "User ID"
                          },
                          "public_username": {
                            "type": "string",
                            "description": "Public username for the profile"
                          },
                          "login_name": {
                            "type": "string",
                            "description": "Login name"
                          },
                          "first_name": {
                            "type": "string",
                            "description": "User's first name"
                          },
                          "last_name": {
                            "type": "string",
                            "description": "User's last name"
                          },
                          "full_name": {
                            "type": "string",
                            "description": "User's full name"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "description": "User's email address"
                          },
                          "gender": {
                            "type": "string",
                            "enum": ["male", "female"],
                            "description": "User's gender"
                          },
                          "partner_preference": {
                            "type": "string",
                            "enum": ["male", "female"],
                            "description": "Preferred partner gender"
                          },
                          "relationship_goals": {
                            "type": "string",
                            "description": "Relationship goals (e.g., 'marriage')"
                          },
                          "role": {
                            "type": "string",
                            "enum": ["rs", "srs"],
                            "description": "User role (rs=sponsor, srs=seeker)"
                          },
                          "profile_picture_url": {
                            "type": "string",
                            "format": "uri",
                            "description": "URL to profile picture"
                          },
                          "hide_images": {
                            "type": "boolean",
                            "description": "Whether images are hidden"
                          },
                          "initials": {
                            "type": "string",
                            "description": "User's initials"
                          },
                          "profile": {
                            "type": "object",
                            "description": "Detailed profile information",
                            "properties": {
                              "birth_date": {
                                "type": "string",
                                "format": "date",
                                "description": "User's birth date"
                              },
                              "gender": {
                                "type": "string",
                                "enum": ["male", "female"],
                                "description": "User's gender"
                              },
                              "location_residence_latitude": {
                                "type": "number",
                                "format": "double",
                                "description": "Residence latitude"
                              },
                              "location_residence_longitude": {
                                "type": "number",
                                "format": "double",
                                "description": "Residence longitude"
                              },
                              "weight": {
                                "type": "number",
                                "format": "double",
                                "description": "Weight in kg"
                              },
                              "height": {
                                "type": "number",
                                "format": "double",
                                "description": "Height in cm"
                              },
                              "orientation": {
                                "type": "string",
                                "description": "Sexual orientation"
                              },
                              "education_level": {
                                "type": "string",
                                "description": "Education level"
                              },
                              "profession": {
                                "type": "string",
                                "description": "Profession or occupation"
                              },
                              "religion": {
                                "type": "string",
                                "description": "Religious affiliation"
                              },
                              "ethnicity": {
                                "type": "string",
                                "description": "Ethnic background"
                              }
                            }
                          },
                          "financialProfile": {
                            "type": "object",
                            "description": "Financial profile information",
                            "properties": {
                              "lifestyle_support_budget": {
                                "type": "number",
                                "format": "double",
                                "description": "Monthly lifestyle support budget"
                              },
                              "currency": {
                                "type": "string",
                                "description": "Currency code"
                              },
                              "capital_level_less_precise": {
                                "type": "string",
                                "description": "Capital level (less precise)"
                              },
                              "monthly_income_less_precise": {
                                "type": "string",
                                "description": "Monthly income (less precise)"
                              }
                            }
                          },
                          "lifestyle_support_budget": {
                            "type": "number",
                            "format": "double",
                            "description": "Monthly lifestyle support budget"
                          },
                          "lifestyle_support_budget_trimmed": {
                            "type": "string",
                            "description": "Formatted lifestyle support budget"
                          },
                          "profileImages": {
                            "type": "array",
                            "description": "Array of profile images",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "Image ID"
                                },
                                "url": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "Image URL"
                                },
                                "thumbnail_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "Thumbnail URL"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "description": "Pagination metadata",
                      "properties": {
                        "current_page": {
                          "type": "integer",
                          "description": "Current page number"
                        },
                        "last_page": {
                          "type": "integer",
                          "description": "Last page number"
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "Results per page"
                        },
                        "total": {
                          "type": "integer",
                          "description": "Total number of results"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Success Response": {
                    "summary": "Successful search results",
                    "description": "Search results with user profiles and pagination metadata",
                    "value": {
                      "data": [
                        {
                          "id": 1,
                          "public_username": "johndoe",
                          "login_name": "johndoe",
                          "first_name": "John",
                          "last_name": "Doe",
                          "full_name": "John Doe",
                          "email": "john@example.com",
                          "gender": "male",
                          "partner_preference": "female",
                          "relationship_goals": "marriage",
                          "role": "srs",
                          "profile_picture_url": "https://example.com/profile.jpg",
                          "hide_images": false,
                          "initials": "JD",
                          "profile": {
                            "birth_date": "1990-01-01",
                            "gender": "male",
                            "location_residence_latitude": 25.276987,
                            "location_residence_longitude": 55.296249,
                            "weight": 70,
                            "height": 175,
                            "orientation": "straight",
                            "education_level": "bachelor",
                            "profession": "engineer",
                            "religion": "muslim",
                            "ethnicity": "arab"
                          },
                          "financialProfile": {
                            "lifestyle_support_budget": 5000,
                            "currency": "USD",
                            "capital_level_less_precise": "high",
                            "monthly_income_less_precise": "high"
                          },
                          "lifestyle_support_budget": 5000,
                          "lifestyle_support_budget_trimmed": "5,000",
                          "profileImages": [
                            {
                              "id": 1,
                              "url": "https://example.com/image1.jpg",
                              "thumbnail_url": "https://example.com/thumb1.jpg"
                            }
                          ]
                        }
                      ],
                      "meta": {
                        "current_page": 1,
                        "last_page": 5,
                        "per_page": 10,
                        "total": 50
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid search parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "User location not found. Please update your location in your profile."
                    },
                    "currentUser": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "public_username": {
                          "type": "string",
                          "example": "currentuser"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Error Response": {
                    "summary": "Error when user location is not found",
                    "description": "Error response when the user's location is not available for search",
                    "value": {
                      "error": true,
                      "message": "User location not found. Please update your location in your profile.",
                      "currentUser": {
                        "id": 1,
                        "public_username": "currentuser"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication token required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthenticated."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/search/check-custom-parameter": {
      "post": {
        "summary": "Check Custom Parameter",
        "description": "Validate and check custom parameter values for search functionality. This endpoint helps verify if custom parameter values are valid before using them in search queries.",
        "tags": [
          "Search"
        ],
        "operationId": "post-search-check-custom-parameter",
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["value", "category"],
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "The value to validate for the custom parameter"
                  },
                  "category": {
                    "type": "string",
                    "description": "The category of the custom parameter to validate",
                    "enum": ["general_info", "relationship", "financial", "living", "profession"]
                  }
                },
                "x-examples": {
                  "Profession Example": {
                    "value": "Software Engineer",
                    "category": "profession"
                  },
                  "Education Example": {
                    "value": "bachelor",
                    "category": "general_info"
                  }
                }
              },
              "examples": {
                "Profession Example": {
                  "summary": "Check profession parameter",
                  "description": "Validate a profession value for search",
                  "value": {
                    "value": "Software Engineer",
                    "category": "profession"
                  }
                },
                "Education Example": {
                  "summary": "Check education parameter",
                  "description": "Validate an education level value for search",
                  "value": {
                    "value": "bachelor",
                    "category": "general_info"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Custom parameter validation successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "valid": {
                      "type": "boolean",
                      "description": "Whether the parameter value is valid"
                    },
                    "message": {
                      "type": "string",
                      "description": "Validation message"
                    },
                    "suggestions": {
                      "type": "array",
                      "description": "Suggested values if the provided value is not exact",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "examples": {
                  "Valid Parameter": {
                    "summary": "Valid parameter value",
                    "description": "Response when the parameter value is valid",
                    "value": {
                      "valid": true,
                      "message": "Parameter value is valid",
                      "suggestions": []
                    }
                  },
                  "Invalid Parameter": {
                    "summary": "Invalid parameter value with suggestions",
                    "description": "Response when the parameter value is invalid but suggestions are provided",
                    "value": {
                      "valid": false,
                      "message": "Parameter value not found",
                      "suggestions": ["Software Engineer", "Software Developer", "Programmer"]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid category or value provided"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication token required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthenticated."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/wallet/balance": {
      "get": {
        "summary": "Get Current Balance",
        "description": "Retrieves the current balance information for the authenticated user, including active balance, affiliate earnings, total available balance, and purchase power.",
        "tags": [
          "Wallet"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Balance information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "active_balance": {
                      "type": "number",
                      "format": "decimal",
                      "description": "Current active balance (numeric)",
                      "example": 1250.50
                    },
                    "active_balance_trimmed": {
                      "type": "string",
                      "description": "Formatted active balance with commas",
                      "example": "1,250.50"
                    },
                    "total_available_balance": {
                      "type": "number",
                      "format": "decimal",
                      "description": "Total available balance (active + affiliate earnings)",
                      "example": 2100.75
                    },
                    "total_available_balance_trimmed": {
                      "type": "string",
                      "description": "Formatted total available balance",
                      "example": "2,100.75"
                    },
                    "affiliate_earning_balance": {
                      "type": "number",
                      "format": "decimal",
                      "description": "Earnings from affiliate program (numeric)",
                      "example": 850.25
                    },
                    "affiliate_earning_balance_trimmed": {
                      "type": "string",
                      "description": "Formatted affiliate earnings balance",
                      "example": "850.25"
                    },
                    "purchase_power": {
                      "type": "number",
                      "format": "decimal",
                      "description": "Total purchase power (active + affiliate earnings)",
                      "example": 2100.75
                    },
                    "purchase_power_trimmed": {
                      "type": "string",
                      "description": "Formatted purchase power",
                      "example": "2,100.75"
                    },
                    "currency": {
                      "type": "string",
                      "description": "Currency code (e.g., USD, EUR, GBP)",
                      "example": "USD"
                    },
                    "currency_detail": {
                      "type": "object",
                      "description": "Currency information object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "Currency ID",
                          "example": 1
                        },
                        "code": {
                          "type": "string",
                          "description": "Currency code",
                          "example": "USD"
                        },
                        "name": {
                          "type": "string",
                          "description": "Currency name",
                          "example": "US Dollar"
                        },
                        "symbol": {
                          "type": "string",
                          "description": "Currency symbol",
                          "example": "$"
                        },
                        "exchange_rate": {
                          "type": "number",
                          "format": "decimal",
                          "description": "Exchange rate to base currency",
                          "example": 1.0
                        },
                        "is_default": {
                          "type": "boolean",
                          "description": "Whether this is the default currency",
                          "example": true
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Creation timestamp",
                          "example": "2024-01-01T00:00:00.000000Z"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Last update timestamp",
                          "example": "2024-01-01T00:00:00.000000Z"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Success Response": {
                    "value": {
                      "active_balance": 1250.50,
                      "active_balance_trimmed": "1,250.50",
                      "total_available_balance": 2100.75,
                      "total_available_balance_trimmed": "2,100.75",
                      "affiliate_earning_balance": 850.25,
                      "affiliate_earning_balance_trimmed": "850.25",
                      "purchase_power": 2100.75,
                      "purchase_power_trimmed": "2,100.75",
                      "currency": "USD",
                      "currency_detail": {
                        "id": 1,
                        "code": "USD",
                        "name": "US Dollar",
                        "symbol": "$",
                        "exchange_rate": 1.0,
                        "is_default": true,
                        "created_at": "2024-01-01T00:00:00.000000Z",
                        "updated_at": "2024-01-01T00:00:00.000000Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing authentication token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthenticated."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-wallet-balance",
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-rate-limit": {
          "description": "Rate limiting: 60 requests per minute per user, 1000 requests per hour per user"
        }
      }
    },
    "/subscription/current": {
      "get": {
        "summary": "Get Current Subscription Data",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "active_subscription": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "transaction_id": {
                          "type": "integer"
                        },
                        "user_id": {
                          "type": "integer"
                        },
                        "subscription_plan_id": {
                          "type": "integer"
                        },
                        "start_date": {
                          "type": "string"
                        },
                        "end_date": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        },
                        "deleted_at": {
                          "type": "null"
                        },
                        "price": {
                          "type": "string"
                        },
                        "currency": {
                          "type": "string"
                        },
                        "days_left": {
                          "type": "string"
                        },
                        "used_months": {
                          "type": "integer"
                        },
                        "plan": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "level": {
                              "type": "integer"
                            },
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "duration": {
                              "type": "integer"
                            },
                            "features": {
                              "type": "string"
                            },
                            "created_at": {
                              "type": "string"
                            },
                            "updated_at": {
                              "type": "string"
                            },
                            "deleted_at": {
                              "type": "null"
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "error": false,
                      "active_subscription": {
                        "id": 52,
                        "transaction_id": 158,
                        "user_id": 14,
                        "subscription_plan_id": 15,
                        "start_date": "2025-06-03T02:35:31.000000Z",
                        "end_date": "2026-06-03T02:35:31.000000Z",
                        "status": "active",
                        "created_at": "2025-06-03T02:35:31.000000Z",
                        "updated_at": "2025-06-03T02:35:31.000000Z",
                        "deleted_at": null,
                        "price": "464.00",
                        "currency": "USD",
                        "days_left": "11 months 26 days",
                        "used_months": 0,
                        "plan": {
                          "id": 15,
                          "level": 2,
                          "name": "Premium Annual Plan",
                          "description": "Quis autem vel eum iure reprehenderit qui in ea voluptate velit.",
                          "duration": 365,
                          "features": "[{\"title\": \"All Standard Plan Features\", \"support\": 1}, {\"title\": \"Unlocking all functionality\", \"support\": 1}, {\"title\": \"Personalized support\", \"support\": 1}, {\"title\": \"Unlimited chats\", \"support\": 1}, {\"title\": \"Up to 10 Test Moons\", \"support\": 1}, {\"title\": \"Assisted video calls with up to 10 potential partners\", \"support\": 1}, {\"note\": \"To MMM and your partner until you go for a Preliminary Contract (after a successful Test Moon with your potential partner).\", \"title\": \"Option of anonymity\", \"support\": 1}, {\"title\": \"Makes potential partner’s profile unable to perform search\", \"support\": 1}, {\"title\": \"Training and continuous assistance by MMM’s staff for efficient search\", \"support\": 1}, {\"title\": \"Action plan building and follow up coordination with MMM’s expert for efficient search\", \"support\": 0}, {\"title\": \"Lifestyle / style changes advice by MMM’s experts\", \"support\": 0}, {\"title\": \"Travel and booking assistance for mutual travels\", \"support\": 0}, {\"title\": \"Special requests\", \"support\": 0}]",
                          "created_at": "2025-05-23T14:43:53.000000Z",
                          "updated_at": "2025-05-23T14:43:53.000000Z",
                          "deleted_at": null
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-subscription-current",
        "parameters": [],
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/subscription/plans": {
      "get": {
        "summary": "Get Subscription Plans",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "plans": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "level": {
                            "type": "integer"
                          },
                          "price": {
                            "type": "string"
                          },
                          "price_trimmed": {
                            "type": "string"
                          },
                          "currency": {
                            "type": "string"
                          },
                          "currency_symbol": {
                            "type": "string"
                          },
                          "currency_detail": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "code": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "symbol": {
                                "type": "string"
                              },
                              "prefix": {
                                "type": "string"
                              },
                              "suffix": {
                                "type": "string"
                              },
                              "icon": {
                                "type": "string"
                              },
                              "created_at": {
                                "type": "string"
                              },
                              "updated_at": {
                                "type": "string"
                              },
                              "deleted_at": {
                                "type": "null"
                              },
                              "icon_url": {
                                "type": "string"
                              }
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "duration": {
                            "type": "integer"
                          },
                          "features": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "title": {
                                  "type": "string"
                                },
                                "support": {
                                  "type": "integer"
                                },
                                "note": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "currency": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "error": false,
                      "plans": [
                        {
                          "id": 14,
                          "level": 1,
                          "price": "348.00",
                          "price_trimmed": "348",
                          "currency": "USD",
                          "currency_symbol": "$",
                          "currency_detail": {
                            "id": 10,
                            "code": "USD",
                            "name": "US Dollar",
                            "symbol": "$",
                            "prefix": "$",
                            "suffix": "",
                            "icon": "/static/icons/currency/usd.png",
                            "created_at": "2025-06-03T12:31:20.000000Z",
                            "updated_at": "2025-06-03T12:31:20.000000Z",
                            "deleted_at": null,
                            "icon_url": "http://localhost:8001/static/icons/currency/usd.png"
                          },
                          "name": "Standard Annual Plan",
                          "description": "Quis autem vel eum iure reprehenderit qui in ea voluptate velit.",
                          "duration": 365,
                          "features": [
                            {
                              "title": "All Standard Plan Features",
                              "support": 1
                            },
                            {
                              "title": "Unlocking all functionality",
                              "support": 1
                            },
                            {
                              "title": "Personalized support",
                              "support": 1
                            },
                            {
                              "title": "Unlimited chats",
                              "support": 1
                            },
                            {
                              "title": "Up to 10 Test Moons",
                              "support": 1
                            },
                            {
                              "title": "Assisted video calls with up to 10 potential partners",
                              "support": 1
                            },
                            {
                              "note": "To MMM and your partner until you go for a Preliminary Contract (after a successful Test Moon with your potential partner).",
                              "title": "Option of anonymity",
                              "support": 1
                            },
                            {
                              "title": "Makes potential partner’s profile unable to perform search",
                              "support": 0
                            },
                            {
                              "title": "Training and continuous assistance by MMM’s staff for efficient search",
                              "support": 0
                            },
                            {
                              "title": "Action plan building and follow up coordination with MMM’s expert for efficient search",
                              "support": 0
                            },
                            {
                              "title": "Lifestyle / style changes advice by MMM’s experts",
                              "support": 0
                            },
                            {
                              "title": "Travel and booking assistance for mutual travels",
                              "support": 0
                            },
                            {
                              "title": "Special requests",
                              "support": 0
                            }
                          ]
                        },
                        {
                          "id": 15,
                          "level": 2,
                          "price": "464.00",
                          "price_trimmed": "464",
                          "currency": "USD",
                          "currency_symbol": "$",
                          "currency_detail": {
                            "id": 10,
                            "code": "USD",
                            "name": "US Dollar",
                            "symbol": "$",
                            "prefix": "$",
                            "suffix": "",
                            "icon": "/static/icons/currency/usd.png",
                            "created_at": "2025-06-03T12:31:20.000000Z",
                            "updated_at": "2025-06-03T12:31:20.000000Z",
                            "deleted_at": null,
                            "icon_url": "http://localhost:8001/static/icons/currency/usd.png"
                          },
                          "name": "Premium Annual Plan",
                          "description": "Quis autem vel eum iure reprehenderit qui in ea voluptate velit.",
                          "duration": 365,
                          "features": [
                            {
                              "title": "All Standard Plan Features",
                              "support": 1
                            },
                            {
                              "title": "Unlocking all functionality",
                              "support": 1
                            },
                            {
                              "title": "Personalized support",
                              "support": 1
                            },
                            {
                              "title": "Unlimited chats",
                              "support": 1
                            },
                            {
                              "title": "Up to 10 Test Moons",
                              "support": 1
                            },
                            {
                              "title": "Assisted video calls with up to 10 potential partners",
                              "support": 1
                            },
                            {
                              "note": "To MMM and your partner until you go for a Preliminary Contract (after a successful Test Moon with your potential partner).",
                              "title": "Option of anonymity",
                              "support": 1
                            },
                            {
                              "title": "Makes potential partner’s profile unable to perform search",
                              "support": 1
                            },
                            {
                              "title": "Training and continuous assistance by MMM’s staff for efficient search",
                              "support": 1
                            },
                            {
                              "title": "Action plan building and follow up coordination with MMM’s expert for efficient search",
                              "support": 0
                            },
                            {
                              "title": "Lifestyle / style changes advice by MMM’s experts",
                              "support": 0
                            },
                            {
                              "title": "Travel and booking assistance for mutual travels",
                              "support": 0
                            },
                            {
                              "title": "Special requests",
                              "support": 0
                            }
                          ]
                        },
                        {
                          "id": 16,
                          "level": 3,
                          "price": "580.00",
                          "price_trimmed": "580",
                          "currency": "USD",
                          "currency_symbol": "$",
                          "currency_detail": {
                            "id": 10,
                            "code": "USD",
                            "name": "US Dollar",
                            "symbol": "$",
                            "prefix": "$",
                            "suffix": "",
                            "icon": "/static/icons/currency/usd.png",
                            "created_at": "2025-06-03T12:31:20.000000Z",
                            "updated_at": "2025-06-03T12:31:20.000000Z",
                            "deleted_at": null,
                            "icon_url": "http://localhost:8001/static/icons/currency/usd.png"
                          },
                          "name": "VIP Annual Plan",
                          "description": "Quis autem vel eum iure reprehenderit qui in ea voluptate velit.",
                          "duration": 365,
                          "features": [
                            {
                              "title": "All Standard Plan Features",
                              "support": 1
                            },
                            {
                              "title": "Unlocking all functionality",
                              "support": 1
                            },
                            {
                              "title": "Personalized support",
                              "support": 1
                            },
                            {
                              "title": "Unlimited chats",
                              "support": 1
                            },
                            {
                              "title": "Up to 10 Test Moons",
                              "support": 1
                            },
                            {
                              "title": "Assisted video calls with up to 10 potential partners",
                              "support": 1
                            },
                            {
                              "note": "To MMM and your partner until you go for a Preliminary Contract (after a successful Test Moon with your potential partner).",
                              "title": "Option of anonymity",
                              "support": 1
                            },
                            {
                              "title": "Makes potential partner’s profile unable to perform search",
                              "support": 1
                            },
                            {
                              "title": "Training and continuous assistance by MMM’s staff for efficient search",
                              "support": 1
                            },
                            {
                              "title": "Action plan building and follow up coordination with MMM’s expert for efficient search",
                              "support": 1
                            },
                            {
                              "title": "Lifestyle / style changes advice by MMM’s experts",
                              "support": 1
                            },
                            {
                              "title": "Travel and booking assistance for mutual travels",
                              "support": 1
                            },
                            {
                              "title": "Special requests",
                              "support": 1
                            }
                          ]
                        }
                      ],
                      "currency": "USD"
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "error": false,
                      "plans": [
                        {
                          "id": 14,
                          "level": 1,
                          "price": "348.00",
                          "price_trimmed": "348",
                          "currency": "USD",
                          "currency_symbol": "$",
                          "currency_detail": {
                            "id": 10,
                            "code": "USD",
                            "name": "US Dollar",
                            "symbol": "$",
                            "prefix": "$",
                            "suffix": "",
                            "icon": "/static/icons/currency/usd.png",
                            "created_at": "2025-06-03T12:31:20.000000Z",
                            "updated_at": "2025-06-03T12:31:20.000000Z",
                            "deleted_at": null,
                            "icon_url": "http://localhost:8001/static/icons/currency/usd.png"
                          },
                          "name": "Standard Annual Plan",
                          "description": "Quis autem vel eum iure reprehenderit qui in ea voluptate velit.",
                          "duration": 365,
                          "features": [
                            {
                              "title": "All Standard Plan Features",
                              "support": 1
                            },
                            {
                              "title": "Unlocking all functionality",
                              "support": 1
                            },
                            {
                              "title": "Personalized support",
                              "support": 1
                            },
                            {
                              "title": "Unlimited chats",
                              "support": 1
                            },
                            {
                              "title": "Up to 10 Test Moons",
                              "support": 1
                            },
                            {
                              "title": "Assisted video calls with up to 10 potential partners",
                              "support": 1
                            },
                            {
                              "note": "To MMM and your partner until you go for a Preliminary Contract (after a successful Test Moon with your potential partner).",
                              "title": "Option of anonymity",
                              "support": 1
                            },
                            {
                              "title": "Makes potential partner’s profile unable to perform search",
                              "support": 0
                            },
                            {
                              "title": "Training and continuous assistance by MMM’s staff for efficient search",
                              "support": 0
                            },
                            {
                              "title": "Action plan building and follow up coordination with MMM’s expert for efficient search",
                              "support": 0
                            },
                            {
                              "title": "Lifestyle / style changes advice by MMM’s experts",
                              "support": 0
                            },
                            {
                              "title": "Travel and booking assistance for mutual travels",
                              "support": 0
                            },
                            {
                              "title": "Special requests",
                              "support": 0
                            }
                          ]
                        },
                        {
                          "id": 15,
                          "level": 2,
                          "price": "464.00",
                          "price_trimmed": "464",
                          "currency": "USD",
                          "currency_symbol": "$",
                          "currency_detail": {
                            "id": 10,
                            "code": "USD",
                            "name": "US Dollar",
                            "symbol": "$",
                            "prefix": "$",
                            "suffix": "",
                            "icon": "/static/icons/currency/usd.png",
                            "created_at": "2025-06-03T12:31:20.000000Z",
                            "updated_at": "2025-06-03T12:31:20.000000Z",
                            "deleted_at": null,
                            "icon_url": "http://localhost:8001/static/icons/currency/usd.png"
                          },
                          "name": "Premium Annual Plan",
                          "description": "Quis autem vel eum iure reprehenderit qui in ea voluptate velit.",
                          "duration": 365,
                          "features": [
                            {
                              "title": "All Standard Plan Features",
                              "support": 1
                            },
                            {
                              "title": "Unlocking all functionality",
                              "support": 1
                            },
                            {
                              "title": "Personalized support",
                              "support": 1
                            },
                            {
                              "title": "Unlimited chats",
                              "support": 1
                            },
                            {
                              "title": "Up to 10 Test Moons",
                              "support": 1
                            },
                            {
                              "title": "Assisted video calls with up to 10 potential partners",
                              "support": 1
                            },
                            {
                              "note": "To MMM and your partner until you go for a Preliminary Contract (after a successful Test Moon with your potential partner).",
                              "title": "Option of anonymity",
                              "support": 1
                            },
                            {
                              "title": "Makes potential partner’s profile unable to perform search",
                              "support": 1
                            },
                            {
                              "title": "Training and continuous assistance by MMM’s staff for efficient search",
                              "support": 1
                            },
                            {
                              "title": "Action plan building and follow up coordination with MMM’s expert for efficient search",
                              "support": 0
                            },
                            {
                              "title": "Lifestyle / style changes advice by MMM’s experts",
                              "support": 0
                            },
                            {
                              "title": "Travel and booking assistance for mutual travels",
                              "support": 0
                            },
                            {
                              "title": "Special requests",
                              "support": 0
                            }
                          ]
                        },
                        {
                          "id": 16,
                          "level": 3,
                          "price": "580.00",
                          "price_trimmed": "580",
                          "currency": "USD",
                          "currency_symbol": "$",
                          "currency_detail": {
                            "id": 10,
                            "code": "USD",
                            "name": "US Dollar",
                            "symbol": "$",
                            "prefix": "$",
                            "suffix": "",
                            "icon": "/static/icons/currency/usd.png",
                            "created_at": "2025-06-03T12:31:20.000000Z",
                            "updated_at": "2025-06-03T12:31:20.000000Z",
                            "deleted_at": null,
                            "icon_url": "http://localhost:8001/static/icons/currency/usd.png"
                          },
                          "name": "VIP Annual Plan",
                          "description": "Quis autem vel eum iure reprehenderit qui in ea voluptate velit.",
                          "duration": 365,
                          "features": [
                            {
                              "title": "All Standard Plan Features",
                              "support": 1
                            },
                            {
                              "title": "Unlocking all functionality",
                              "support": 1
                            },
                            {
                              "title": "Personalized support",
                              "support": 1
                            },
                            {
                              "title": "Unlimited chats",
                              "support": 1
                            },
                            {
                              "title": "Up to 10 Test Moons",
                              "support": 1
                            },
                            {
                              "title": "Assisted video calls with up to 10 potential partners",
                              "support": 1
                            },
                            {
                              "note": "To MMM and your partner until you go for a Preliminary Contract (after a successful Test Moon with your potential partner).",
                              "title": "Option of anonymity",
                              "support": 1
                            },
                            {
                              "title": "Makes potential partner’s profile unable to perform search",
                              "support": 1
                            },
                            {
                              "title": "Training and continuous assistance by MMM’s staff for efficient search",
                              "support": 1
                            },
                            {
                              "title": "Action plan building and follow up coordination with MMM’s expert for efficient search",
                              "support": 1
                            },
                            {
                              "title": "Lifestyle / style changes advice by MMM’s experts",
                              "support": 1
                            },
                            {
                              "title": "Travel and booking assistance for mutual travels",
                              "support": 1
                            },
                            {
                              "title": "Special requests",
                              "support": 1
                            }
                          ]
                        }
                      ],
                      "currency": "USD"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-subscription-plans"
      }
    },
    "/subscription/submit": {
      "post": {
        "summary": "Buy & Upgrade Subscription",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "redirect_url": {
                      "type": "string"
                    },
                    "transaction_id": {
                      "type": "integer"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "error": false,
                      "message": "Subscription submitted successfully",
                      "redirect_url": "https://checkout.stripe.com/c/pay/cs_test_a1IUuBzNvbM6q59XHRaGeyEk2Mc6S8myphNuCo5Eo9cRrEl0ObSnuafMZd#fidkdWxOYHwnPyd1blpxYHZxWjA0V1NydFdMR2l8V0ZxNk9JTlVOREJUUG1BbjZ3cnFRT2NoVmlQTWI8XVN9UnJpYmRqX0N9SzNSTm03Qks8VFdXaEpTaENEN0t8PGhANEJpUmdhTzNGbHVLNTVwPElWUWxzYScpJ2N3amhWYHdzYHcnP3F3cGApJ2lkfGpwcVF8dWAnPyd2bGtiaWBabHFgaCcpJ2BrZGdpYFVpZGZgbWppYWB3dic%2FcXdwYHgl",
                      "transaction_id": 175
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "error": false,
                      "message": "Subscription submitted successfully",
                      "redirect_url": "https://checkout.stripe.com/c/pay/cs_test_a1IUuBzNvbM6q59XHRaGeyEk....",
                      "transaction_id": 175
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "x-stoplight": {
                        "id": "wf71ldmj689fh"
                      }
                    },
                    "message": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "bpw3y3x3qwwrv"
                      }
                    }
                  }
                },
                "examples": {
                  "Subscription below the current's subscription error": {
                    "value": {
                      "error": true,
                      "message": "You cannot downgrade your subscription."
                    }
                  },
                  "Subscription is the same with the current subscription": {
                    "value": {
                      "error": true,
                      "message": "You are already on this subscription plan."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post-subscription-submit",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "Example 1": {
                    "amount": 328,
                    "method": "CARD",
                    "comment": "Testing",
                    "currency": "USD",
                    "balance_amount": 20,
                    "subscription_id": 14
                  }
                },
                "properties": {
                  "amount": {
                    "type": "number"
                  },
                  "method": {
                    "type": "string"
                  },
                  "comment": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string"
                  },
                  "balance_amount": {
                    "type": "number"
                  },
                  "subscription_id": {
                    "type": "integer"
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "amount": 328,
                    "method": "CARD",
                    "comment": "Testing",
                    "currency": "USD",
                    "balance_amount": 20,
                    "subscription_id": 14
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deposit/submit": {
      "post": {
        "summary": "Submit a Deposit Transaction",
        "tags": [
          "Wallet"
        ],
        "responses": {},
        "operationId": "post-deposit-submit",
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "Example 1": {
                    "amount": 2400,
                    "method": "CARD",
                    "comment": "testt",
                    "currency": "USD"
                  }
                },
                "properties": {
                  "amount": {
                    "type": "number"
                  },
                  "method": {
                    "type": "string"
                  },
                  "comment": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "amount": 2400,
                    "method": "CARD",
                    "comment": "testt",
                    "currency": "USD"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/withdrawal/submit": {
      "post": {
        "summary": "Submit a Withdrawal Request",
        "tags": [
          "Wallet"
        ],
        "responses": {},
        "operationId": "post-withdrawal-submit",
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "Example 1": {
                    "amount": 2900,
                    "method": "SWIFT",
                    "currency": "USD",
                    "bank_name": "BANK CENTRAL ASIA",
                    "wallet_address": null,
                    "bank_swift_code": "299239",
                    "bank_receiver_name": "John",
                    "bank_account_number": "0198082839"
                  }
                },
                "properties": {
                  "amount": {
                    "type": "number"
                  },
                  "method": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string"
                  },
                  "bank_name": {
                    "type": "string"
                  },
                  "wallet_address": {
                    "nullable": true
                  },
                  "bank_swift_code": {
                    "type": "string"
                  },
                  "bank_receiver_name": {
                    "type": "string"
                  },
                  "bank_account_number": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "amount": 2900,
                    "method": "SWIFT",
                    "currency": "USD",
                    "bank_name": "BANK CENTRAL ASIA",
                    "wallet_address": null,
                    "bank_swift_code": "299239",
                    "bank_receiver_name": "John",
                    "bank_account_number": "0198082839"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transactions": {
      "get": {
        "summary": "Get Transaction Histories",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "transactions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "user_id": {
                            "type": "integer"
                          },
                          "transaction_type": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "amount": {
                            "type": "string"
                          },
                          "amount_in_lc": {
                            "type": "string"
                          },
                          "grand_total": {
                            "type": "string"
                          },
                          "grand_total_in_lc": {
                            "type": "string"
                          },
                          "exchange_rate": {
                            "type": "string"
                          },
                          "balance_used": {
                            "type": "string"
                          },
                          "deposited_amount": {
                            "type": "string"
                          },
                          "deposited_amount_in_lc": {
                            "type": "string"
                          },
                          "amount_trimmed": {
                            "type": "string"
                          },
                          "grand_total_trimmed": {
                            "type": "string"
                          },
                          "grand_total_in_lc_trimmed": {
                            "type": "string"
                          },
                          "balance_used_trimmed": {
                            "type": "string"
                          },
                          "currency": {
                            "type": "string"
                          },
                          "user_currency": {
                            "type": [
                              "null",
                              "string"
                            ]
                          },
                          "description": {
                            "type": [
                              "null",
                              "string"
                            ]
                          },
                          "counterparty": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "first_name": {
                                "type": "string"
                              },
                              "last_name": {
                                "type": "string"
                              },
                              "public_username": {
                                "type": "string"
                              },
                              "profile_picture_url": {
                                "type": "string"
                              }
                            }
                          },
                          "payments": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "transaction_id": {
                                  "type": "integer"
                                },
                                "amount": {
                                  "type": "string"
                                },
                                "currency": {
                                  "type": "string"
                                },
                                "status": {
                                  "type": "string"
                                },
                                "payment_method": {
                                  "type": "string"
                                },
                                "created_at": {
                                  "type": "string"
                                },
                                "updated_at": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string"
                          },
                          "subscription_plan": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "price": {
                                "type": "null"
                              }
                            }
                          }
                        }
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer"
                        },
                        "per_page": {
                          "type": "integer"
                        },
                        "current_page": {
                          "type": "integer"
                        },
                        "last_page": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "error": false,
                      "transactions": [
                        {
                          "id": 177,
                          "user_id": 14,
                          "transaction_type": "withdrawal",
                          "status": "pending",
                          "amount": "2900.00000000",
                          "amount_in_lc": "2900.00",
                          "grand_total": "2900.00000000",
                          "grand_total_in_lc": "2900.00",
                          "exchange_rate": "1.00000000",
                          "balance_used": "0.00000000",
                          "deposited_amount": "2900.00000000",
                          "deposited_amount_in_lc": "2900.00",
                          "amount_trimmed": "2,900",
                          "grand_total_trimmed": "2,900",
                          "grand_total_in_lc_trimmed": "2,900",
                          "balance_used_trimmed": "0",
                          "currency": "USD",
                          "user_currency": "USD",
                          "description": "Withdrawal Request",
                          "counterparty": {
                            "id": 14,
                            "first_name": "Alfi",
                            "last_name": "Syahri",
                            "public_username": "mrriyous",
                            "profile_picture_url": "http://localhost:8000/storage/profile-pictures/14_1748358438.jpg"
                          },
                          "payments": [],
                          "created_at": "2025-06-09T00:22:56.000000Z",
                          "updated_at": "2025-06-09T00:22:56.000000Z"
                        },
                        {
                          "id": 176,
                          "user_id": 14,
                          "transaction_type": "deposit",
                          "status": "cancelled",
                          "amount": "2400.00000000",
                          "amount_in_lc": "2400.00",
                          "grand_total": "2400.00000000",
                          "grand_total_in_lc": "2400.00",
                          "exchange_rate": "1.00000000",
                          "balance_used": "0.00000000",
                          "deposited_amount": "2400.00000000",
                          "deposited_amount_in_lc": "2400.00",
                          "amount_trimmed": "2,400",
                          "grand_total_trimmed": "2,400",
                          "grand_total_in_lc_trimmed": "2,400",
                          "balance_used_trimmed": "0",
                          "currency": "USD",
                          "user_currency": "USD",
                          "description": "Deposit",
                          "counterparty": {
                            "id": 14,
                            "first_name": "Alfi",
                            "last_name": "Syahri",
                            "public_username": "mrriyous",
                            "profile_picture_url": "http://localhost:8000/storage/profile-pictures/14_1748358438.jpg"
                          },
                          "payments": [
                            {
                              "id": 174,
                              "transaction_id": 176,
                              "amount": "2400.00000000",
                              "currency": "USD",
                              "status": "cancelled",
                              "payment_method": "CARD",
                              "created_at": "2025-06-09T00:19:39.000000Z",
                              "updated_at": "2025-06-09T00:21:43.000000Z"
                            }
                          ],
                          "created_at": "2025-06-09T00:19:38.000000Z",
                          "updated_at": "2025-06-09T00:21:43.000000Z"
                        },
                        {
                          "id": 175,
                          "user_id": 14,
                          "transaction_type": "subscription",
                          "status": "cancelled",
                          "amount": "328.00000000",
                          "amount_in_lc": "328.00",
                          "grand_total": "328.00000000",
                          "grand_total_in_lc": "328.00",
                          "exchange_rate": "1.00000000",
                          "balance_used": "20.00000000",
                          "deposited_amount": "328.00000000",
                          "deposited_amount_in_lc": "328.00",
                          "amount_trimmed": "328",
                          "grand_total_trimmed": "328",
                          "grand_total_in_lc_trimmed": "328",
                          "balance_used_trimmed": "20",
                          "currency": "USD",
                          "user_currency": "USD",
                          "description": "Subscription purchase for plan Standard Annual Plan",
                          "subscription_plan": {
                            "id": 14,
                            "name": "Standard Annual Plan",
                            "price": null
                          },
                          "counterparty": {
                            "first_name": "MMM",
                            "last_name": "Finance",
                            "public_username": "",
                            "profile_picture_url": "http://localhost:8001/static/images/logo.png"
                          },
                          "payments": [
                            {
                              "id": 172,
                              "transaction_id": 175,
                              "amount": "20.00000000",
                              "currency": "USD",
                              "status": "reserved",
                              "payment_method": "BALANCE",
                              "created_at": "2025-06-09T00:15:24.000000Z",
                              "updated_at": "2025-06-09T00:15:24.000000Z"
                            },
                            {
                              "id": 173,
                              "transaction_id": 175,
                              "amount": "328.00000000",
                              "currency": "USD",
                              "status": "cancelled",
                              "payment_method": "CARD",
                              "created_at": "2025-06-09T00:15:25.000000Z",
                              "updated_at": "2025-06-09T00:19:10.000000Z"
                            }
                          ],
                          "created_at": "2025-06-09T00:15:24.000000Z",
                          "updated_at": "2025-06-09T00:19:10.000000Z"
                        },
                        {
                          "id": 158,
                          "user_id": 14,
                          "transaction_type": "subscription",
                          "status": "completed",
                          "amount": "444.00000000",
                          "amount_in_lc": "444.00",
                          "grand_total": "444.00000000",
                          "grand_total_in_lc": "444.00",
                          "exchange_rate": "1.00000000",
                          "balance_used": "20.00000000",
                          "deposited_amount": "444.00000000",
                          "deposited_amount_in_lc": "444.00",
                          "amount_trimmed": "444",
                          "grand_total_trimmed": "444",
                          "grand_total_in_lc_trimmed": "444",
                          "balance_used_trimmed": "20",
                          "currency": "USD",
                          "user_currency": null,
                          "description": "Subscription purchase for plan Premium Annual Plan",
                          "subscription_plan": {
                            "id": 15,
                            "name": "Premium Annual Plan",
                            "price": null
                          },
                          "counterparty": {
                            "first_name": "MMM",
                            "last_name": "Finance",
                            "public_username": "",
                            "profile_picture_url": "http://localhost:8001/static/images/logo.png"
                          },
                          "payments": [
                            {
                              "id": 155,
                              "transaction_id": 158,
                              "amount": "20.00000000",
                              "currency": "USD",
                              "status": "reserved",
                              "payment_method": "BALANCE",
                              "created_at": "2025-06-03T02:14:24.000000Z",
                              "updated_at": "2025-06-03T02:14:24.000000Z"
                            },
                            {
                              "id": 156,
                              "transaction_id": 158,
                              "amount": "444.00000000",
                              "currency": "USD",
                              "status": "completed",
                              "payment_method": "SWIFT",
                              "created_at": "2025-06-03T02:14:24.000000Z",
                              "updated_at": "2025-06-03T02:35:31.000000Z"
                            }
                          ],
                          "created_at": "2025-06-03T02:14:24.000000Z",
                          "updated_at": "2025-06-03T02:35:31.000000Z"
                        },
                        {
                          "id": 157,
                          "user_id": 14,
                          "transaction_type": "withdrawal",
                          "status": "canceled",
                          "amount": "200000.00000000",
                          "amount_in_lc": "200000.00",
                          "grand_total": "200000.00000000",
                          "grand_total_in_lc": "200000.00",
                          "exchange_rate": "1.00000000",
                          "balance_used": "0.00000000",
                          "deposited_amount": "200000.00000000",
                          "deposited_amount_in_lc": "200000.00",
                          "amount_trimmed": "200,000",
                          "grand_total_trimmed": "200,000",
                          "grand_total_in_lc_trimmed": "200,000",
                          "balance_used_trimmed": "0",
                          "currency": "USD",
                          "user_currency": null,
                          "description": "Withdrawal Request",
                          "counterparty": {
                            "id": 14,
                            "first_name": "Alfi",
                            "last_name": "Syahri",
                            "public_username": "mrriyous",
                            "profile_picture_url": "http://localhost:8000/storage/profile-pictures/14_1748358438.jpg"
                          },
                          "payments": [],
                          "created_at": "2025-06-03T02:07:45.000000Z",
                          "updated_at": "2025-06-03T02:07:45.000000Z"
                        },
                        {
                          "id": 156,
                          "user_id": 14,
                          "transaction_type": "withdrawal",
                          "status": "completed",
                          "amount": "12000.00000000",
                          "amount_in_lc": "12000.00",
                          "grand_total": "12000.00000000",
                          "grand_total_in_lc": "12000.00",
                          "exchange_rate": "1.00000000",
                          "balance_used": "0.00000000",
                          "deposited_amount": "12000.00000000",
                          "deposited_amount_in_lc": "12000.00",
                          "amount_trimmed": "12,000",
                          "grand_total_trimmed": "12,000",
                          "grand_total_in_lc_trimmed": "12,000",
                          "balance_used_trimmed": "0",
                          "currency": "USD",
                          "user_currency": null,
                          "description": "Withdrawal Request",
                          "counterparty": {
                            "id": 14,
                            "first_name": "Alfi",
                            "last_name": "Syahri",
                            "public_username": "mrriyous",
                            "profile_picture_url": "http://localhost:8000/storage/profile-pictures/14_1748358438.jpg"
                          },
                          "payments": [],
                          "created_at": "2025-06-03T02:07:24.000000Z",
                          "updated_at": "2025-06-03T02:07:44.000000Z"
                        },
                        {
                          "id": 155,
                          "user_id": 14,
                          "transaction_type": "deposit",
                          "status": "completed",
                          "amount": "10.00000000",
                          "amount_in_lc": "10.00",
                          "grand_total": "10.00000000",
                          "grand_total_in_lc": "10.00",
                          "exchange_rate": "1.00000000",
                          "balance_used": "0.00000000",
                          "deposited_amount": "10.00000000",
                          "deposited_amount_in_lc": "10.00",
                          "amount_trimmed": "10",
                          "grand_total_trimmed": "10",
                          "grand_total_in_lc_trimmed": "10",
                          "balance_used_trimmed": "0",
                          "currency": "USD",
                          "user_currency": null,
                          "description": "Deposit",
                          "counterparty": {
                            "id": 14,
                            "first_name": "Alfi",
                            "last_name": "Syahri",
                            "public_username": "mrriyous",
                            "profile_picture_url": "http://localhost:8000/storage/profile-pictures/14_1748358438.jpg"
                          },
                          "payments": [
                            {
                              "id": 154,
                              "transaction_id": 155,
                              "amount": "10.00000000",
                              "currency": "USD",
                              "status": "completed",
                              "payment_method": "SWIFT",
                              "created_at": "2025-06-03T02:06:55.000000Z",
                              "updated_at": "2025-06-03T02:08:05.000000Z"
                            }
                          ],
                          "created_at": "2025-06-03T02:06:54.000000Z",
                          "updated_at": "2025-06-03T02:08:05.000000Z"
                        },
                        {
                          "id": 154,
                          "user_id": 14,
                          "transaction_type": "subscription",
                          "status": "completed",
                          "amount": "0.00000000",
                          "amount_in_lc": "0.00",
                          "grand_total": "0.00000000",
                          "grand_total_in_lc": "0.00",
                          "exchange_rate": "1.00000000",
                          "balance_used": "116.00000000",
                          "deposited_amount": "0.00000000",
                          "deposited_amount_in_lc": "0.00",
                          "amount_trimmed": "0",
                          "grand_total_trimmed": "0",
                          "grand_total_in_lc_trimmed": "0",
                          "balance_used_trimmed": "116",
                          "currency": "USD",
                          "user_currency": null,
                          "description": "Subscription upgrade from Premium Annual Plan to VIP Annual Plan",
                          "subscription_plan": {
                            "id": 16,
                            "name": "VIP Annual Plan",
                            "price": null
                          },
                          "counterparty": {
                            "first_name": "MMM",
                            "last_name": "Finance",
                            "public_username": "",
                            "profile_picture_url": "http://localhost:8001/static/images/logo.png"
                          },
                          "payments": [
                            {
                              "id": 153,
                              "transaction_id": 154,
                              "amount": "116.00000000",
                              "currency": "USD",
                              "status": "reserved",
                              "payment_method": "BALANCE",
                              "created_at": "2025-06-03T02:02:19.000000Z",
                              "updated_at": "2025-06-03T02:02:19.000000Z"
                            }
                          ],
                          "created_at": "2025-06-03T02:02:19.000000Z",
                          "updated_at": "2025-06-03T02:02:19.000000Z"
                        },
                        {
                          "id": 153,
                          "user_id": 14,
                          "transaction_type": "deposit",
                          "status": "completed",
                          "amount": "240000.00000000",
                          "amount_in_lc": "240000.00",
                          "grand_total": "240000.00000000",
                          "grand_total_in_lc": "240000.00",
                          "exchange_rate": "1.00000000",
                          "balance_used": "0.00000000",
                          "deposited_amount": "240000.00000000",
                          "deposited_amount_in_lc": "240000.00",
                          "amount_trimmed": "240,000",
                          "grand_total_trimmed": "240,000",
                          "grand_total_in_lc_trimmed": "240,000",
                          "balance_used_trimmed": "0",
                          "currency": "USD",
                          "user_currency": null,
                          "description": null,
                          "counterparty": {
                            "id": 14,
                            "first_name": "Alfi",
                            "last_name": "Syahri",
                            "public_username": "mrriyous",
                            "profile_picture_url": "http://localhost:8000/storage/profile-pictures/14_1748358438.jpg"
                          },
                          "payments": [
                            {
                              "id": 152,
                              "transaction_id": 153,
                              "amount": "240000.00000000",
                              "currency": "USD",
                              "status": "completed",
                              "payment_method": "SWIFT",
                              "created_at": "2025-06-03T01:48:08.000000Z",
                              "updated_at": "2025-06-03T01:57:44.000000Z"
                            }
                          ],
                          "created_at": "2025-06-03T01:48:08.000000Z",
                          "updated_at": "2025-06-03T01:57:44.000000Z"
                        },
                        {
                          "id": 152,
                          "user_id": 14,
                          "transaction_type": "subscription",
                          "status": "completed",
                          "amount": "0.00000000",
                          "amount_in_lc": "0.00",
                          "grand_total": "0.00000000",
                          "grand_total_in_lc": "0.00",
                          "exchange_rate": "1.00000000",
                          "balance_used": "464.00000000",
                          "deposited_amount": "0.00000000",
                          "deposited_amount_in_lc": "0.00",
                          "amount_trimmed": "0",
                          "grand_total_trimmed": "0",
                          "grand_total_in_lc_trimmed": "0",
                          "balance_used_trimmed": "464",
                          "currency": "USD",
                          "user_currency": null,
                          "description": null,
                          "subscription_plan": {
                            "id": 15,
                            "name": "Premium Annual Plan",
                            "price": null
                          },
                          "counterparty": {
                            "first_name": "MMM",
                            "last_name": "Finance",
                            "public_username": "",
                            "profile_picture_url": "http://localhost:8001/static/images/logo.png"
                          },
                          "payments": [
                            {
                              "id": 151,
                              "transaction_id": 152,
                              "amount": "464.00000000",
                              "currency": "USD",
                              "status": "reserved",
                              "payment_method": "BALANCE",
                              "created_at": "2025-05-29T14:27:44.000000Z",
                              "updated_at": "2025-05-29T14:27:44.000000Z"
                            }
                          ],
                          "created_at": "2025-05-29T14:27:44.000000Z",
                          "updated_at": "2025-05-29T14:27:44.000000Z"
                        }
                      ],
                      "pagination": {
                        "total": 75,
                        "per_page": 10,
                        "current_page": 1,
                        "last_page": 8
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "error": false,
                      "transactions": [
                        {
                          "id": 177,
                          "user_id": 14,
                          "transaction_type": "withdrawal",
                          "status": "pending",
                          "amount": "2900.00000000",
                          "amount_in_lc": "2900.00",
                          "grand_total": "2900.00000000",
                          "grand_total_in_lc": "2900.00",
                          "exchange_rate": "1.00000000",
                          "balance_used": "0.00000000",
                          "deposited_amount": "2900.00000000",
                          "deposited_amount_in_lc": "2900.00",
                          "amount_trimmed": "2,900",
                          "grand_total_trimmed": "2,900",
                          "grand_total_in_lc_trimmed": "2,900",
                          "balance_used_trimmed": "0",
                          "currency": "USD",
                          "user_currency": "USD",
                          "description": "Withdrawal Request",
                          "counterparty": {
                            "id": 14,
                            "first_name": "Alfi",
                            "last_name": "Syahri",
                            "public_username": "mrriyous",
                            "profile_picture_url": "http://localhost:8000/storage/profile-pictures/14_1748358438.jpg"
                          },
                          "payments": [],
                          "created_at": "2025-06-09T00:22:56.000000Z",
                          "updated_at": "2025-06-09T00:22:56.000000Z"
                        },
                        {
                          "id": 176,
                          "user_id": 14,
                          "transaction_type": "deposit",
                          "status": "cancelled",
                          "amount": "2400.00000000",
                          "amount_in_lc": "2400.00",
                          "grand_total": "2400.00000000",
                          "grand_total_in_lc": "2400.00",
                          "exchange_rate": "1.00000000",
                          "balance_used": "0.00000000",
                          "deposited_amount": "2400.00000000",
                          "deposited_amount_in_lc": "2400.00",
                          "amount_trimmed": "2,400",
                          "grand_total_trimmed": "2,400",
                          "grand_total_in_lc_trimmed": "2,400",
                          "balance_used_trimmed": "0",
                          "currency": "USD",
                          "user_currency": "USD",
                          "description": "Deposit",
                          "counterparty": {
                            "id": 14,
                            "first_name": "Alfi",
                            "last_name": "Syahri",
                            "public_username": "mrriyous",
                            "profile_picture_url": "http://localhost:8000/storage/profile-pictures/14_1748358438.jpg"
                          },
                          "payments": [
                            {
                              "id": 174,
                              "transaction_id": 176,
                              "amount": "2400.00000000",
                              "currency": "USD",
                              "status": "cancelled",
                              "payment_method": "CARD",
                              "created_at": "2025-06-09T00:19:39.000000Z",
                              "updated_at": "2025-06-09T00:21:43.000000Z"
                            }
                          ],
                          "created_at": "2025-06-09T00:19:38.000000Z",
                          "updated_at": "2025-06-09T00:21:43.000000Z"
                        },
                        {
                          "id": 175,
                          "user_id": 14,
                          "transaction_type": "subscription",
                          "status": "cancelled",
                          "amount": "328.00000000",
                          "amount_in_lc": "328.00",
                          "grand_total": "328.00000000",
                          "grand_total_in_lc": "328.00",
                          "exchange_rate": "1.00000000",
                          "balance_used": "20.00000000",
                          "deposited_amount": "328.00000000",
                          "deposited_amount_in_lc": "328.00",
                          "amount_trimmed": "328",
                          "grand_total_trimmed": "328",
                          "grand_total_in_lc_trimmed": "328",
                          "balance_used_trimmed": "20",
                          "currency": "USD",
                          "user_currency": "USD",
                          "description": "Subscription purchase for plan Standard Annual Plan",
                          "subscription_plan": {
                            "id": 14,
                            "name": "Standard Annual Plan",
                            "price": null
                          },
                          "counterparty": {
                            "first_name": "MMM",
                            "last_name": "Finance",
                            "public_username": "",
                            "profile_picture_url": "http://localhost:8001/static/images/logo.png"
                          },
                          "payments": [
                            {
                              "id": 172,
                              "transaction_id": 175,
                              "amount": "20.00000000",
                              "currency": "USD",
                              "status": "reserved",
                              "payment_method": "BALANCE",
                              "created_at": "2025-06-09T00:15:24.000000Z",
                              "updated_at": "2025-06-09T00:15:24.000000Z"
                            },
                            {
                              "id": 173,
                              "transaction_id": 175,
                              "amount": "328.00000000",
                              "currency": "USD",
                              "status": "cancelled",
                              "payment_method": "CARD",
                              "created_at": "2025-06-09T00:15:25.000000Z",
                              "updated_at": "2025-06-09T00:19:10.000000Z"
                            }
                          ],
                          "created_at": "2025-06-09T00:15:24.000000Z",
                          "updated_at": "2025-06-09T00:19:10.000000Z"
                        },
                        {
                          "id": 158,
                          "user_id": 14,
                          "transaction_type": "subscription",
                          "status": "completed",
                          "amount": "444.00000000",
                          "amount_in_lc": "444.00",
                          "grand_total": "444.00000000",
                          "grand_total_in_lc": "444.00",
                          "exchange_rate": "1.00000000",
                          "balance_used": "20.00000000",
                          "deposited_amount": "444.00000000",
                          "deposited_amount_in_lc": "444.00",
                          "amount_trimmed": "444",
                          "grand_total_trimmed": "444",
                          "grand_total_in_lc_trimmed": "444",
                          "balance_used_trimmed": "20",
                          "currency": "USD",
                          "user_currency": null,
                          "description": "Subscription purchase for plan Premium Annual Plan",
                          "subscription_plan": {
                            "id": 15,
                            "name": "Premium Annual Plan",
                            "price": null
                          },
                          "counterparty": {
                            "first_name": "MMM",
                            "last_name": "Finance",
                            "public_username": "",
                            "profile_picture_url": "http://localhost:8001/static/images/logo.png"
                          },
                          "payments": [
                            {
                              "id": 155,
                              "transaction_id": 158,
                              "amount": "20.00000000",
                              "currency": "USD",
                              "status": "reserved",
                              "payment_method": "BALANCE",
                              "created_at": "2025-06-03T02:14:24.000000Z",
                              "updated_at": "2025-06-03T02:14:24.000000Z"
                            },
                            {
                              "id": 156,
                              "transaction_id": 158,
                              "amount": "444.00000000",
                              "currency": "USD",
                              "status": "completed",
                              "payment_method": "SWIFT",
                              "created_at": "2025-06-03T02:14:24.000000Z",
                              "updated_at": "2025-06-03T02:35:31.000000Z"
                            }
                          ],
                          "created_at": "2025-06-03T02:14:24.000000Z",
                          "updated_at": "2025-06-03T02:35:31.000000Z"
                        },
                        {
                          "id": 157,
                          "user_id": 14,
                          "transaction_type": "withdrawal",
                          "status": "canceled",
                          "amount": "200000.00000000",
                          "amount_in_lc": "200000.00",
                          "grand_total": "200000.00000000",
                          "grand_total_in_lc": "200000.00",
                          "exchange_rate": "1.00000000",
                          "balance_used": "0.00000000",
                          "deposited_amount": "200000.00000000",
                          "deposited_amount_in_lc": "200000.00",
                          "amount_trimmed": "200,000",
                          "grand_total_trimmed": "200,000",
                          "grand_total_in_lc_trimmed": "200,000",
                          "balance_used_trimmed": "0",
                          "currency": "USD",
                          "user_currency": null,
                          "description": "Withdrawal Request",
                          "counterparty": {
                            "id": 14,
                            "first_name": "Alfi",
                            "last_name": "Syahri",
                            "public_username": "mrriyous",
                            "profile_picture_url": "http://localhost:8000/storage/profile-pictures/14_1748358438.jpg"
                          },
                          "payments": [],
                          "created_at": "2025-06-03T02:07:45.000000Z",
                          "updated_at": "2025-06-03T02:07:45.000000Z"
                        },
                        {
                          "id": 156,
                          "user_id": 14,
                          "transaction_type": "withdrawal",
                          "status": "completed",
                          "amount": "12000.00000000",
                          "amount_in_lc": "12000.00",
                          "grand_total": "12000.00000000",
                          "grand_total_in_lc": "12000.00",
                          "exchange_rate": "1.00000000",
                          "balance_used": "0.00000000",
                          "deposited_amount": "12000.00000000",
                          "deposited_amount_in_lc": "12000.00",
                          "amount_trimmed": "12,000",
                          "grand_total_trimmed": "12,000",
                          "grand_total_in_lc_trimmed": "12,000",
                          "balance_used_trimmed": "0",
                          "currency": "USD",
                          "user_currency": null,
                          "description": "Withdrawal Request",
                          "counterparty": {
                            "id": 14,
                            "first_name": "Alfi",
                            "last_name": "Syahri",
                            "public_username": "mrriyous",
                            "profile_picture_url": "http://localhost:8000/storage/profile-pictures/14_1748358438.jpg"
                          },
                          "payments": [],
                          "created_at": "2025-06-03T02:07:24.000000Z",
                          "updated_at": "2025-06-03T02:07:44.000000Z"
                        },
                        {
                          "id": 155,
                          "user_id": 14,
                          "transaction_type": "deposit",
                          "status": "completed",
                          "amount": "10.00000000",
                          "amount_in_lc": "10.00",
                          "grand_total": "10.00000000",
                          "grand_total_in_lc": "10.00",
                          "exchange_rate": "1.00000000",
                          "balance_used": "0.00000000",
                          "deposited_amount": "10.00000000",
                          "deposited_amount_in_lc": "10.00",
                          "amount_trimmed": "10",
                          "grand_total_trimmed": "10",
                          "grand_total_in_lc_trimmed": "10",
                          "balance_used_trimmed": "0",
                          "currency": "USD",
                          "user_currency": null,
                          "description": "Deposit",
                          "counterparty": {
                            "id": 14,
                            "first_name": "Alfi",
                            "last_name": "Syahri",
                            "public_username": "mrriyous",
                            "profile_picture_url": "http://localhost:8000/storage/profile-pictures/14_1748358438.jpg"
                          },
                          "payments": [
                            {
                              "id": 154,
                              "transaction_id": 155,
                              "amount": "10.00000000",
                              "currency": "USD",
                              "status": "completed",
                              "payment_method": "SWIFT",
                              "created_at": "2025-06-03T02:06:55.000000Z",
                              "updated_at": "2025-06-03T02:08:05.000000Z"
                            }
                          ],
                          "created_at": "2025-06-03T02:06:54.000000Z",
                          "updated_at": "2025-06-03T02:08:05.000000Z"
                        },
                        {
                          "id": 154,
                          "user_id": 14,
                          "transaction_type": "subscription",
                          "status": "completed",
                          "amount": "0.00000000",
                          "amount_in_lc": "0.00",
                          "grand_total": "0.00000000",
                          "grand_total_in_lc": "0.00",
                          "exchange_rate": "1.00000000",
                          "balance_used": "116.00000000",
                          "deposited_amount": "0.00000000",
                          "deposited_amount_in_lc": "0.00",
                          "amount_trimmed": "0",
                          "grand_total_trimmed": "0",
                          "grand_total_in_lc_trimmed": "0",
                          "balance_used_trimmed": "116",
                          "currency": "USD",
                          "user_currency": null,
                          "description": "Subscription upgrade from Premium Annual Plan to VIP Annual Plan",
                          "subscription_plan": {
                            "id": 16,
                            "name": "VIP Annual Plan",
                            "price": null
                          },
                          "counterparty": {
                            "first_name": "MMM",
                            "last_name": "Finance",
                            "public_username": "",
                            "profile_picture_url": "http://localhost:8001/static/images/logo.png"
                          },
                          "payments": [
                            {
                              "id": 153,
                              "transaction_id": 154,
                              "amount": "116.00000000",
                              "currency": "USD",
                              "status": "reserved",
                              "payment_method": "BALANCE",
                              "created_at": "2025-06-03T02:02:19.000000Z",
                              "updated_at": "2025-06-03T02:02:19.000000Z"
                            }
                          ],
                          "created_at": "2025-06-03T02:02:19.000000Z",
                          "updated_at": "2025-06-03T02:02:19.000000Z"
                        },
                        {
                          "id": 153,
                          "user_id": 14,
                          "transaction_type": "deposit",
                          "status": "completed",
                          "amount": "240000.00000000",
                          "amount_in_lc": "240000.00",
                          "grand_total": "240000.00000000",
                          "grand_total_in_lc": "240000.00",
                          "exchange_rate": "1.00000000",
                          "balance_used": "0.00000000",
                          "deposited_amount": "240000.00000000",
                          "deposited_amount_in_lc": "240000.00",
                          "amount_trimmed": "240,000",
                          "grand_total_trimmed": "240,000",
                          "grand_total_in_lc_trimmed": "240,000",
                          "balance_used_trimmed": "0",
                          "currency": "USD",
                          "user_currency": null,
                          "description": null,
                          "counterparty": {
                            "id": 14,
                            "first_name": "Alfi",
                            "last_name": "Syahri",
                            "public_username": "mrriyous",
                            "profile_picture_url": "http://localhost:8000/storage/profile-pictures/14_1748358438.jpg"
                          },
                          "payments": [
                            {
                              "id": 152,
                              "transaction_id": 153,
                              "amount": "240000.00000000",
                              "currency": "USD",
                              "status": "completed",
                              "payment_method": "SWIFT",
                              "created_at": "2025-06-03T01:48:08.000000Z",
                              "updated_at": "2025-06-03T01:57:44.000000Z"
                            }
                          ],
                          "created_at": "2025-06-03T01:48:08.000000Z",
                          "updated_at": "2025-06-03T01:57:44.000000Z"
                        },
                        {
                          "id": 152,
                          "user_id": 14,
                          "transaction_type": "subscription",
                          "status": "completed",
                          "amount": "0.00000000",
                          "amount_in_lc": "0.00",
                          "grand_total": "0.00000000",
                          "grand_total_in_lc": "0.00",
                          "exchange_rate": "1.00000000",
                          "balance_used": "464.00000000",
                          "deposited_amount": "0.00000000",
                          "deposited_amount_in_lc": "0.00",
                          "amount_trimmed": "0",
                          "grand_total_trimmed": "0",
                          "grand_total_in_lc_trimmed": "0",
                          "balance_used_trimmed": "464",
                          "currency": "USD",
                          "user_currency": null,
                          "description": null,
                          "subscription_plan": {
                            "id": 15,
                            "name": "Premium Annual Plan",
                            "price": null
                          },
                          "counterparty": {
                            "first_name": "MMM",
                            "last_name": "Finance",
                            "public_username": "",
                            "profile_picture_url": "http://localhost:8001/static/images/logo.png"
                          },
                          "payments": [
                            {
                              "id": 151,
                              "transaction_id": 152,
                              "amount": "464.00000000",
                              "currency": "USD",
                              "status": "reserved",
                              "payment_method": "BALANCE",
                              "created_at": "2025-05-29T14:27:44.000000Z",
                              "updated_at": "2025-05-29T14:27:44.000000Z"
                            }
                          ],
                          "created_at": "2025-05-29T14:27:44.000000Z",
                          "updated_at": "2025-05-29T14:27:44.000000Z"
                        }
                      ],
                      "pagination": {
                        "total": 75,
                        "per_page": 10,
                        "current_page": 1,
                        "last_page": 8
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-transactions",
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "per_page"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "type",
            "description": "Type of transaction, subscription, deposit, withdrawal"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "page"
          }
        ]
      }
    },
    "/transactions/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get Transaction Details",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "transaction": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "user_id": {
                          "type": "integer"
                        },
                        "transaction_type": {
                          "type": "string"
                        },
                        "currency": {
                          "type": "string"
                        },
                        "user_currency": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "payment_method": {
                          "type": "string"
                        },
                        "amount": {
                          "type": "string"
                        },
                        "amount_in_lc": {
                          "type": "string"
                        },
                        "grand_total": {
                          "type": "string"
                        },
                        "grand_total_in_lc": {
                          "type": "string"
                        },
                        "exchange_rate": {
                          "type": "string"
                        },
                        "balance_used": {
                          "type": "string"
                        },
                        "deposited_amount": {
                          "type": "string"
                        },
                        "deposited_amount_in_lc": {
                          "type": "string"
                        },
                        "subscription_plan_id": {
                          "type": "null"
                        },
                        "comment": {
                          "type": "null"
                        },
                        "description": {
                          "type": "string"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        },
                        "deleted_at": {
                          "type": "null"
                        },
                        "withdrawal_bank_name": {
                          "type": "string"
                        },
                        "withdrawal_bank_swift_code": {
                          "type": "string"
                        },
                        "withdrawal_bank_account_number": {
                          "type": "string"
                        },
                        "withdrawal_bank_receiver_name": {
                          "type": "string"
                        },
                        "withdrawal_wallet_address": {
                          "type": "null"
                        },
                        "subscription_error": {
                          "type": "null"
                        },
                        "balance_used_trimmed": {
                          "type": "string"
                        },
                        "amount_trimmed": {
                          "type": "string"
                        },
                        "grand_total_trimmed": {
                          "type": "string"
                        },
                        "grand_total_in_lc_trimmed": {
                          "type": "string"
                        },
                        "deposited_amount_in_lc_trimmed": {
                          "type": "string"
                        },
                        "subscription_plan": {
                          "type": "null"
                        },
                        "stripe_checkout_session": {
                          "type": "null"
                        },
                        "payments": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "error": false,
                      "transaction": {
                        "id": 177,
                        "user_id": 14,
                        "transaction_type": "withdrawal",
                        "currency": "USD",
                        "user_currency": "USD",
                        "status": "pending",
                        "payment_method": "SWIFT",
                        "amount": "2900.00000000",
                        "amount_in_lc": "2900.00",
                        "grand_total": "2900.00000000",
                        "grand_total_in_lc": "2900.00",
                        "exchange_rate": "1.00000000",
                        "balance_used": "0.00000000",
                        "deposited_amount": "2900.00000000",
                        "deposited_amount_in_lc": "2900.00",
                        "subscription_plan_id": null,
                        "comment": null,
                        "description": "Withdrawal Request",
                        "created_at": "2025-06-09T00:22:56.000000Z",
                        "updated_at": "2025-06-09T00:22:56.000000Z",
                        "deleted_at": null,
                        "withdrawal_bank_name": "BANK CENTRAL ASIA",
                        "withdrawal_bank_swift_code": "299239",
                        "withdrawal_bank_account_number": "0198082839",
                        "withdrawal_bank_receiver_name": "John",
                        "withdrawal_wallet_address": null,
                        "subscription_error": null,
                        "balance_used_trimmed": "0",
                        "amount_trimmed": "2,900",
                        "grand_total_trimmed": "2,900",
                        "grand_total_in_lc_trimmed": "2,900",
                        "deposited_amount_in_lc_trimmed": "2,900",
                        "subscription_plan": null,
                        "stripe_checkout_session": null,
                        "payments": []
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "error": false,
                      "transaction": {
                        "id": 177,
                        "user_id": 14,
                        "transaction_type": "withdrawal",
                        "currency": "USD",
                        "user_currency": "USD",
                        "status": "pending",
                        "payment_method": "SWIFT",
                        "amount": "2900.00000000",
                        "amount_in_lc": "2900.00",
                        "grand_total": "2900.00000000",
                        "grand_total_in_lc": "2900.00",
                        "exchange_rate": "1.00000000",
                        "balance_used": "0.00000000",
                        "deposited_amount": "2900.00000000",
                        "deposited_amount_in_lc": "2900.00",
                        "subscription_plan_id": null,
                        "comment": null,
                        "description": "Withdrawal Request",
                        "created_at": "2025-06-09T00:22:56.000000Z",
                        "updated_at": "2025-06-09T00:22:56.000000Z",
                        "deleted_at": null,
                        "withdrawal_bank_name": "BANK CENTRAL ASIA",
                        "withdrawal_bank_swift_code": "299239",
                        "withdrawal_bank_account_number": "0198082839",
                        "withdrawal_bank_receiver_name": "John",
                        "withdrawal_wallet_address": null,
                        "subscription_error": null,
                        "balance_used_trimmed": "0",
                        "amount_trimmed": "2,900",
                        "grand_total_trimmed": "2,900",
                        "grand_total_in_lc_trimmed": "2,900",
                        "deposited_amount_in_lc_trimmed": "2,900",
                        "subscription_plan": null,
                        "stripe_checkout_session": null,
                        "payments": []
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-transactions-id",
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/transactions/{id}/status": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get Transaction's Status",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "error": false,
                      "status": "pending"
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "error": false,
                      "status": "pending"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-transactions-id-status",
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/transactions/{id}/cancel": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Cancel Transaction",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "error": false,
                      "message": "Transaction cancelled successfully"
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "error": false,
                      "message": "Transaction cancelled successfully"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post-transactions-id-cancel",
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/payment-methods": {
      "get": {
        "summary": "Get Payment Method List",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "type": {
                      "type": "null"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "withdrawal": {
                            "type": "boolean"
                          },
                          "type": {
                            "type": "string"
                          },
                          "icon": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "fields": {
                            "type": "object",
                            "properties": {
                              "account_number": {
                                "type": "string"
                              },
                              "account_holder_name": {
                                "type": "string"
                              },
                              "bank_name": {
                                "type": "string"
                              },
                              "swift_code": {
                                "type": "string"
                              }
                            }
                          },
                          "message": {
                            "type": "string"
                          },
                          "currency": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "error": false,
                      "type": null,
                      "data": [
                        {
                          "withdrawal": true,
                          "type": "bank_transfer",
                          "icon": "static/icons/payment_swift_icon.svg",
                          "name": "SWIFT",
                          "fields": {
                            "account_number": "1238343213721923",
                            "account_holder_name": "MMM Financial Services",
                            "bank_name": "Crédit Agricole Group",
                            "swift_code": "BDE324IO023"
                          }
                        },
                        {
                          "withdrawal": true,
                          "type": "bank_transfer",
                          "icon": "static/icons/payment_sepa_icon.svg",
                          "name": "SEPA",
                          "fields": {
                            "account_number": "SEPA-123456789",
                            "account_holder_name": "MMM Financial Services",
                            "bank_name": "Crédit Agricole Group",
                            "iban": "FR76300060000"
                          }
                        },
                        {
                          "withdrawal": false,
                          "type": "card",
                          "icon": "static/icons/payment_card_icon.svg",
                          "name": "CARD",
                          "message": "You will be redirected to our secure payment gateway to complete your transaction."
                        },
                        {
                          "withdrawal": true,
                          "type": "crypto",
                          "icon": "static/icons/payment_usdt_icon.svg",
                          "name": "USDT",
                          "message": "You will be redirected to CoinGate to complete your cryptocurrency payment.",
                          "currency": "USDT"
                        },
                        {
                          "withdrawal": true,
                          "type": "crypto",
                          "icon": "static/icons/payment_bitcoin_icon.svg",
                          "name": "BTC",
                          "message": "You will be redirected to CoinGate to complete your cryptocurrency payment.",
                          "currency": "BTC"
                        },
                        {
                          "withdrawal": true,
                          "type": "crypto",
                          "icon": "static/icons/payment_eurt_icon.svg",
                          "name": "EURT",
                          "message": "You will be redirected to CoinGate to complete your cryptocurrency payment.",
                          "currency": "EURT"
                        }
                      ]
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "error": false,
                      "type": null,
                      "data": [
                        {
                          "withdrawal": true,
                          "type": "bank_transfer",
                          "icon": "static/icons/payment_swift_icon.svg",
                          "name": "SWIFT",
                          "fields": {
                            "account_number": "1238343213721923",
                            "account_holder_name": "MMM Financial Services",
                            "bank_name": "Crédit Agricole Group",
                            "swift_code": "BDE324IO023"
                          }
                        },
                        {
                          "withdrawal": true,
                          "type": "bank_transfer",
                          "icon": "static/icons/payment_sepa_icon.svg",
                          "name": "SEPA",
                          "fields": {
                            "account_number": "SEPA-123456789",
                            "account_holder_name": "MMM Financial Services",
                            "bank_name": "Crédit Agricole Group",
                            "iban": "FR76300060000"
                          }
                        },
                        {
                          "withdrawal": false,
                          "type": "card",
                          "icon": "static/icons/payment_card_icon.svg",
                          "name": "CARD",
                          "message": "You will be redirected to our secure payment gateway to complete your transaction."
                        },
                        {
                          "withdrawal": true,
                          "type": "crypto",
                          "icon": "static/icons/payment_usdt_icon.svg",
                          "name": "USDT",
                          "message": "You will be redirected to CoinGate to complete your cryptocurrency payment.",
                          "currency": "USDT"
                        },
                        {
                          "withdrawal": true,
                          "type": "crypto",
                          "icon": "static/icons/payment_bitcoin_icon.svg",
                          "name": "BTC",
                          "message": "You will be redirected to CoinGate to complete your cryptocurrency payment.",
                          "currency": "BTC"
                        },
                        {
                          "withdrawal": true,
                          "type": "crypto",
                          "icon": "static/icons/payment_eurt_icon.svg",
                          "name": "EURT",
                          "message": "You will be redirected to CoinGate to complete your cryptocurrency payment.",
                          "currency": "EURT"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-payment-methods",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "type",
            "description": "Accept: subscription, deposit, withdrawal"
          }
        ]
      }
    },
    "/currencies": {
      "get": {
        "summary": "Get Currencies",
        "tags": [
          "Currencies"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "code": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "symbol": {
                            "type": "string"
                          },
                          "prefix": {
                            "type": "string"
                          },
                          "suffix": {
                            "type": "string"
                          },
                          "icon": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string"
                          },
                          "deleted_at": {
                            "type": "null"
                          },
                          "icon_url": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "error": false,
                      "data": [
                        {
                          "id": 10,
                          "code": "USD",
                          "name": "US Dollar",
                          "symbol": "$",
                          "prefix": "$",
                          "suffix": "",
                          "icon": "/static/icons/currency/usd.png",
                          "created_at": "2025-06-03T12:31:20.000000Z",
                          "updated_at": "2025-06-03T12:31:20.000000Z",
                          "deleted_at": null,
                          "icon_url": "http://localhost:8001/static/icons/currency/usd.png"
                        },
                        {
                          "id": 11,
                          "code": "EUR",
                          "name": "Euro",
                          "symbol": "€",
                          "prefix": "€",
                          "suffix": "",
                          "icon": "/static/icons/currency/eur.png",
                          "created_at": "2025-06-03T12:31:20.000000Z",
                          "updated_at": "2025-06-03T12:31:20.000000Z",
                          "deleted_at": null,
                          "icon_url": "http://localhost:8001/static/icons/currency/eur.png"
                        },
                        {
                          "id": 12,
                          "code": "GBP",
                          "name": "British Pound",
                          "symbol": "£",
                          "prefix": "£",
                          "suffix": "",
                          "icon": "/static/icons/currency/gbp.png",
                          "created_at": "2025-06-03T12:31:20.000000Z",
                          "updated_at": "2025-06-03T12:31:20.000000Z",
                          "deleted_at": null,
                          "icon_url": "http://localhost:8001/static/icons/currency/gbp.png"
                        },
                        {
                          "id": 13,
                          "code": "SGD",
                          "name": "Singapore Dollar",
                          "symbol": "S$",
                          "prefix": "S$",
                          "suffix": "",
                          "icon": "/static/icons/currency/sgd.png",
                          "created_at": "2025-06-03T12:31:20.000000Z",
                          "updated_at": "2025-06-03T12:31:20.000000Z",
                          "deleted_at": null,
                          "icon_url": "http://localhost:8001/static/icons/currency/sgd.png"
                        },
                        {
                          "id": 14,
                          "code": "HKD",
                          "name": "Hong Kong Dollar",
                          "symbol": "HK$",
                          "prefix": "HK$",
                          "suffix": "",
                          "icon": "/static/icons/currency/hkd.png",
                          "created_at": "2025-06-03T12:31:20.000000Z",
                          "updated_at": "2025-06-03T12:31:20.000000Z",
                          "deleted_at": null,
                          "icon_url": "http://localhost:8001/static/icons/currency/hkd.png"
                        },
                        {
                          "id": 15,
                          "code": "CNY",
                          "name": "Chinese Yuan",
                          "symbol": "¥",
                          "prefix": "¥",
                          "suffix": "",
                          "icon": "/static/icons/currency/cny.png",
                          "created_at": "2025-06-03T12:31:20.000000Z",
                          "updated_at": "2025-06-03T12:31:20.000000Z",
                          "deleted_at": null,
                          "icon_url": "http://localhost:8001/static/icons/currency/cny.png"
                        },
                        {
                          "id": 16,
                          "code": "PHP",
                          "name": "Philippine Peso",
                          "symbol": "₱",
                          "prefix": "₱",
                          "suffix": "",
                          "icon": "/static/icons/currency/php.png",
                          "created_at": "2025-06-03T12:31:20.000000Z",
                          "updated_at": "2025-06-03T12:31:20.000000Z",
                          "deleted_at": null,
                          "icon_url": "http://localhost:8001/static/icons/currency/php.png"
                        },
                        {
                          "id": 17,
                          "code": "RUB",
                          "name": "Russian Ruble",
                          "symbol": "₽",
                          "prefix": "₽",
                          "suffix": "",
                          "icon": "/static/icons/currency/rub.png",
                          "created_at": "2025-06-03T12:31:20.000000Z",
                          "updated_at": "2025-06-03T12:31:20.000000Z",
                          "deleted_at": null,
                          "icon_url": "http://localhost:8001/static/icons/currency/rub.png"
                        },
                        {
                          "id": 18,
                          "code": "JPY",
                          "name": "Japanese Yen",
                          "symbol": "¥",
                          "prefix": "¥",
                          "suffix": "",
                          "icon": "/static/icons/currency/jpy.png",
                          "created_at": "2025-06-03T12:31:20.000000Z",
                          "updated_at": "2025-06-03T12:31:20.000000Z",
                          "deleted_at": null,
                          "icon_url": "http://localhost:8001/static/icons/currency/jpy.png"
                        }
                      ]
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "error": false,
                      "data": [
                        {
                          "id": 10,
                          "code": "USD",
                          "name": "US Dollar",
                          "symbol": "$",
                          "prefix": "$",
                          "suffix": "",
                          "icon": "/static/icons/currency/usd.png",
                          "created_at": "2025-06-03T12:31:20.000000Z",
                          "updated_at": "2025-06-03T12:31:20.000000Z",
                          "deleted_at": null,
                          "icon_url": "http://localhost:8001/static/icons/currency/usd.png"
                        },
                        {
                          "id": 11,
                          "code": "EUR",
                          "name": "Euro",
                          "symbol": "€",
                          "prefix": "€",
                          "suffix": "",
                          "icon": "/static/icons/currency/eur.png",
                          "created_at": "2025-06-03T12:31:20.000000Z",
                          "updated_at": "2025-06-03T12:31:20.000000Z",
                          "deleted_at": null,
                          "icon_url": "http://localhost:8001/static/icons/currency/eur.png"
                        },
                        {
                          "id": 12,
                          "code": "GBP",
                          "name": "British Pound",
                          "symbol": "£",
                          "prefix": "£",
                          "suffix": "",
                          "icon": "/static/icons/currency/gbp.png",
                          "created_at": "2025-06-03T12:31:20.000000Z",
                          "updated_at": "2025-06-03T12:31:20.000000Z",
                          "deleted_at": null,
                          "icon_url": "http://localhost:8001/static/icons/currency/gbp.png"
                        },
                        {
                          "id": 13,
                          "code": "SGD",
                          "name": "Singapore Dollar",
                          "symbol": "S$",
                          "prefix": "S$",
                          "suffix": "",
                          "icon": "/static/icons/currency/sgd.png",
                          "created_at": "2025-06-03T12:31:20.000000Z",
                          "updated_at": "2025-06-03T12:31:20.000000Z",
                          "deleted_at": null,
                          "icon_url": "http://localhost:8001/static/icons/currency/sgd.png"
                        },
                        {
                          "id": 14,
                          "code": "HKD",
                          "name": "Hong Kong Dollar",
                          "symbol": "HK$",
                          "prefix": "HK$",
                          "suffix": "",
                          "icon": "/static/icons/currency/hkd.png",
                          "created_at": "2025-06-03T12:31:20.000000Z",
                          "updated_at": "2025-06-03T12:31:20.000000Z",
                          "deleted_at": null,
                          "icon_url": "http://localhost:8001/static/icons/currency/hkd.png"
                        },
                        {
                          "id": 15,
                          "code": "CNY",
                          "name": "Chinese Yuan",
                          "symbol": "¥",
                          "prefix": "¥",
                          "suffix": "",
                          "icon": "/static/icons/currency/cny.png",
                          "created_at": "2025-06-03T12:31:20.000000Z",
                          "updated_at": "2025-06-03T12:31:20.000000Z",
                          "deleted_at": null,
                          "icon_url": "http://localhost:8001/static/icons/currency/cny.png"
                        },
                        {
                          "id": 16,
                          "code": "PHP",
                          "name": "Philippine Peso",
                          "symbol": "₱",
                          "prefix": "₱",
                          "suffix": "",
                          "icon": "/static/icons/currency/php.png",
                          "created_at": "2025-06-03T12:31:20.000000Z",
                          "updated_at": "2025-06-03T12:31:20.000000Z",
                          "deleted_at": null,
                          "icon_url": "http://localhost:8001/static/icons/currency/php.png"
                        },
                        {
                          "id": 17,
                          "code": "RUB",
                          "name": "Russian Ruble",
                          "symbol": "₽",
                          "prefix": "₽",
                          "suffix": "",
                          "icon": "/static/icons/currency/rub.png",
                          "created_at": "2025-06-03T12:31:20.000000Z",
                          "updated_at": "2025-06-03T12:31:20.000000Z",
                          "deleted_at": null,
                          "icon_url": "http://localhost:8001/static/icons/currency/rub.png"
                        },
                        {
                          "id": 18,
                          "code": "JPY",
                          "name": "Japanese Yen",
                          "symbol": "¥",
                          "prefix": "¥",
                          "suffix": "",
                          "icon": "/static/icons/currency/jpy.png",
                          "created_at": "2025-06-03T12:31:20.000000Z",
                          "updated_at": "2025-06-03T12:31:20.000000Z",
                          "deleted_at": null,
                          "icon_url": "http://localhost:8001/static/icons/currency/jpy.png"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-currencies"
      }
    },
    "/chats": {
      "get": {
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get All Chats",
        "description": "Retrieves all chat rooms for the authenticated user with filtering options. Supports filtering by chat type and read status.",
        "tags": [
          "Chat"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": ["all", "archived", "deleted"],
              "default": "all"
            },
            "in": "query",
            "name": "type",
            "description": "Filter by chat type: all, archived, deleted (default: all)"
          },
          {
            "schema": {
              "type": "string",
              "enum": ["all", "read", "unread"],
              "default": "all"
            },
            "in": "query",
            "name": "read_status",
            "description": "Filter by read status: all, read, unread (default: all)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "ims": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ChatRoom"
                          }
                        },
                        "count": {
                          "type": "integer"
                        },
                        "offset": {
                          "type": "integer"
                        },
                        "total": {
                          "type": "integer"
                        },
                        "success": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/chats/unread-count": {
      "get": {
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get unread messages count",
        "description": "Retrieves the total count of unread messages across all chat rooms for the authenticated user.",
        "tags": [
          "Chat"
        ],
        "responses": {
          "200": {
            "description": "Unread count retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": false
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "unread_count": {
                          "type": "integer",
                          "description": "Total number of unread messages across all chat rooms",
                          "example": 12
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing authentication token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthenticated."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - RocketChat authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to authenticate user in RocketChat"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/chats/{publicUsername}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "publicUsername",
          "in": "path",
          "required": true,
          "description": "Public username of the chat partner"
        }
      ],
      "get": {
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get Chat Room",
        "description": "Retrieves information about a specific chat room with a user.",
        "tags": [
          "Chat"
        ],
        "responses": {
          "200": {
            "description": "Chat room information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/ChatRoomData"
                    }
                  }
                },
                "x-examples": {
                  "Example 1": {
                    "error": false,
                    "data": {
                      "_id": "PLN7BBfiHDZFgQqE9ugEqHdBXruwxZgt7a",
                      "t": "d",
                      "usernames": [
                        "mrriyous",
                        "nuaira"
                      ],
                      "usersCount": 2,
                      "msgs": 201,
                      "ts": "2025-07-02T17:40:29.214Z",
                      "uids": [
                        "PLN7BBfiHDZFgQqE9",
                        "ugEqHdBXruwxZgt7a"
                      ],
                      "default": false,
                      "ro": false,
                      "sysMes": true,
                      "_USERNAMES": [
                        "mrriyous",
                        "nuaira"
                      ],
                      "_updatedAt": "2025-07-13T14:10:31.942Z",
                      "lastMessage": {
                        "rid": "PLN7BBfiHDZFgQqE9ugEqHdBXruwxZgt7a",
                        "msg": "testing2",
                        "attachments": [],
                        "ts": "2025-07-13T14:10:31.932Z",
                        "u": {
                          "_id": "ugEqHdBXruwxZgt7a",
                          "username": "nuaira",
                          "name": "nuaira"
                        },
                        "_id": "9qbE9Nw4JSopxDdhC",
                        "_updatedAt": "2025-07-13T14:10:31.938Z",
                        "urls": [],
                        "mentions": [],
                        "channels": [],
                        "md": [
                          {
                            "type": "PARAGRAPH",
                            "value": [
                              {
                                "type": "PLAIN_TEXT",
                                "value": "testing2"
                              }
                            ]
                          }
                        ],
                        "ts_formatted_full_local": "July 13, 2025 09:10pm",
                        "msg_shortened": "testing2"
                      },
                      "lm": "2025-07-13T14:10:31.932Z",
                      "subscription": {
                        "_id": "sbruJaHHChAsuxqoY",
                        "rid": "PLN7BBfiHDZFgQqE9ugEqHdBXruwxZgt7a",
                        "u": {
                          "_id": "PLN7BBfiHDZFgQqE9",
                          "username": "mrriyous"
                        },
                        "_updatedAt": "2025-07-13T16:34:02.904Z",
                        "alert": false,
                        "fname": "nuaira",
                        "groupMentions": 0,
                        "name": "nuaira",
                        "open": true,
                        "t": "d",
                        "ts": "2025-07-02T17:40:29.217Z",
                        "unread": 0,
                        "userMentions": 0,
                        "ls": "2025-07-13T16:34:02.904Z"
                      },
                      "chat_partner": {
                        "id": 59,
                        "login_name": "nuaira",
                        "public_username": "nuaira",
                        "first_name": "Nuaira",
                        "last_name": "Nadira",
                        "email": "nuaira@testing.com",
                        "email_verified_at": null,
                        "hide_images": 0,
                        "email_verified": 1,
                        "gender": "female",
                        "partner_preference": "male",
                        "relationship_goals": "medium_term",
                        "role": "srs",
                        "created_at": "2025-07-01T10:26:09.000000Z",
                        "updated_at": "2025-07-07T08:53:07.000000Z",
                        "deleted_at": null,
                        "rocketchat_registered": 1,
                        "rocketchat_user_id": "ugEqHdBXruwxZgt7a",
                        "rocketchat_username": "nuaira",
                        "rocketchat_token": "iVR2JtCwdbuAyKjfuf2UKOh612zFvJCUHHs1UnT-O-Q",
                        "rocketchat_token_expires_at": "2025-09-30 17:41:07",
                        "timeoffset": 7,
                        "profile_picture_album_url": "http://localhost:8000/storage/profile-pictures/59_1751378283.jpg",
                        "profile_picture_url": "http://localhost:8000/storage/profile-pictures/59_1751378283.jpg"
                      },
                      "updated_at_in_unixms": 1752415831942,
                      "ts_formatted_local": "July 03, 2025 12:40am",
                      "message_unread": false
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/chats/{publicUsername}/subscription-info": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "publicUsername",
          "in": "path",
          "required": true,
          "description": "Public username of the chat partner"
        }
      ],
      "get": {
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get Room Subscription Info",
        "description": "Retrieves detailed subscription information for a specific chat room.",
        "tags": [
          "Chat"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": ["Y", "N"]
            },
            "in": "query",
            "name": "mark_as_read",
            "description": "Set to 'Y' to mark as read when fetching info"
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription info retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "rid": {
                          "type": "string"
                        },
                        "u": {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            }
                          }
                        },
                        "_updatedAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "alert": {
                          "type": "boolean"
                        },
                        "fname": {
                          "type": "string"
                        },
                        "groupMentions": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "open": {
                          "type": "boolean"
                        },
                        "t": {
                          "type": "string"
                        },
                        "ts": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "unread": {
                          "type": "integer"
                        },
                        "userMentions": {
                          "type": "integer"
                        },
                        "ls": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "ls_in_unix": {
                          "type": "integer"
                        },
                        "ls_in_date": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "ts_in_date": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "partners_room_meta": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "room_id": {
                              "type": "integer"
                            },
                            "rocketchat_room_id": {
                              "type": "string"
                            },
                            "user_id": {
                              "type": "integer"
                            },
                            "rocketchat_user_id": {
                              "type": "string"
                            },
                            "rocketchat_username": {
                              "type": "string"
                            },
                            "last_seen_at": {
                              "type": "integer"
                            },
                            "unread_count": {
                              "type": "integer"
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updated_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "deleted_at": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true
                            },
                            "last_seen_at_ts": {
                              "type": "string"
                            },
                            "last_seen_at_ts_local": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "error": false,
                      "data": {
                        "_id": "sbruJaHHChAsuxqoY",
                        "rid": "PLN7BBfiHDZFgQqE9ugEqHdBXruwxZgt7a",
                        "u": {
                          "_id": "PLN7BBfiHDZFgQqE9",
                          "username": "mrriyous"
                        },
                        "_updatedAt": "2025-07-13T16:34:02.904Z",
                        "alert": false,
                        "fname": "nuaira",
                        "groupMentions": 0,
                        "name": "nuaira",
                        "open": true,
                        "t": "d",
                        "ts": "2025-07-02T17:40:29.217Z",
                        "unread": 0,
                        "userMentions": 0,
                        "ls": "2025-07-13T16:34:02.904Z",
                        "ls_in_unix": 1752424442904,
                        "ls_in_date": "2025-07-13T23:34:02.904000Z",
                        "ts_in_date": "2025-07-03T00:40:29.217000Z",
                        "partners_room_meta": {
                          "id": 3,
                          "room_id": 2,
                          "rocketchat_room_id": "PLN7BBfiHDZFgQqE9ugEqHdBXruwxZgt7a",
                          "user_id": 59,
                          "rocketchat_user_id": "ugEqHdBXruwxZgt7a",
                          "rocketchat_username": "nuaira",
                          "last_seen_at": 1752424536540,
                          "unread_count": 0,
                          "created_at": "2025-07-10T15:48:30.000000Z",
                          "updated_at": "2025-07-13T16:35:36.000000Z",
                          "deleted_at": null,
                          "last_seen_at_ts": "2025-07-13 16:35:36",
                          "last_seen_at_ts_local": "2025-07-13 23:35:36"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/chats/{publicUsername}/messages": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "publicUsername",
          "in": "path",
          "required": true,
          "description": "Public username of the chat partner"
        }
      ],
      "get": {
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get Messages",
        "description": "Retrieves messages from a specific chat room with pagination.",
        "tags": [
          "Chat"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "page",
            "description": "Page number for pagination",
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Messages retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "messages": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/MessageObject"
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "error": false,
                      "data": {
                        "messages": [
                          {
                            "_id": "Wp3uFgMxLYAzCm76h",
                            "rid": "5xmeNGB5HALTftP3vPLN7BBfiHDZFgQqE9",
                            "msg": "Haloo",
                            "attachments": [],
                            "ts": "2025-07-14T05:00:09.481Z",
                            "u": {
                              "_id": "5xmeNGB5HALTftP3v",
                              "username": "sponsor_searcher",
                              "name": "Alamak Jang"
                            },
                            "_updatedAt": "2025-07-14T05:00:09.505Z",
                            "urls": [],
                            "mentions": [],
                            "channels": [],
                            "md": [
                              {
                                "type": "PARAGRAPH",
                                "value": [
                                  {
                                    "type": "PLAIN_TEXT",
                                    "value": "Haloo"
                                  }
                                ]
                              }
                            ],
                            "ts_in_unix": 1752469209481,
                            "has_been_read": true,
                            "ts_formatted": "05:00 am",
                            "ts_formatted_full": "14 July 2025, 05:00am",
                            "ts_formatted_local": "12:00 pm",
                            "ts_formatted_full_local": "14 July 2025, 12:00pm",
                            "ts_date_formatted": "July 14, 2025",
                            "is_sent_by_logged_in_user": false,
                            "editable": true,
                            "is_edited": false
                          },
                          {
                            "_id": "qykSn3xBKzew9uiDm",
                            "rid": "5xmeNGB5HALTftP3vPLN7BBfiHDZFgQqE9",
                            "msg": "bakaayraro",
                            "attachments": [],
                            "ts": "2025-07-13T16:35:24.316Z",
                            "u": {
                              "_id": "5xmeNGB5HALTftP3v",
                              "username": "sponsor_searcher",
                              "name": "Alamak Jang"
                            },
                            "_updatedAt": "2025-07-13T16:35:24.321Z",
                            "urls": [],
                            "mentions": [],
                            "channels": [],
                            "md": [
                              {
                                "type": "PARAGRAPH",
                                "value": [
                                  {
                                    "type": "PLAIN_TEXT",
                                    "value": "bakaayraro"
                                  }
                                ]
                              }
                            ],
                            "ts_in_unix": 1752424524316,
                            "has_been_read": true,
                            "ts_formatted": "04:35 pm",
                            "ts_formatted_full": "13 July 2025, 04:35pm",
                            "ts_formatted_local": "11:35 pm",
                            "ts_formatted_full_local": "13 July 2025, 11:35pm",
                            "ts_date_formatted": "July 13, 2025",
                            "is_sent_by_logged_in_user": false,
                            "editable": false,
                            "is_edited": false
                          },
                          {
                            "_id": "6GhopMT2pM5Ynf4pj",
                            "rid": "5xmeNGB5HALTftP3vPLN7BBfiHDZFgQqE9",
                            "msg": "Paansi",
                            "attachments": [],
                            "ts": "2025-07-13T16:35:19.063Z",
                            "u": {
                              "_id": "PLN7BBfiHDZFgQqE9",
                              "username": "mrriyous",
                              "name": "Alfi Syahri"
                            },
                            "_updatedAt": "2025-07-13T16:35:19.073Z",
                            "urls": [],
                            "mentions": [],
                            "channels": [],
                            "md": [
                              {
                                "type": "PARAGRAPH",
                                "value": [
                                  {
                                    "type": "PLAIN_TEXT",
                                    "value": "Paansi"
                                  }
                                ]
                              }
                            ],
                            "ts_in_unix": 1752424519063,
                            "has_been_read": false,
                            "ts_formatted": "04:35 pm",
                            "ts_formatted_full": "13 July 2025, 04:35pm",
                            "ts_formatted_local": "11:35 pm",
                            "ts_formatted_full_local": "13 July 2025, 11:35pm",
                            "ts_date_formatted": "July 13, 2025",
                            "is_sent_by_logged_in_user": true,
                            "editable": false,
                            "is_edited": false
                          },
                          {
                            "_id": "SnKJTYy6oSsDGidWL",
                            "rid": "5xmeNGB5HALTftP3vPLN7BBfiHDZFgQqE9",
                            "msg": "apasi",
                            "attachments": [],
                            "ts": "2025-07-13T16:34:19.760Z",
                            "u": {
                              "_id": "PLN7BBfiHDZFgQqE9",
                              "username": "mrriyous",
                              "name": "Alfi Syahri"
                            },
                            "_updatedAt": "2025-07-13T16:34:19.765Z",
                            "urls": [],
                            "mentions": [],
                            "channels": [],
                            "md": [
                              {
                                "type": "PARAGRAPH",
                                "value": [
                                  {
                                    "type": "PLAIN_TEXT",
                                    "value": "apasi"
                                  }
                                ]
                              }
                            ],
                            "ts_in_unix": 1752424459760,
                            "has_been_read": false,
                            "ts_formatted": "04:34 pm",
                            "ts_formatted_full": "13 July 2025, 04:34pm",
                            "ts_formatted_local": "11:34 pm",
                            "ts_formatted_full_local": "13 July 2025, 11:34pm",
                            "ts_date_formatted": "July 13, 2025",
                            "is_sent_by_logged_in_user": true,
                            "editable": false,
                            "is_edited": false
                          },
                          {
                            "_id": "Qx5PXHXyDMrniukY9",
                            "rid": "5xmeNGB5HALTftP3vPLN7BBfiHDZFgQqE9",
                            "msg": "basdf",
                            "attachments": [],
                            "ts": "2025-07-13T16:34:01.726Z",
                            "u": {
                              "_id": "5xmeNGB5HALTftP3v",
                              "username": "sponsor_searcher",
                              "name": "Alamak Jang"
                            },
                            "_updatedAt": "2025-07-13T16:34:01.735Z",
                            "urls": [],
                            "mentions": [],
                            "channels": [],
                            "md": [
                              {
                                "type": "PARAGRAPH",
                                "value": [
                                  {
                                    "type": "PLAIN_TEXT",
                                    "value": "basdf"
                                  }
                                ]
                              }
                            ],
                            "ts_in_unix": 1752424441726,
                            "has_been_read": true,
                            "ts_formatted": "04:34 pm",
                            "ts_formatted_full": "13 July 2025, 04:34pm",
                            "ts_formatted_local": "11:34 pm",
                            "ts_formatted_full_local": "13 July 2025, 11:34pm",
                            "ts_date_formatted": "July 13, 2025",
                            "is_sent_by_logged_in_user": false,
                            "editable": false,
                            "is_edited": false
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/chats/{publicUsername}/send-message": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "publicUsername",
          "in": "path",
          "required": true,
          "description": "Public username of the recipient"
        }
      ],
      "post": {
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Send Message",
        "description": "Sends a message to a specific user. Supports text messages and file attachments. AI moderation is applied to all messages.",
        "tags": [
          "Chat"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "Text message content (required if no file)"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "File attachment (required if no message)"
                  },
                  "replying_message_id": {
                    "type": "string",
                    "description": "ID of the message being replied to"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "Text message content (required if no file)"
                  },
                  "replying_message_id": {
                    "type": "string",
                    "description": "ID of the message being replied to"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "message": {
                      "$ref": "#/components/schemas/MessageObject"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "error": false,
                      "message": {
                        "_id": "message_id_456",
                        "rid": "room_id_123",
                        "msg": "Hello! How are you doing?",
                        "ts": "2024-01-01T12:00:00.000Z",
                        "u": {
                          "_id": "user_id_123",
                          "username": "user1",
                          "name": "John Doe"
                        },
                        "mentions": [],
                        "channels": [],
                        "editedAt": null,
                        "editedBy": null,
                        "reactions": {},
                        "attachments": [],
                        "ts_in_unix": 1704067200000,
                        "has_been_read": false,
                        "ts_formatted": "12:00 pm",
                        "ts_formatted_full": "01 January 2024, 12:00pm",
                        "ts_formatted_local": "12:00 pm",
                        "ts_formatted_full_local": "01 January 2024, 12:00pm",
                        "ts_date_formatted": "January 01, 2024",
                        "is_sent_by_logged_in_user": true,
                        "editable": true,
                        "is_edited": false
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Please type a message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing authentication token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthenticated."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User blocked or chat disabled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "You have blocked this user and cannot send messages to them"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - AI moderation blocked message",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Your message contains inappropriate content and has been blocked."
                    },
                    "moderation_reason": {
                      "type": "string",
                      "example": "Inappropriate language detected"
                    },
                    "message_strike_count": {
                      "type": "integer",
                      "example": 2
                    },
                    "chat_disabled": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Failed to send message",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to send message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/chats/{publicUsername}/edit-message": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "publicUsername",
          "in": "path",
          "required": true,
          "description": "Public username of the chat partner"
        }
      ],
      "post": {
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Edit Message",
        "description": "Edits an existing message (only within 6 minutes of sending). AI moderation is applied to edited messages.",
        "tags": [
          "Chat"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message_id": {
                    "type": "string",
                    "description": "ID of the message to edit"
                  },
                  "message": {
                    "type": "string",
                    "description": "New message content (max 1000 characters)"
                  }
                },
                "required": ["message_id", "message"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message edited successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/MessageObject"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "error": false,
                      "data": {
                        "_id": "message_id_123",
                        "rid": "room_id_123",
                        "msg": "Updated message content",
                        "ts": "2024-01-01T12:00:00.000Z",
                        "editedAt": "2024-01-01T12:05:00.000Z",
                        "editedBy": {
                          "_id": "user_id_123",
                          "username": "user1"
                        },
                        "u": {
                          "_id": "user_id_123",
                          "username": "user1",
                          "name": "John Doe"
                        },
                        "mentions": [],
                        "channels": [],
                        "reactions": {},
                        "attachments": [],
                        "ts_in_unix": 1704067200000,
                        "has_been_read": false,
                        "ts_formatted": "12:00 pm",
                        "ts_formatted_full": "01 January 2024, 12:00pm",
                        "ts_formatted_local": "12:00 pm",
                        "ts_formatted_full_local": "01 January 2024, 12:00pm",
                        "ts_date_formatted": "January 01, 2024",
                        "is_sent_by_logged_in_user": true,
                        "editable": true,
                        "is_edited": true
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Message content is required"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing authentication token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthenticated."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Cannot edit this message",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "You can only edit your own messages within 6 minutes of sending"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Message not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Message not found"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - AI moderation blocked edited message",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Your edited message contains inappropriate content and has been blocked."
                    },
                    "moderation_reason": {
                      "type": "string",
                      "example": "Inappropriate language detected"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Failed to edit message",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to edit message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/chats/{publicUsername}/delete-message": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "publicUsername",
          "in": "path",
          "required": true,
          "description": "Public username of the chat partner"
        }
      ],
      "post": {
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Delete Message",
        "description": "Deletes a message from the chat. Only the message sender can delete their own messages.",
        "tags": [
          "Chat"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message_id": {
                    "type": "string",
                    "description": "The ID of the message to delete"
                  }
                },
                "required": ["message_id"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "error": false,
                      "message": "Message deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Message ID is required"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing authentication token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthenticated."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Cannot delete this message",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "You can only delete your own messages"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Message not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Message not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Failed to delete message",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to delete message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/chats/{publicUsername}/mark-as-read": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "publicUsername",
          "in": "path",
          "required": true,
          "description": "Public username of the chat partner"
        }
      ],
      "post": {
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Mark as Read",
        "description": "Marks a chat room as read and updates the user's last seen timestamp.",
        "tags": [
          "Chat"
        ],
        "responses": {
          "200": {
            "description": "Room marked as read successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "room_meta": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "room_id": {
                          "type": "integer"
                        },
                        "rocketchat_room_id": {
                          "type": "string"
                        },
                        "user_id": {
                          "type": "integer"
                        },
                        "rocketchat_user_id": {
                          "type": "string"
                        },
                        "rocketchat_username": {
                          "type": "string"
                        },
                        "last_seen_at": {
                          "type": "integer"
                        },
                        "unread_count": {
                          "type": "integer"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "deleted_at": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "last_seen_at_ts": {
                          "type": "string"
                        },
                        "last_seen_at_ts_local": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "error": false,
                      "message": "Successfully marked as read",
                      "room_meta": {
                        "id": 2,
                        "room_id": 2,
                        "rocketchat_room_id": "PLN7BBfiHDZFgQqE9ugEqHdBXruwxZgt7a",
                        "user_id": 14,
                        "rocketchat_user_id": "PLN7BBfiHDZFgQqE9",
                        "rocketchat_username": "mrriyous",
                        "last_seen_at": 1752541841984,
                        "unread_count": 0,
                        "created_at": "2025-07-10T15:38:45.000000Z",
                        "updated_at": "2025-07-15T01:10:41.000000Z",
                        "deleted_at": null,
                        "last_seen_at_ts": "2025-07-15 01:10:41",
                        "last_seen_at_ts_local": "2025-07-15 08:10:41"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/chats/{publicUsername}/archive-chat": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "publicUsername",
          "in": "path",
          "required": true,
          "description": "Public username of the chat partner"
        }
      ],
      "post": {
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Archive Chat",
        "description": "Archives a chat room (moves it to archived list). Archived chats can be restored by sending a new message.",
        "tags": [
          "Chat"
        ],
        "responses": {
          "200": {
            "description": "Chat room archived successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "error": false,
                      "message": "Successfully archived chat room"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/chats/{publicUsername}/delete-chat": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "publicUsername",
          "in": "path",
          "required": true,
          "description": "Public username of the chat partner"
        }
      ],
      "post": {
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Delete Chat",
        "description": "Permanently deletes a chat room. Deleted chats cannot be recovered.",
        "tags": [
          "Chat"
        ],
        "responses": {
          "200": {
            "description": "Chat room deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "error": false,
                      "message": "Successfully deleted chat room"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/chats/room-subscriptions": {
      "get": {
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Get All Subscriptions",
        "description": "Retrieves all room subscriptions for the authenticated user.",
        "tags": [
          "Chat"
        ],
        "responses": {
          "200": {
            "description": "Room subscriptions retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "rid": {
                            "type": "string"
                          },
                          "u": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string"
                              },
                              "username": {
                                "type": "string"
                              }
                            }
                          },
                          "open": {
                            "type": "boolean"
                          },
                          "alert": {
                            "type": "boolean"
                          },
                          "unread": {
                            "type": "integer"
                          },
                          "ts": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "ls": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "error": false,
                      "data": [
                        {
                          "rid": "room_id_123",
                          "u": {
                            "_id": "user_id_123",
                            "username": "user1"
                          },
                          "open": true,
                          "alert": false,
                          "unread": 5,
                          "ts": "2024-01-01T00:00:00.000Z",
                          "ls": "2024-01-01T11:00:00.000Z"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/chats/{publicUsername}/search-messages": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "publicUsername",
          "in": "path",
          "required": true,
          "description": "Public username of the chat partner"
        }
      ],
      "get": {
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Search Messages",
        "description": "Searches for messages in a specific chat room.",
        "tags": [
          "Chat"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100
            },
            "in": "query",
            "name": "search_text",
            "required": true,
            "description": "Text to search for (1-100 characters)"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 10
            },
            "in": "query",
            "name": "limit",
            "description": "Maximum number of results (1-50, default: 10)"
          }
        ],
        "responses": {
          "200": {
            "description": "Messages found successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MessageObject"
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "error": false,
                      "messages": [
                        {
                          "_id": "ZrvLFnKgyogFhCL6C",
                          "rid": "JrLpEa6BqoncKDyy4NBKRo3zLWeBBzwJSh",
                          "msg": "halo dek",
                          "attachments": [],
                          "ts": "2025-08-03T15:51:25.305Z",
                          "u": {
                            "_id": "JrLpEa6BqoncKDyy4",
                            "username": "nuaira",
                            "name": "Nuaira Nadira"
                          },
                          "_updatedAt": "2025-08-03T15:51:25.346Z",
                          "urls": [],
                          "mentions": [],
                          "channels": [],
                          "md": [
                            {
                              "type": "PARAGRAPH",
                              "value": [
                                {
                                  "type": "PLAIN_TEXT",
                                  "value": "halo dek"
                                }
                              ]
                            }
                          ],
                          "score": 0.75,
                          "ts_in_unix": 1754236285305,
                          "has_been_read": false,
                          "ts_formatted": "03:51 pm",
                          "ts_formatted_full": "03 August 2025, 03:51pm",
                          "ts_formatted_local": "10:51 pm",
                          "ts_formatted_full_local": "03 August 2025, 10:51pm",
                          "ts_date_formatted": "August 03, 2025",
                          "is_sent_by_logged_in_user": false,
                          "editable": false,
                          "is_edited": false
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/chats/{publicUsername}/mute-notifications": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "publicUsername",
          "in": "path",
          "required": true,
          "description": "Public username of the chat partner"
        }
      ],
      "post": {
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Mute Notifications",
        "description": "Toggles mute status for chat notifications.",
        "tags": [
          "Chat"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "mute": {
                    "type": "boolean",
                    "description": "Whether to mute (true) or unmute (false) notifications"
                  }
                },
                "required": ["mute"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Notification mute status updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "mute": {
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "error": false,
                      "message": "Notifications muted successfully",
                      "data": {
                        "mute": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/chats/{publicUsername}/request-webview": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "publicUsername",
          "in": "path",
          "required": true,
          "description": "Public username of the chat partner"
        }
      ],
      "get": {
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Request Webview",
        "description": "Generates a webview URL for accessing the chat in a web browser.",
        "tags": [
          "Chat"
        ],
        "responses": {
          "200": {
            "description": "Webview URL generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "webview_url": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "error": false,
                      "webview_url": "https://startup2050.com/chats/john_doe?webview_token=abc123def456"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reports": {
      "post": {
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Report a user",
        "tags": [
          "Reports & Interactions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "user_id"
                ],
                "properties": {
                  "user_id": {
                    "type": "integer",
                    "description": "ID of the user to report"
                  },
                  "block": {
                    "type": "boolean",
                    "description": "Whether to block the user after reporting"
                  },
                  "reason": {
                    "type": "string",
                    "description": "Reason for reporting the user"
                  },
                  "message_id": {
                    "type": "string",
                    "description": "ID of the specific message being reported (optional)"
                  },
                  "message_text": {
                    "type": "string",
                    "description": "Text content of the message being reported (optional)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User reported successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "error": false,
                      "message": "User reported & blocked successfully"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/request-zoom-calls": {
      "post": {
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Request a zoom call with a partner",
        "tags": [
          "Reports & Interactions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "user_id",
                  "partner_user_id"
                ],
                "properties": {
                  "user_id": {
                    "type": "integer",
                    "description": "ID of the requesting user"
                  },
                  "partner_user_id": {
                    "type": "integer",
                    "description": "ID of the partner user for the zoom call"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Zoom call request submitted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "error": false,
                      "message": "Zoom call request submitted successfully"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/interactions/block": {
      "post": {
        "security": [
          {
            "Authorization": []
          }
        ],
        "summary": "Block a user interaction",
        "tags": [
          "Reports & Interactions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "user_id"
                ],
                "properties": {
                  "user_id": {
                    "type": "integer",
                    "description": "ID of the user to block"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User blocked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "error": false,
                      "message": "User blocked successfully"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/has-active-contracts": {
      "get": {
        "summary": "Check Active Contracts",
        "description": "Checks if the authenticated user has any active contracts.",
        "tags": ["Contracts"],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HasActiveContractsResponse"
                },
                "examples": {
                  "Example 1": {
                    "summary": "User has active contracts",
                    "value": {
                      "error": false,
                      "active_contracts": 1,
                      "has_active_contracts": true
                    }
                  },
                  "Example 2": {
                    "summary": "User has no active contracts",
                    "value": {
                      "error": false,
                      "active_contracts": 0,
                      "has_active_contracts": false
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts": {
      "get": {
        "summary": "Get All Contracts",
        "description": "Retrieves all contracts for the authenticated user (both as sponsor and seeker). Supports pagination and search functionality.",
        "tags": ["Contracts"],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Search by partner name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page (default: 10)",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/ContractListResponse"
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "summary": "Contracts list with pagination",
                    "value": {
                      "error": false,
                      "data": {
                        "data": [
                          {
                            "id": 1,
                            "contract_id": "ABC12345",
                            "contract_type": "test_moon",
                            "contract_type_str": "Test Moon",
                            "sponsor_id": 1,
                            "seeker_id": 2,
                            "duration_days": 30,
                            "monthly_amount": 1000.00,
                            "monthly_amount_formatted": "1,000.00",
                            "currency": "USD",
                            "financial_settings": {
                              "payment_schedule": "monthly",
                              "payment_method": "bank_transfer"
                            },
                            "start_date": "2024-01-15T10:00:00Z",
                            "start_date_str": "Jan 15, 2024",
                            "end_date": null,
                            "end_date_str": "Ongoing",
                            "expiration_date": "2024-02-14T10:00:00Z",
                            "expiration_date_str": "Feb 14, 2024",
                            "paused_at": null,
                            "stopped_at": null,
                            "status": "active",
                            "status_str": "Active",
                            "status_classes_str": "bg-green-100 text-green-800",
                            "is_test_moon": true,
                            "is_preliminary": false,
                            "is_main": false,
                            "official_agreement_signed": false,
                            "created_at": "2024-01-15T10:00:00Z",
                            "updated_at": "2024-01-15T10:00:00Z",
                            "sponsor": {
                              "id": 1,
                              "first_name": "John",
                              "last_name": "Doe",
                              "public_username": "johndoe"
                            },
                            "seeker": {
                              "id": 2,
                              "first_name": "Jane",
                              "last_name": "Smith",
                              "public_username": "janesmith"
                            },
                            "template": {
                              "id": 1,
                              "name": "Standard Test Moon",
                              "description": "Standard test moon contract template",
                              "contract_type": "test_moon",
                              "monthly_amount": 1000.00,
                              "currency": "USD",
                              "financial_settings": {
                                "payment_schedule": "monthly",
                                "payment_method": "bank_transfer"
                              },
                              "default_duration_days": 30
                            },
                            "partner": {
                              "id": 2,
                              "first_name": "Jane",
                              "last_name": "Smith",
                              "public_username": "janesmith"
                            },
                            "is_sponsor": true,
                            "is_seeker": false,
                            "can_be_changed": true,
                            "can_be_extended": true,
                            "can_be_upgraded": true,
                            "can_be_stopped": true,
                            "can_be_restarted": false,
                            "total_duration_days": 30
                          }
                        ],
                        "total": 1,
                        "per_page": 15,
                        "current_page": 1,
                        "last_page": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create New Contract",
        "description": "Creates a new contract offer to a partner. The user cannot offer contract to themselves, cannot have active contracts while offering new ones, and the partner cannot have active contracts. Cannot have pending contracts with the same partner. Partner must exist and have the opposite role (sponsor/seeker).",
        "tags": ["Contracts"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContractRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Create test moon contract",
                  "value": {
                    "partner_username": "janesmith",
                    "duration_days": 30,
                    "monthly_amount": 1000.00,
                    "currency": "USD",
                    "financial_settings": {
                      "payment_schedule": "monthly",
                      "payment_method": "bank_transfer"
                    },
                    "template_id": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateContractResponse"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Contract created successfully",
                    "value": {
                      "error": false,
                      "message": "Contract offer sent successfully",
                      "contract": {
                        "id": 1,
                        "contract_id": "ABC12345",
                        "contract_type": "test_moon",
                        "contract_type_str": "Test Moon",
                        "sponsor_id": 1,
                        "seeker_id": 2,
                        "duration_days": 30,
                        "monthly_amount": 1000.00,
                        "monthly_amount_formatted": "1,000.00",
                        "currency": "USD",
                        "financial_settings": {
                          "payment_schedule": "monthly",
                          "payment_method": "bank_transfer"
                        },
                        "status": "awaiting_seeker_approval",
                        "status_str": "Awaiting Seeker Approval",
                        "is_test_moon": true,
                        "created_at": "2024-01-15T10:00:00Z",
                        "sponsor": {
                          "id": 1,
                          "first_name": "John",
                          "last_name": "Doe",
                          "public_username": "johndoe"
                        },
                        "seeker": {
                          "id": 2,
                          "first_name": "Jane",
                          "last_name": "Smith",
                          "public_username": "janesmith"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Cannot offer contract to yourself",
                    "value": {
                      "error": true,
                      "message": "You cannot offer a contract to yourself"
                    }
                  },
                  "Example 2": {
                    "summary": "Active contracts exist",
                    "value": {
                      "error": true,
                      "message": "Please stop the latest contract before you can make new offers"
                    }
                  },
                  "Example 3": {
                    "summary": "Partner not found",
                    "value": {
                      "error": true,
                      "message": "Partner not found"
                    }
                  },
                  "Example 4": {
                    "summary": "Pending contract exists",
                    "value": {
                      "error": true,
                      "message": "A contract with this partner is already pending. Please approve or wait for it to be resolved before creating a new offer."
                    }
                  },
                  "Example 5": {
                    "summary": "Partner has active contract",
                    "value": {
                      "error": true,
                      "message": "Partner already has an active contract"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Validation failed",
                    "value": {
                      "error": true,
                      "message": "Validation failed",
                      "errors": {
                        "partner_username": ["The selected partner username is invalid."],
                        "duration_days": ["The duration days must be at least 30."]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{contractId}": {
      "get": {
        "summary": "Get Specific Contract",
        "description": "Retrieves detailed information about a specific contract.",
        "tags": ["Contracts"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "The unique contract identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContractResponse"
                }
              }
            }
          },
          "404": {
            "description": "Contract not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/contracts/templates": {
      "get": {
        "summary": "Get Contract Templates",
        "description": "Retrieves available contract templates for the authenticated user.",
        "tags": ["Contracts"],
        "parameters": [
          {
            "name": "contract_type",
            "in": "query",
            "description": "Filter by contract type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["test_moon", "preliminary", "main"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTemplatesResponse"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Templates list",
                    "value": {
                      "error": false,
                      "templates": [
                        {
                          "id": 1,
                          "name": "Standard Test Moon",
                          "description": "Standard test moon contract template",
                          "contract_type": "test_moon",
                          "monthly_amount": 1000.00,
                          "currency": "USD",
                          "financial_settings": {
                            "payment_schedule": "monthly",
                            "payment_method": "bank_transfer"
                          },
                          "default_duration_days": 30,
                          "is_public": true,
                          "created_by": 1,
                          "created_at": "2024-01-15T10:00:00Z",
                          "created_by_user": {
                            "id": 1,
                            "first_name": "John",
                            "last_name": "Doe"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Save Contract Template",
        "description": "Creates a new contract template. Templates can be public or private and include default financial settings and duration.",
        "tags": ["Contracts"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTemplateRequest"
              },
              "examples": {
                "Example 1": {
                  "summary": "Create custom template",
                  "value": {
                    "name": "Custom Test Moon",
                    "description": "My custom test moon template",
                    "contract_type": "test_moon",
                    "monthly_amount": 1500.00,
                    "currency": "USD",
                    "financial_settings": {
                      "payment_schedule": "monthly",
                      "payment_method": "bank_transfer"
                    },
                    "default_duration_days": 60,
                    "is_public": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTemplateResponse"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Template created successfully",
                    "value": {
                      "error": false,
                      "message": "Template saved successfully",
                      "template": {
                        "id": 2,
                        "name": "Custom Test Moon",
                        "description": "My custom test moon template",
                        "contract_type": "test_moon",
                        "monthly_amount": 1500.00,
                        "currency": "USD",
                        "financial_settings": {
                          "payment_schedule": "monthly",
                          "payment_method": "bank_transfer"
                        },
                        "default_duration_days": 60,
                        "is_public": false,
                        "created_by": 1,
                        "created_at": "2024-01-15T10:00:00Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{contractId}/approve": {
      "post": {
        "summary": "Approve Contract",
        "description": "Approves a pending contract. Can optionally override the contract duration in days (30-365).",
        "tags": ["Contracts"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "The unique contract identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "duration_days": {
                    "type": "integer",
                    "description": "Override the contract duration in days",
                    "minimum": 30,
                    "maximum": 365
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "summary": "Approve with custom duration",
                  "value": {
                    "duration_days": 45
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApproveContractResponse"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Contract approved successfully",
                    "value": {
                      "error": false,
                      "message": "Congratulations, It's a Match!",
                      "sub_messages": "You've accepted the relationship contract. You're now officially connected — let the journey begin",
                      "contract": {
                        "id": 1,
                        "contract_id": "ABC12345",
                        "contract_type": "test_moon",
                        "contract_type_str": "Test Moon",
                        "status": "active",
                        "status_str": "Active",
                        "start_date": "2024-01-15T10:00:00Z",
                        "start_date_str": "Jan 15, 2024",
                        "expiration_date": "2024-02-14T10:00:00Z",
                        "expiration_date_str": "Feb 14, 2024",
                        "sponsor": {
                          "id": 1,
                          "first_name": "John",
                          "last_name": "Doe"
                        },
                        "seeker": {
                          "id": 2,
                          "first_name": "Jane",
                          "last_name": "Smith"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Contract cannot be extended",
                    "value": {
                      "error": true,
                      "message": "Contract cannot be extended"
                    }
                  },
                  "Example 2": {
                    "summary": "Duration exceeds limit",
                    "value": {
                      "error": true,
                      "message": "The total contract duration cannot exceed 365 days. Please reduce the number of extension days."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{contractId}/reject": {
      "post": {
        "summary": "Reject Contract",
        "description": "Rejects a pending contract.",
        "tags": ["Contracts"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "The unique contract identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "type": "string",
                    "description": "Reason for rejection"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RejectContractResponse"
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{contractId}/extend": {
      "post": {
        "summary": "Extend Contract",
        "description": "Requests to extend an active contract.",
        "tags": ["Contracts"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "The unique contract identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["extension_days"],
                "properties": {
                  "extension_days": {
                    "type": "integer",
                    "description": "Number of days to extend",
                    "minimum": 1,
                    "maximum": 365
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendContractResponse"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Extension request sent successfully",
                    "value": {
                      "error": false,
                      "message": "The extension request has been sent to the partner for approval. You will be notified of the result.",
                      "action": {
                        "id": 2,
                        "contract_id": 1,
                        "action_type": "extend",
                        "status": "pending",
                        "action_data": {
                          "extension_days": 30
                        },
                        "description": "Request to extend contract by 30 days",
                        "performed_by": 1,
                        "created_at": "2024-01-15T10:00:00Z",
                        "updated_at": "2024-01-15T10:00:00Z"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{contractId}/start-next-stage": {
      "post": {
        "summary": "Start Next Stage",
        "description": "Requests to upgrade contract to the next stage (test_moon → preliminary → main). Contract type progression rules: test_moon can upgrade to preliminary or main, preliminary can upgrade to main, main cannot be upgraded further.",
        "tags": ["Contracts"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "The unique contract identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartNextStageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartNextStageResponse"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Upgrade request sent successfully",
                    "value": {
                      "error": false,
                      "message": "Well done! Now let's wait for the partner's response.",
                      "action": {
                        "id": 3,
                        "contract_id": 1,
                        "action_type": "start_next_stage",
                        "status": "pending",
                        "action_data": {
                          "action": "start_next_stage",
                          "updates": {
                            "contract_type": {
                              "label": "Contract Type",
                              "old": "test_moon",
                              "new": "preliminary"
                            },
                            "monthly_amount": {
                              "label": "Monthly Budget",
                              "old": 1000.00,
                              "new": 2000.00
                            },
                            "monthly_budget_per_child": {
                              "label": "Monthly Budget Per Child",
                              "old": 0,
                              "new": 500.00
                            },
                            "financial_gift_per_milestone": {
                              "label": "Financial Gift Per Milestone",
                              "old": 0,
                              "new": 1000.00
                            },
                            "financial_gift_upon_marriage": {
                              "label": "Financial Gift Upon Marriage",
                              "old": 0,
                              "new": 5000.00
                            },
                            "relationship_termination_compensation": {
                              "label": "Relationship Termination Compensation",
                              "old": 0,
                              "new": 2000.00
                            },
                            "capital_growth_bonus": {
                              "label": "Capital Growth Bonus",
                              "old": 0,
                              "new": 10.5
                            }
                          }
                        },
                        "description": "Request to upgrade contract to preliminary",
                        "performed_by": 1,
                        "created_at": "2024-01-15T10:00:00Z",
                        "updated_at": "2024-01-15T10:00:00Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Invalid upgrade path",
                    "value": {
                      "error": true,
                      "message": "You can only upgrade from 'Test Moon' to: Preliminary or Main"
                    }
                  },
                  "Example 2": {
                    "summary": "Pending actions exist",
                    "value": {
                      "error": true,
                      "message": "You have pending contract actions that need to be resolved first: Extension, Next Stage"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{contractId}/change": {
      "post": {
        "summary": "Change Contract",
        "description": "Requests to change contract terms.",
        "tags": ["Contracts"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "The unique contract identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeContractRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeContractResponse"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Change request sent successfully",
                    "value": {
                      "error": false,
                      "message": "All done! Let's wait for your partner's approval of the changes.",
                      "action": {
                        "id": 4,
                        "contract_id": 1,
                        "action_type": "change",
                        "status": "pending",
                        "action_data": {
                          "action": "change",
                          "updates": {
                            "duration_days": {
                              "label": "Duration (Days)",
                              "old": 30,
                              "new": 120
                            },
                            "monthly_amount": {
                              "label": "Monthly Budget",
                              "old": 1000.00,
                              "new": 2500.00
                            },
                            "monthly_budget_per_child": {
                              "label": "Monthly Budget Per Child",
                              "old": 500.00,
                              "new": 600.00
                            },
                            "financial_gift_per_milestone": {
                              "label": "Financial Gift Per Milestone",
                              "old": 1000.00,
                              "new": 1200.00
                            },
                            "financial_gift_upon_marriage": {
                              "label": "Financial Gift Upon Marriage",
                              "old": 5000.00,
                              "new": 6000.00
                            },
                            "relationship_termination_compensation": {
                              "label": "Relationship Termination Compensation",
                              "old": 2000.00,
                              "new": 2500.00
                            },
                            "capital_growth_bonus": {
                              "label": "Capital Growth Bonus",
                              "old": 10.5,
                              "new": 12.5
                            }
                          }
                        },
                        "description": "Request to change contract terms",
                        "performed_by": 1,
                        "created_at": "2024-01-15T10:00:00Z",
                        "updated_at": "2024-01-15T10:00:00Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Example 1": {
                    "summary": "No changes made",
                    "value": {
                      "error": true,
                      "message": "Please make sure there are changes in the contract terms"
                    }
                  },
                  "Example 2": {
                    "summary": "Conflicting changes",
                    "value": {
                      "error": true,
                      "message": "You have a pending change request that conflicts with the current request. Please wait for approval of the pending changes for: Monthly Budget, Duration (Days)"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{contractId}/stop": {
      "post": {
        "summary": "Stop Contract",
        "description": "Stops an active contract and starts a 72-hour cool-off period.",
        "tags": ["Contracts"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "The unique contract identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StopContractResponse"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Contract stopped successfully",
                    "value": {
                      "error": false,
                      "message": "The cool off period has been started.",
                      "sub_messages": "It will end by <b>10:00 am</b> of <b>18 Jan 2024</b>. If restarted, the skipped time will be added to the billing. If not, you will receive the last transfer until the current moment at the next billing date following the 3-day cool-off period.",
                      "cool_off_ends_at": "2024-01-18 10:00:00",
                      "contract": {
                        "id": 1,
                        "contract_id": "ABC12345",
                        "contract_type": "test_moon",
                        "contract_type_str": "Test Moon",
                        "status": "paused",
                        "status_str": "Paused",
                        "paused_at": "2024-01-15T10:00:00Z",
                        "end_date": "2024-01-15",
                        "sponsor": {
                          "id": 1,
                          "first_name": "John",
                          "last_name": "Doe"
                        },
                        "seeker": {
                          "id": 2,
                          "first_name": "Jane",
                          "last_name": "Smith"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Contract cannot be stopped",
                    "value": {
                      "error": true,
                      "message": "Contract cannot be stopped"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{contractId}/restart": {
      "post": {
        "summary": "Restart Contract",
        "description": "Restarts a stopped contract.",
        "tags": ["Contracts"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "The unique contract identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestartContractResponse"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Contract restarted successfully",
                    "value": {
                      "error": false,
                      "message": "Congratulations! Contract ABC12345 is now active again!",
                      "contract": {
                        "id": 1,
                        "contract_id": "ABC12345",
                        "contract_type": "test_moon",
                        "contract_type_str": "Test Moon",
                        "status": "active",
                        "status_str": "Active",
                        "paused_at": null,
                        "end_date": null,
                        "expiration_date": "2024-03-15T10:00:00Z",
                        "expiration_date_str": "Mar 15, 2024",
                        "sponsor": {
                          "id": 1,
                          "first_name": "John",
                          "last_name": "Doe"
                        },
                        "seeker": {
                          "id": 2,
                          "first_name": "Jane",
                          "last_name": "Smith"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Contract cannot be restarted",
                    "value": {
                      "error": true,
                      "message": "Contract cannot be restarted"
                    }
                  },
                  "Example 2": {
                    "summary": "Cannot restart partner's contract",
                    "value": {
                      "error": true,
                      "message": "You cannot restart this contract. Please contact your partner to restart the contract."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{contractId}/actions/{actionId}/approve": {
      "post": {
        "summary": "Approve Contract Action",
        "description": "Approves a pending contract action (extension, upgrade, or change request).",
        "tags": ["Contracts"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "The unique contract identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "actionId",
            "in": "path",
            "description": "The action ID to approve",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApproveActionResponse"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Action approved successfully",
                    "value": {
                      "error": false,
                      "message": "Action approved successfully",
                      "contract": {
                        "id": 1,
                        "contract_id": "ABC12345",
                        "contract_type": "test_moon",
                        "contract_type_str": "Test Moon",
                        "status": "active",
                        "status_str": "Active",
                        "expiration_date": "2024-03-15T10:00:00Z",
                        "expiration_date_str": "Mar 15, 2024",
                        "sponsor": {
                          "id": 1,
                          "first_name": "John",
                          "last_name": "Doe"
                        },
                        "seeker": {
                          "id": 2,
                          "first_name": "Jane",
                          "last_name": "Smith"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Action not found or not pending",
                    "value": {
                      "error": true,
                      "message": "Action not found or not pending"
                    }
                  },
                  "Example 2": {
                    "summary": "Cannot approve own action",
                    "value": {
                      "error": true,
                      "message": "You cannot approve your own action"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{contractId}/actions/{actionId}/confirm-changes": {
      "post": {
        "summary": "Confirm Changes",
        "description": "Confirms or rejects specific changes in a contract change request.",
        "tags": ["Contracts"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "The unique contract identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "actionId",
            "in": "path",
            "description": "The action ID to confirm",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["changes"],
                "properties": {
                  "changes": {
                    "type": "object",
                    "description": "Object containing field names as keys",
                    "additionalProperties": {
                      "type": "object",
                      "required": ["accepted", "rejected"],
                      "properties": {
                        "accepted": {
                          "type": "string",
                          "description": "\"Y\" if accepted, \"N\" if rejected",
                          "enum": ["Y", "N"]
                        },
                        "rejected": {
                          "type": "string",
                          "description": "\"Y\" if rejected, \"N\" if accepted",
                          "enum": ["Y", "N"]
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "summary": "Confirm some changes, reject others",
                  "value": {
                    "changes": {
                      "duration_days": {
                        "accepted": "Y",
                        "rejected": "N"
                      },
                      "monthly_amount": {
                        "accepted": "N",
                        "rejected": "Y"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfirmChangesResponse"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Changes confirmed successfully",
                    "value": {
                      "error": false,
                      "message": "Contract changes confirmed successfully",
                      "contract": {
                        "id": 1,
                        "contract_id": "ABC12345",
                        "contract_type": "test_moon",
                        "contract_type_str": "Test Moon",
                        "status": "active",
                        "status_str": "Active",
                        "duration_days": 120,
                        "monthly_amount": 1000.00,
                        "expiration_date": "2024-05-15T10:00:00Z",
                        "sponsor": {
                          "id": 1,
                          "first_name": "John",
                          "last_name": "Doe"
                        },
                        "seeker": {
                          "id": 2,
                          "first_name": "Jane",
                          "last_name": "Smith"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{contractId}/actions/{actionId}/reject": {
      "post": {
        "summary": "Reject Contract Action",
        "description": "Rejects a pending contract action.",
        "tags": ["Contracts"],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "The unique contract identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "actionId",
            "in": "path",
            "description": "The action ID to reject",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "type": "string",
                    "description": "Reason for rejecting the action"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RejectActionResponse"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Action rejected successfully",
                    "value": {
                      "error": false,
                      "message": "Action rejected successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Example 1": {
                    "summary": "Action not found or not pending",
                    "value": {
                      "error": true,
                      "message": "Action not found or not pending"
                    }
                  },
                  "Example 2": {
                    "summary": "Cannot reject own action",
                    "value": {
                      "error": true,
                      "message": "You cannot reject your own action"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/people/{public_username}": {
      "get": {
        "summary": "Get User Profile",
        "description": "Retrieve a user's basic profile information.",
        "tags": ["People"],
        "parameters": [
          {
            "name": "public_username",
            "in": "path",
            "description": "The public username of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/UserProfile"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/people/{public_username}/relationship": {
      "get": {
        "summary": "Get User Relationship Information",
        "description": "Retrieve a user's relationship preferences and goals.",
        "tags": ["People"],
        "parameters": [
          {
            "name": "public_username",
            "in": "path",
            "description": "The public username of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/UserRelationshipInfo"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/people/{public_username}/financial": {
      "get": {
        "summary": "Get User Financial Information",
        "description": "Retrieve a user's financial profile information.",
        "tags": ["People"],
        "parameters": [
          {
            "name": "public_username",
            "in": "path",
            "description": "The public username of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/UserFinancialInfo"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/people/{public_username}/living": {
      "get": {
        "summary": "Get User Living Information",
        "description": "Retrieve a user's living preferences and arrangements.",
        "tags": ["People"],
        "parameters": [
          {
            "name": "public_username",
            "in": "path",
            "description": "The public username of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/UserLivingInfo"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/people/{public_username}/images": {
      "get": {
        "summary": "Get User Images",
        "description": "Retrieve a user's profile images and album photos.",
        "tags": ["People"],
        "parameters": [
          {
            "name": "public_username",
            "in": "path",
            "description": "The public username of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserImage"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/support-tickets/categories": {
      "get": {
        "summary": "Get Support Ticket Categories",
        "description": "Retrieve all available support ticket categories.",
        "tags": ["Support Tickets"],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example Response": {
                      "error": false,
                      "data": [
                        {
                          "key": "general",
                          "name": "General"
                        },
                        {
                          "key": "account_issues",
                          "name": "Account issues"
                        },
                        {
                          "key": "finance_issues",
                          "name": "Finance issues"
                        },
                        {
                          "key": "legal_issues",
                          "name": "Legal issues"
                        },
                        {
                          "key": "affiliate_issues",
                          "name": "Affiliate issues"
                        },
                        {
                          "key": "partnership_proposal",
                          "name": "Partnership proposal"
                        },
                        {
                          "key": "vip_requests",
                          "name": "VIP requests"
                        },
                        {
                          "key": "abuse_report",
                          "name": "Abuse report"
                        },
                        {
                          "key": "complaint",
                          "name": "Complaint"
                        },
                        {
                          "key": "rule_violation",
                          "name": "Report a violation of rules"
                        }
                      ],
                      "message": "Support ticket categories retrieved successfully"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/support-tickets/statuses": {
      "get": {
        "summary": "Get Support Ticket Statuses",
        "description": "Retrieve all available support ticket statuses.",
        "tags": ["Support Tickets"],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example Response": {
                      "error": false,
                      "data": [
                        {
                          "key": "open",
                          "name": "Open"
                        },
                        {
                          "key": "in_progress",
                          "name": "In Progress"
                        },
                        {
                          "key": "resolved",
                          "name": "Resolved"
                        },
                        {
                          "key": "closed",
                          "name": "Closed"
                        }
                      ],
                      "message": "Support ticket statuses retrieved successfully"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/support-tickets/importance-levels": {
      "get": {
        "summary": "Get Support Ticket Importance Levels",
        "description": "Retrieve all available support ticket importance levels.",
        "tags": ["Support Tickets"],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "label": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example Response": {
                      "error": false,
                      "data": [
                        {
                          "label": "Urgent",
                          "value": "urgent"
                        },
                        {
                          "label": "Critical",
                          "value": "critical"
                        },
                        {
                          "label": "Important",
                          "value": "important"
                        },
                        {
                          "label": "Normal",
                          "value": "normal"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/support-tickets/notify-options": {
      "get": {
        "summary": "Get Notification Options",
        "description": "Retrieve all available notification options for support tickets.",
        "tags": ["Support Tickets"],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "label": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example Response": {
                      "error": false,
                      "data": [
                        {
                          "label": "Notify about response only",
                          "value": "response_only"
                        },
                        {
                          "label": "Include the title",
                          "value": "include_title"
                        },
                        {
                          "label": "Include the response's content",
                          "value": "include_content"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notifications": {
      "get": {
        "summary": "Get Notifications List",
        "description": "Retrieve user notifications with filtering and pagination support.",
        "tags": ["Notifications"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "importance",
            "in": "query",
            "description": "Filter by importance: low, medium, high",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["low", "medium", "high"]
            }
          },
          {
            "name": "categories",
            "in": "query",
            "description": "Filter by categories (comma-separated): Notice,Chat,Profile,BalanceIncrease,BalanceDecrease",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "read",
            "in": "query",
            "description": "Filter by read status: true for read, false for unread",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 15
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Notification"
                      }
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/Pagination"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/notifications/filter": {
      "get": {
        "summary": "Get Notification Filters",
        "description": "Get available filter options for notifications.",
        "tags": ["Notifications"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/NotificationFilters"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/notifications/{id}": {
      "get": {
        "summary": "Get Single Notification",
        "description": "Retrieve a specific notification by ID.",
        "tags": ["Notifications"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Notification UUID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Notification"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/notifications/{id}/mark-read": {
      "post": {
        "summary": "Mark Notification as Read",
        "description": "Mark a specific notification as read.",
        "tags": ["Notifications"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Notification UUID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/notifications/mark-all-read": {
      "post": {
        "summary": "Mark All Notifications as Read",
        "description": "Mark all user notifications as read.",
        "tags": ["Notifications"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/notifications/{id}/importance": {
      "put": {
        "summary": "Update Notification Importance",
        "description": "Update the importance of a notification. Note: This is not allowed for 'Notice' category notifications.",
        "tags": ["Notifications"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Notification UUID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["importance"],
                "properties": {
                  "importance": {
                    "type": "string",
                    "enum": ["low", "medium", "high"],
                    "description": "New importance level"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/notifications/unread-count": {
      "get": {
        "summary": "Get Unread Count",
        "description": "Get the count of unread notifications.",
        "tags": ["Notifications"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "unread_count": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/notifications/preferences": {
      "get": {
        "summary": "Get User Preferences",
        "description": "Get user notification preferences.",
        "tags": ["Notifications"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/NotificationPreferences"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update User Preferences",
        "description": "Update user notification preferences.",
        "tags": ["Notifications"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "important_notices_email": {
                    "type": "boolean",
                    "description": "Receive important notices via email"
                  },
                  "important_notices_push": {
                    "type": "boolean",
                    "description": "Receive important notices via push"
                  },
                  "content_type": {
                    "type": "string",
                    "enum": ["header", "header_content"],
                    "description": "Content type preference"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/NotificationPreferences"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/support-tickets": {
      "get": {
        "summary": "Get Support Tickets",
        "description": "Retrieve support tickets for the authenticated user or guest.",
        "tags": ["Support Tickets"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of tickets per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by status (open, in_progress, resolved, closed, unread, read, all)",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["open", "in_progress", "resolved", "closed", "unread", "read", "all"]
            }
          },
          {
            "name": "X-Guest-Email",
            "in": "header",
            "description": "Guest email address (required for guest access)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/SupportTicket"
                          }
                        },
                        "total": {
                          "type": "integer"
                        },
                        "per_page": {
                          "type": "integer"
                        },
                        "current_page": {
                          "type": "integer"
                        },
                        "last_page": {
                          "type": "integer"
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example Response": {
                      "error": false,
                      "data": {
                        "data": [
                          {
                            "id": 1,
                            "ticket_number": "GEN-123456",
                            "title": "How do I reset my password?",
                            "content": "I forgot my password and need help resetting it.",
                            "category": "general",
                            "category_display_name": "General",
                            "category_styling": "bg-gray-100 text-gray-700 dark:bg-gray-700 dark:text-gray-200",
                            "category_bg_color": "#F3F4F6",
                            "category_text_color": "#374151",
                            "importance_level": "normal",
                            "importance_styling": "bg-blue-100 text-blue-700 dark:bg-blue-900 dark:text-blue-200",
                            "importance_bg_color": "#DBEAFE",
                            "importance_text_color": "#1D4ED8",
                            "status": "open",
                            "status_display_name": "Open",
                            "is_unread": false,
                            "message_count": 1,
                            "latest_message": {
                              "id": 1,
                              "message": "I need help with my account setup.",
                              "created_at": "2024-01-15T10:30:00.000000Z"
                            },
                            "user": {
                              "id": 123,
                              "first_name": "John",
                              "last_name": "Doe",
                              "public_username": "johndoe",
                              "profile_picture_url": "https://your-domain.com/storage/profile-pictures/john.jpg"
                            },
                            "created_at": "2024-01-15T10:30:00.000000Z",
                            "created_at_local_formatted": "Jan 15, 2024 10:30 AM",
                            "updated_at": "2024-01-15T10:30:00.000000Z",
                            "updated_at_local_formatted": "Jan 15, 2024 10:30 AM"
                          }
                        ],
                        "total": 1,
                        "per_page": 20,
                        "current_page": 1,
                        "last_page": 1
                      },
                      "message": "Support tickets retrieved successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Support Ticket",
        "description": "Create a new support ticket.",
        "tags": ["Support Tickets"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["category", "importance_level", "title", "content"],
                "properties": {
                  "category": {
                    "type": "string",
                    "description": "Ticket category",
                    "enum": ["general", "account_issues", "finance_issues", "legal_issues", "affiliate_issues", "partnership_proposal", "vip_requests", "abuse_report", "complaint", "rule_violation"]
                  },
                  "importance_level": {
                    "type": "string",
                    "description": "Ticket importance level",
                    "enum": ["urgent", "critical", "important", "normal"]
                  },
                  "title": {
                    "type": "string",
                    "description": "Ticket title",
                    "maxLength": 255
                  },
                  "content": {
                    "type": "string",
                    "description": "Ticket content"
                  },
                  "notification_option": {
                    "type": "string",
                    "description": "Notification preference (required if notify_via_email is true)",
                    "enum": ["response_only", "include_title", "include_content"]
                  },
                  "notify_via_email": {
                    "type": "boolean",
                    "description": "Whether to notify via email",
                    "default": false
                  },
                  "guest_email": {
                    "type": "string",
                    "format": "email",
                    "description": "Guest email (required if not authenticated)"
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["category", "importance_level", "title", "content"],
                "properties": {
                  "category": {
                    "type": "string",
                    "description": "Ticket category",
                    "enum": ["general", "account_issues", "finance_issues", "legal_issues", "affiliate_issues", "partnership_proposal", "vip_requests", "abuse_report", "complaint", "rule_violation"]
                  },
                  "importance_level": {
                    "type": "string",
                    "description": "Ticket importance level",
                    "enum": ["urgent", "critical", "important", "normal"]
                  },
                  "title": {
                    "type": "string",
                    "description": "Ticket title",
                    "maxLength": 255
                  },
                  "content": {
                    "type": "string",
                    "description": "Ticket content"
                  },
                  "notification_option": {
                    "type": "string",
                    "description": "Notification preference (required if notify_via_email is true)",
                    "enum": ["response_only", "include_title", "include_content"]
                  },
                  "notify_via_email": {
                    "type": "string",
                    "description": "Whether to notify via email"
                  },
                  "guest_email": {
                    "type": "string",
                    "format": "email",
                    "description": "Guest email (required if not authenticated)"
                  },
                  "attachments[]": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    },
                    "description": "File attachments (PDF, JPG, JPEG, PNG, max 15MB each)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/SupportTicket"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example Response": {
                      "error": false,
                      "data": {
                        "id": 2,
                        "ticket_number": "FINT-789012",
                        "user_id": 123,
                        "guest_email": null,
                        "ip_address": "192.168.1.1",
                        "user_agent": "Mozilla/5.0...",
                        "category": "finance_issues",
                        "importance_level": "normal",
                        "title": "Need help with account setup",
                        "content": "I am having trouble setting up my account and would appreciate assistance.",
                        "notify_via_email": true,
                        "notification_option": "response_only",
                        "email_sent": false,
                        "status": "open",
                        "responded_at": null,
                        "resolved_at": null,
                        "attachments": [
                          {
                            "original_name": "screenshot.png",
                            "filename": "1705312800_screenshot.png",
                            "path": "support-tickets/1705312800_screenshot.png",
                            "size": 1024000,
                            "mime_type": "image/png",
                            "url": "https://your-domain.com/storage/support-tickets/1705312800_screenshot.png"
                          }
                        ],
                        "captcha_session_id": null,
                        "is_spam": false,
                        "created_at": "2024-01-15T11:00:00.000000Z",
                        "updated_at": "2024-01-15T11:00:00.000000Z"
                      },
                      "message": "Support ticket created successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/support-tickets/{id}": {
      "get": {
        "summary": "Get Specific Support Ticket",
        "description": "Retrieve a specific support ticket by ID.",
        "tags": ["Support Tickets"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Support ticket ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-Guest-Email",
            "in": "header",
            "description": "Guest email address (required for guest access)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/SupportTicket"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Support ticket not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Support Ticket",
        "description": "Delete a support ticket.",
        "tags": ["Support Tickets"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Support ticket ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-Guest-Email",
            "in": "header",
            "description": "Guest email address (required for guest access)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Support ticket not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/support-tickets/{id}/messages": {
      "get": {
        "summary": "Get Support Ticket Messages",
        "description": "Retrieve all messages for a specific support ticket.",
        "tags": ["Support Tickets"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Support ticket ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-Guest-Email",
            "in": "header",
            "description": "Guest email address (required for guest access)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SupportTicketMessage"
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example Response": {
                      "error": false,
                      "data": [
                        {
                          "id": 1,
                          "support_ticket_id": 1,
                          "user_id": 123,
                          "sender_type": "user",
                          "sender_name": "John Doe",
                          "sender_email": "john@example.com",
                          "message": "I need help with my account setup.",
                          "attachments": [],
                          "is_internal": false,
                          "is_read": true,
                          "read_at": "2024-01-15T10:35:00.000000Z",
                          "created_at": "2024-01-15T10:30:00.000000Z",
                          "updated_at": "2024-01-15T10:30:00.000000Z",
                          "formatted_created_at": "Jan 15, 2024 10:30 AM",
                          "is_sent_by_user": true,
                          "is_sent_by_admin": false
                        },
                        {
                          "id": 2,
                          "support_ticket_id": 1,
                          "user_id": null,
                          "sender_type": "admin",
                          "sender_name": "Support Team",
                          "sender_email": "support@example.com",
                          "message": "Thank you for contacting us. We'll help you with your account setup. Please provide more details about the specific issue you're facing.",
                          "attachments": [],
                          "is_internal": false,
                          "is_read": false,
                          "read_at": null,
                          "created_at": "2024-01-15T11:00:00.000000Z",
                          "updated_at": "2024-01-15T11:00:00.000000Z",
                          "formatted_created_at": "Jan 15, 2024 11:00 AM",
                          "is_sent_by_user": false,
                          "is_sent_by_admin": true
                        }
                      ],
                      "message": "Messages retrieved successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Support ticket not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add Message to Support Ticket",
        "description": "Add a new message to a support ticket. This endpoint also supports file attachments.",
        "tags": ["Support Tickets"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Support ticket ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-Guest-Email",
            "in": "header",
            "description": "Guest email address (required for guest access)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "email"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["message"],
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "The message content (minimum 1 character)",
                    "minLength": 1
                  },
                  "attachments[]": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    },
                    "description": "File attachments (PDF, JPG, JPEG, PNG, max 15MB each)"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["message"],
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "The message content (minimum 1 character)",
                    "minLength": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/SupportTicketMessage"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Support ticket not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/support-tickets/{id}/send-email": {
      "post": {
        "summary": "Send Email for Support Ticket",
        "description": "Send an email notification for a support ticket.",
        "tags": ["Support Tickets"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Support ticket ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-Guest-Email",
            "in": "header",
            "description": "Guest email address (required for guest access)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Email already sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Email Already Sent": {
                      "error": true,
                      "message": "Email has already been sent for this ticket"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Support ticket not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/support-tickets/{id}/mark-read": {
      "post": {
        "summary": "Mark Support Ticket as Read",
        "description": "Mark a support ticket as read.",
        "tags": ["Support Tickets"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Support ticket ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-Guest-Email",
            "in": "header",
            "description": "Guest email address (required for guest access)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Support ticket not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/support-tickets/{id}/mark-unread": {
      "post": {
        "summary": "Mark Support Ticket as Unread",
        "description": "Mark a support ticket as unread.",
        "tags": ["Support Tickets"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Support ticket ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-Guest-Email",
            "in": "header",
            "description": "Guest email address (required for guest access)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Support ticket not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/support-tickets/{id}/archive": {
      "post": {
        "summary": "Archive Support Ticket",
        "description": "Archive a support ticket.",
        "tags": ["Support Tickets"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Support ticket ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-Guest-Email",
            "in": "header",
            "description": "Guest email address (required for guest access)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Support ticket not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },

    "/affiliate/links": {
      "get": {
        "summary": "Get Affiliate Links",
        "description": "Retrieves affiliate links for the authenticated user. The middleware automatically generates an affiliate code if the user doesn't have one.",
        "tags": ["Affiliate"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/AffiliateLinksResponse"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "error": false,
                      "data": {
                        "affiliate_code": "ABC123XYZ",
                        "affiliate_links": [
                          {
                            "type": "Main Page",
                            "url": "https://startup2050.com/?ref=ABC123XYZ",
                            "description": "Main landing page for all users"
                          },
                          {
                            "type": "Universal Landing Page",
                            "url": "https://startup2050.com/ulp?ref=ABC123XYZ",
                            "description": "Universal landing page"
                          },
                          {
                            "type": "Landing Page for Men",
                            "url": "https://startup2050.com/mlp?ref=ABC123XYZ",
                            "description": "Landing page specifically for men"
                          },
                          {
                            "type": "Landing Page for Women",
                            "url": "https://startup2050.com/wlp?ref=ABC123XYZ",
                            "description": "Landing page specifically for women"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/affiliate/stats": {
      "get": {
        "summary": "Get Affiliate Statistics",
        "description": "Retrieves comprehensive affiliate statistics for the authenticated user.",
        "tags": ["Affiliate"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/AffiliateStats"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "error": false,
                      "data": {
                        "users_referred": 15,
                        "affiliate_earning_balance": 1250.50,
                        "affiliate_earning_balance_trimmed": "1,250.50",
                        "total_earnings_count": 23,
                        "currency": "USD"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/affiliate/referrals-earnings": {
      "get": {
        "summary": "Get Referrals Earnings",
        "description": "Retrieves detailed earnings history from referrals with pagination support.",
        "tags": ["Affiliate"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of records per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/ReferralsEarningsResponse"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "error": false,
                      "data": {
                        "referrals": [
                          {
                            "id": 1,
                            "user": {
                              "name": "John Doe",
                              "username": "johndoe123",
                              "profile_picture_url": "https://startup2050.com/images/avatar_male.png"
                            },
                            "earning": 25.50,
                            "original_amount": 100.00,
                            "amount_trimmed": "100.00",
                            "amount_in_lc_trimmed": "25.50",
                            "currency": "USD",
                            "earning_percentage": 25.00,
                            "transaction_id": 12345,
                            "earning_type": "subscription_purchase",
                            "created_at": "2024-03-20T10:00:00Z",
                            "updated_at": "2024-03-20T10:00:00Z",
                            "created_at_local": "2024-03-20T15:00:00+05:00",
                            "created_at_local_formatted": "March 20, 2024 at 3:00 PM"
                          }
                        ],
                        "pagination": {
                          "current_page": 1,
                          "last_page": 3,
                          "per_page": 5,
                          "total": 15
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "MessageUser": {
        "type": "object",
        "properties": {
          "_id": { "type": "string" },
          "username": { "type": "string" },
          "name": { "type": "string" }
        }
      },
      "MessageMarkdown": {
        "type": "object",
        "properties": {
          "type": { "type": "string" },
          "value": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": { "type": "string" },
                "value": { "type": "string" }
              }
            }
          }
        }
      },
      "MessageObject": {
        "type": "object",
        "properties": {
          "_id": { "type": "string" },
          "rid": { "type": "string" },
          "msg": { "type": "string" },
          "attachments": {
            "type": "array",
            "items": { "type": "object" }
          },
          "ts": { "type": "string", "format": "date-time" },
          "u": { "$ref": "#/components/schemas/MessageUser" },
          "_updatedAt": { "type": "string", "format": "date-time" },
          "urls": {
            "type": "array",
            "items": { "type": "object" }
          },
          "mentions": {
            "type": "array",
            "items": { "type": "object" }
          },
          "channels": {
            "type": "array",
            "items": { "type": "object" }
          },
          "md": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/MessageMarkdown" }
          },
          "ts_in_unix": { "type": "integer" },
          "has_been_read": { "type": "boolean" },
          "ts_formatted": { "type": "string" },
          "ts_formatted_full": { "type": "string" },
          "ts_formatted_local": { "type": "string" },
          "ts_formatted_full_local": { "type": "string" },
          "ts_date_formatted": { "type": "string" },
          "is_sent_by_logged_in_user": { "type": "boolean" },
          "editable": { "type": "boolean" },
          "is_edited": { "type": "boolean" }
        }
      },
      "ChatPartner": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "login_name": { "type": "string" },
          "public_username": { "type": "string" },
          "first_name": { "type": "string", "nullable": true },
          "last_name": { "type": "string", "nullable": true },
          "email": { "type": "string", "nullable": true },
          "email_verified_at": { "type": "string", "nullable": true },
          "hide_images": { "type": "integer" },
          "email_verified": { "type": "integer" },
          "gender": { "type": "string" },
          "partner_preference": { "type": "string", "nullable": true },
          "relationship_goals": { "type": "string", "nullable": true },
          "role": { "type": "string" },
          "created_at": { "type": "string", "format": "date-time" },
          "updated_at": { "type": "string", "format": "date-time" },
          "deleted_at": { "type": "string", "nullable": true },
          "rocketchat_registered": { "type": "integer" },
          "rocketchat_user_id": { "type": "string" },
          "rocketchat_username": { "type": "string" },
          "rocketchat_token": { "type": "string", "nullable": true },
          "rocketchat_token_expires_at": { "type": "string", "nullable": true },
          "timeoffset": { "type": "integer" },
          "profile_picture_album_url": { "type": "string" },
          "profile_picture_url": { "type": "string" }
        }
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "_id": { "type": "string" },
          "rid": { "type": "string" },
          "u": { "$ref": "#/components/schemas/MessageUser" },
          "_updatedAt": { "type": "string", "format": "date-time" },
          "alert": { "type": "boolean" },
          "fname": { "type": "string" },
          "groupMentions": { "type": "integer" },
          "name": { "type": "string" },
          "open": { "type": "boolean" },
          "t": { "type": "string" },
          "ts": { "type": "string", "format": "date-time" },
          "unread": { "type": "integer" },
          "userMentions": { "type": "integer" },
          "ls": { "type": "string", "format": "date-time" }
        }
      },
      "LastMessage": {
        "type": "object",
        "properties": {
          "rid": { "type": "string" },
          "msg": { "type": "string" },
          "attachments": {
            "type": "array",
            "items": { "type": "object" }
          },
          "ts": { "type": "string", "format": "date-time" },
          "u": { "$ref": "#/components/schemas/MessageUser" },
          "_id": { "type": "string" },
          "_updatedAt": { "type": "string", "format": "date-time" },
          "urls": {
            "type": "array",
            "items": { "type": "object" }
          },
          "mentions": {
            "type": "array",
            "items": { "type": "object" }
          },
          "channels": {
            "type": "array",
            "items": { "type": "object" }
          },
          "md": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/MessageMarkdown" }
          },
          "ts_formatted_full_local": { "type": "string" },
          "msg_shortened": { "type": "string" }
        }
      },
      "ChatRoom": {
        "type": "object",
        "properties": {
          "_id": { "type": "string" },
          "t": { "type": "string" },
          "usernames": {
            "type": "array",
            "items": { "type": "string" }
          },
          "usersCount": { "type": "integer" },
          "msgs": { "type": "integer" },
          "ts": { "type": "string", "format": "date-time" },
          "uids": {
            "type": "array",
            "items": { "type": "string" }
          },
          "default": { "type": "boolean" },
          "ro": { "type": "boolean" },
          "sysMes": { "type": "boolean" },
          "_USERNAMES": {
            "type": "array",
            "items": { "type": "string" }
          },
          "_updatedAt": { "type": "string", "format": "date-time" },
          "lastMessage": { "$ref": "#/components/schemas/LastMessage" },
          "lm": { "type": "string", "format": "date-time" },
          "subscription": { "$ref": "#/components/schemas/Subscription" },
          "chat_partner": { "$ref": "#/components/schemas/ChatPartner" },
          "updated_at_in_unixms": { "type": "integer" },
          "ts_formatted_local": { "type": "string" },
          "message_unread": { "type": "boolean" }
        }
      },
      "ChatRoomData": {
        "type": "object",
        "properties": {
          "_id": { "type": "string" },
          "t": { "type": "string" },
          "usernames": {
            "type": "array",
            "items": { "type": "string" }
          },
          "usersCount": { "type": "integer" },
          "msgs": { "type": "integer" },
          "ts": { "type": "string", "format": "date-time" },
          "uids": {
            "type": "array",
            "items": { "type": "string" }
          },
          "default": { "type": "boolean" },
          "ro": { "type": "boolean" },
          "sysMes": { "type": "boolean" },
          "_USERNAMES": {
            "type": "array",
            "items": { "type": "string" }
          },
          "_updatedAt": { "type": "string", "format": "date-time" },
          "lastMessage": { "$ref": "#/components/schemas/LastMessage" },
          "lm": { "type": "string", "format": "date-time" },
          "subscription": { "$ref": "#/components/schemas/Subscription" },
          "chat_partner": { "$ref": "#/components/schemas/ChatPartner" },
          "updated_at_in_unixms": { "type": "integer" },
          "ts_formatted_local": { "type": "string" },
          "message_unread": { "type": "boolean" }
        }
      },
      "ContractListResponse": {
        "type": "object",
        "properties": {
          "current_page": {
            "type": "integer"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contract"
            }
          },
          "first_page_url": {
            "type": "string"
          },
          "from": {
            "type": "integer"
          },
          "last_page": {
            "type": "integer"
          },
          "last_page_url": {
            "type": "string"
          },
          "next_page_url": {
            "type": "string",
            "nullable": true
          },
          "path": {
            "type": "string"
          },
          "per_page": {
            "type": "integer"
          },
          "prev_page_url": {
            "type": "string",
            "nullable": true
          },
          "to": {
            "type": "integer"
          },
          "total": {
            "type": "integer"
          }
        }
      },
      "Contract": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "contract_id": {
            "type": "string"
          },
          "contract_type": {
            "type": "string",
            "enum": ["test_moon", "preliminary", "main"]
          },
          "contract_type_str": {
            "type": "string"
          },
          "sponsor_id": {
            "type": "integer"
          },
          "seeker_id": {
            "type": "integer"
          },
          "duration_days": {
            "type": "integer"
          },
          "monthly_amount": {
            "type": "number"
          },
          "monthly_amount_formatted": {
            "type": "string"
          },
          "monthly_budget_per_child": {
            "type": "number"
          },
          "financial_gift_per_milestone": {
            "type": "number"
          },
          "financial_gift_upon_marriage": {
            "type": "number"
          },
          "relationship_termination_compensation": {
            "type": "number"
          },
          "capital_growth_bonus": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "financial_settings": {
            "type": "object"
          },
          "start_date": {
            "type": "string",
            "format": "date-time"
          },
          "start_date_str": {
            "type": "string"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "end_date_str": {
            "type": "string"
          },
          "expiration_date": {
            "type": "string",
            "format": "date-time"
          },
          "expiration_date_str": {
            "type": "string"
          },
          "paused_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "stopped_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": ["awaiting_sponsor_approval", "awaiting_seeker_approval", "active", "paused", "expired", "stopped"]
          },
          "status_str": {
            "type": "string"
          },
          "status_classes_str": {
            "type": "string"
          },
          "is_test_moon": {
            "type": "boolean"
          },
          "is_preliminary": {
            "type": "boolean"
          },
          "is_main": {
            "type": "boolean"
          },
          "official_agreement_signed": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "sponsor": {
            "$ref": "#/components/schemas/ContractUser"
          },
          "seeker": {
            "$ref": "#/components/schemas/ContractUser"
          },
          "template": {
            "$ref": "#/components/schemas/ContractTemplate"
          },
          "partner": {
            "$ref": "#/components/schemas/ContractUser"
          },
          "is_sponsor": {
            "type": "boolean"
          },
          "is_seeker": {
            "type": "boolean"
          },
          "can_be_changed": {
            "type": "boolean"
          },
          "can_be_extended": {
            "type": "boolean"
          },
          "can_be_upgraded": {
            "type": "boolean"
          },
          "can_be_stopped": {
            "type": "boolean"
          },
          "can_be_restarted": {
            "type": "boolean"
          },
          "total_duration_days": {
            "type": "integer"
          }
        }
      },
      "ContractUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "public_username": {
            "type": "string"
          }
        }
      },
      "ContractTemplate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "contract_type": {
            "type": "string",
            "enum": ["test_moon", "preliminary", "main"]
          },
          "monthly_amount": {
            "type": "number"
          },
          "monthly_budget_per_child": {
            "type": "number"
          },
          "financial_gift_per_milestone": {
            "type": "number"
          },
          "financial_gift_upon_marriage": {
            "type": "number"
          },
          "relationship_termination_compensation": {
            "type": "number"
          },
          "capital_growth_bonus": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "financial_settings": {
            "type": "object"
          },
          "default_duration_days": {
            "type": "integer"
          }
        }
      },
      "CreateContractRequest": {
        "type": "object",
        "required": ["partner_username", "duration_days"],
        "properties": {
          "partner_username": {
            "type": "string",
            "description": "Public username of the partner to offer contract to"
          },
          "duration_days": {
            "type": "integer",
            "description": "Contract duration in days",
            "minimum": 30,
            "maximum": 365
          },
          "monthly_amount": {
            "type": "number",
            "description": "Monthly payment amount",
            "minimum": 0
          },
          "monthly_budget_per_child": {
            "type": "number",
            "description": "Monthly budget per child",
            "minimum": 0
          },
          "financial_gift_per_milestone": {
            "type": "number",
            "description": "Financial gift per milestone",
            "minimum": 0
          },
          "financial_gift_upon_marriage": {
            "type": "number",
            "description": "Financial gift upon marriage",
            "minimum": 0
          },
          "relationship_termination_compensation": {
            "type": "number",
            "description": "Relationship termination compensation",
            "minimum": 0
          },
          "capital_growth_bonus": {
            "type": "number",
            "description": "Capital growth bonus percentage",
            "minimum": 0,
            "maximum": 100
          },
          "currency": {
            "type": "string",
            "description": "Currency code, 3 characters",
            "maxLength": 3,
            "default": "USD"
          },
          "financial_settings": {
            "type": "object",
            "description": "Additional financial configuration"
          },
          "template_id": {
            "type": "integer",
            "description": "ID of contract template to use"
          }
        }
      },
      "CreateContractResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "contract": {
            "$ref": "#/components/schemas/Contract"
          }
        }
      },
      "GetContractResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "contract": {
            "$ref": "#/components/schemas/ContractWithActions"
          }
        }
      },
      "ContractWithActions": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Contract"
          },
          {
            "type": "object",
            "properties": {
              "actions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ContractAction"
                }
              }
            }
          }
        ]
      },
      "ContractAction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "contract_id": {
            "type": "integer"
          },
          "action_type": {
            "type": "string",
            "enum": ["offer", "extend", "start_next_stage", "change", "stop", "restart"]
          },
          "status": {
            "type": "string",
            "enum": ["pending", "approved", "completed", "rejected"]
          },
          "status_str": {
            "type": "string"
          },
          "status_classes_str": {
            "type": "string"
          },
          "action_data": {
            "type": "object",
            "properties": {
              "action": {
                "type": "string",
                "example": "change"
              },
              "updates": {
                "type": "object",
                "properties": {
                  "duration_days": {
                    "type": "object",
                    "properties": {
                      "new": {
                        "type": "integer",
                        "example": 65
                      },
                      "old": {
                        "type": "integer",
                        "example": 35
                      },
                      "label": {
                        "type": "string",
                        "example": "Duration (Days)"
                      }
                    }
                  },
                  "monthly_amount": {
                    "type": "object",
                    "properties": {
                      "new": {
                        "type": "integer",
                        "example": 75000
                      },
                      "old": {
                        "type": "string",
                        "example": "25000.00"
                      },
                      "label": {
                        "type": "string",
                        "example": "Monthly Budget"
                      },
                      "old_formatted": {
                        "type": "string",
                        "example": "25,000"
                      },
                      "new_formatted": {
                        "type": "string",
                        "example": "75,000"
                      }
                    }
                  }
                }
              }
            },
            "example": {
              "action": "change",
              "updates": {
                "duration_days": {
                  "new": 65,
                  "old": 35,
                  "label": "Duration (Days)"
                },
                "monthly_amount": {
                  "new": 75000,
                  "old": "25000.00",
                  "label": "Monthly Budget",
                  "old_formatted": "25,000",
                  "new_formatted": "75,000"
                }
              }
            }
          },
          "description": {
            "type": "string"
          },
          "performed_at": {
            "type": "string",
            "format": "date-time"
          },
          "performed_at_local": {
            "type": "string",
            "format": "date-time"
          },
          "performed_at_local_date_formatted": {
            "type": "string"
          },
          "approved_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "approved_at_local": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "approved_at_local_date_formatted": {
            "type": "string",
            "nullable": true
          },
          "rejected_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "rejected_at_local": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "rejected_at_local_date_formatted": {
            "type": "string",
            "nullable": true
          },
          "rejection_reason": {
            "type": "string",
            "nullable": true
          },
          "performed_by": {
            "type": "integer"
          },
          "performed_by_user": {
            "$ref": "#/components/schemas/ContractUser"
          },
          "approved_by": {
            "type": "integer",
            "nullable": true
          },
          "approved_by_user": {
            "$ref": "#/components/schemas/ContractUser",
            "nullable": true
          },
          "rejected_by": {
            "type": "integer",
            "nullable": true
          },
          "rejected_by_user": {
            "$ref": "#/components/schemas/ContractUser",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "GetTemplatesResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "templates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContractTemplateFull"
            }
          }
        }
      },
      "ContractTemplateFull": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "contract_type": {
            "type": "string",
            "enum": ["test_moon", "preliminary", "main"]
          },
          "monthly_amount": {
            "type": "number"
          },
          "monthly_budget_per_child": {
            "type": "number"
          },
          "financial_gift_per_milestone": {
            "type": "number"
          },
          "financial_gift_upon_marriage": {
            "type": "number"
          },
          "relationship_termination_compensation": {
            "type": "number"
          },
          "capital_growth_bonus": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "financial_settings": {
            "type": "object"
          },
          "default_duration_days": {
            "type": "integer"
          },
          "is_public": {
            "type": "boolean"
          },
          "created_by": {
            "type": "integer"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by_user": {
            "$ref": "#/components/schemas/ContractUser"
          }
        }
      },
      "CreateTemplateRequest": {
        "type": "object",
        "required": ["name", "contract_type", "default_duration_days"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Template name",
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "description": "Template description"
          },
          "contract_type": {
            "type": "string",
            "description": "Type of contract",
            "enum": ["test_moon", "preliminary", "main"]
          },
          "monthly_amount": {
            "type": "number",
            "description": "Default monthly amount",
            "minimum": 0
          },
          "monthly_budget_per_child": {
            "type": "number",
            "description": "Monthly budget per child",
            "minimum": 0
          },
          "financial_gift_per_milestone": {
            "type": "number",
            "description": "Financial gift per milestone",
            "minimum": 0
          },
          "financial_gift_upon_marriage": {
            "type": "number",
            "description": "Financial gift upon marriage",
            "minimum": 0
          },
          "relationship_termination_compensation": {
            "type": "number",
            "description": "Relationship termination compensation",
            "minimum": 0
          },
          "capital_growth_bonus": {
            "type": "number",
            "description": "Capital growth bonus percentage",
            "minimum": 0,
            "maximum": 100
          },
          "currency": {
            "type": "string",
            "description": "Currency code, 3 characters",
            "maxLength": 3,
            "default": "USD"
          },
          "financial_settings": {
            "type": "object",
            "description": "Default financial configuration"
          },
          "default_duration_days": {
            "type": "integer",
            "description": "Default duration in days",
            "minimum": 30,
            "maximum": 365
          },
          "is_public": {
            "type": "boolean",
            "description": "Whether template is public",
            "default": false
          }
        }
      },
      "CreateTemplateResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "template": {
            "$ref": "#/components/schemas/ContractTemplateFull"
          }
        }
      },
      "ApproveContractResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "sub_messages": {
            "type": "string"
          },
          "contract": {
            "$ref": "#/components/schemas/Contract"
          }
        }
      },
      "RejectContractResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ExtendContractResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "action": {
            "$ref": "#/components/schemas/ContractAction"
          }
        }
      },
      "ChangeContractResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "action": {
            "$ref": "#/components/schemas/ContractAction"
          }
        }
      },
      "StartNextStageRequest": {
        "type": "object",
        "required": ["new_contract_type"],
        "properties": {
          "new_contract_type": {
            "type": "string",
            "description": "New contract type",
            "enum": ["preliminary", "main"]
          },
          "monthly_amount": {
            "type": "number",
            "description": "New monthly amount",
            "minimum": 0
          },
          "monthly_budget_per_child": {
            "type": "number",
            "description": "Monthly budget per child",
            "minimum": 0
          },
          "financial_gift_per_milestone": {
            "type": "number",
            "description": "Financial gift per milestone",
            "minimum": 0
          },
          "financial_gift_upon_marriage": {
            "type": "number",
            "description": "Financial gift upon marriage",
            "minimum": 0
          },
          "relationship_termination_compensation": {
            "type": "number",
            "description": "Relationship termination compensation",
            "minimum": 0
          },
          "capital_growth_bonus": {
            "type": "number",
            "description": "Capital growth bonus percentage",
            "minimum": 0,
            "maximum": 100
          }
        }
      },
      "StartNextStageResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "action": {
            "$ref": "#/components/schemas/ContractAction"
          }
        }
      },
      "ChangeContractRequest": {
        "type": "object",
        "properties": {
          "duration_days": {
            "type": "integer",
            "description": "New duration in days",
            "minimum": 30,
            "maximum": 365
          },
          "monthly_amount": {
            "type": "number",
            "description": "New monthly amount",
            "minimum": 0
          },
          "monthly_budget_per_child": {
            "type": "number",
            "description": "Monthly budget per child",
            "minimum": 0
          },
          "financial_gift_per_milestone": {
            "type": "number",
            "description": "Financial gift per milestone",
            "minimum": 0
          },
          "financial_gift_upon_marriage": {
            "type": "number",
            "description": "Financial gift upon marriage",
            "minimum": 0
          },
          "relationship_termination_compensation": {
            "type": "number",
            "description": "Relationship termination compensation",
            "minimum": 0
          },
          "capital_growth_bonus": {
            "type": "number",
            "description": "Capital growth bonus percentage",
            "minimum": 0,
            "maximum": 100
          }
        }
      },
      "StopContractResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "sub_messages": {
            "type": "string"
          },
          "cool_off_ends_at": {
            "type": "string",
            "format": "date-time"
          },
          "contract": {
            "$ref": "#/components/schemas/Contract"
          }
        }
      },
      "RestartContractResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "contract": {
            "$ref": "#/components/schemas/Contract"
          }
        }
      },
      "ApproveActionResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "contract": {
            "$ref": "#/components/schemas/Contract"
          }
        }
      },
      "RejectActionResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ConfirmChangesResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "contract": {
            "$ref": "#/components/schemas/Contract"
          }
        }
      },
      "HasActiveContractsResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "active_contracts": {
            "type": "integer"
          },
          "has_active_contracts": {
            "type": "boolean"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ValidationErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "SupportTicket": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Support ticket ID"
          },
          "ticket_number": {
            "type": "string",
            "description": "Auto-generated ticket number"
          },
          "user_id": {
            "type": "integer",
            "nullable": true,
            "description": "User ID (null for guest tickets)"
          },
          "guest_email": {
            "type": "string",
            "nullable": true,
            "description": "Guest email address (null for authenticated user tickets)"
          },
          "ip_address": {
            "type": "string",
            "description": "IP address of the ticket creator"
          },
          "user_agent": {
            "type": "string",
            "description": "User agent string"
          },
          "category": {
            "type": "string",
            "description": "Ticket category key"
          },
          "importance_level": {
            "type": "string",
            "description": "Ticket importance level"
          },
          "title": {
            "type": "string",
            "description": "Ticket title"
          },
          "content": {
            "type": "string",
            "description": "Ticket content"
          },
          "notify_via_email": {
            "type": "boolean",
            "description": "Whether to notify via email"
          },
          "notification_option": {
            "type": "string",
            "description": "Notification preference"
          },
          "email_sent": {
            "type": "boolean",
            "description": "Whether email notification has been sent"
          },
          "status": {
            "type": "string",
            "description": "Ticket status key"
          },
          "responded_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "When the ticket was first responded to"
          },
          "resolved_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "When the ticket was resolved"
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SupportTicketAttachment"
            },
            "description": "File attachments"
          },
          "captcha_session_id": {
            "type": "string",
            "nullable": true,
            "description": "CAPTCHA session ID for spam protection"
          },
          "is_spam": {
            "type": "boolean",
            "description": "Whether the ticket was flagged as spam"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "When the ticket was created"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "When the ticket was last updated"
          },
          "category_display_name": {
            "type": "string",
            "description": "Human-readable category name"
          },
          "category_styling": {
            "type": "string",
            "description": "CSS classes for category styling"
          },
          "category_bg_color": {
            "type": "string",
            "description": "Background color hex code for category"
          },
          "category_text_color": {
            "type": "string",
            "description": "Text color hex code for category"
          },
          "importance_styling": {
            "type": "string",
            "description": "CSS classes for importance level styling"
          },
          "importance_bg_color": {
            "type": "string",
            "description": "Background color hex code for importance level"
          },
          "importance_text_color": {
            "type": "string",
            "description": "Text color hex code for importance level"
          },
          "status_display_name": {
            "type": "string",
            "description": "Human-readable status name"
          },
          "is_unread": {
            "type": "boolean",
            "description": "Whether the ticket is unread"
          },
          "message_count": {
            "type": "integer",
            "description": "Total number of messages in the ticket"
          },
          "latest_message": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "Latest message ID"
              },
              "message": {
                "type": "string",
                "description": "Latest message content"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "Latest message creation date"
              }
            }
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "User ID"
              },
              "first_name": {
                "type": "string",
                "description": "User's first name"
              },
              "last_name": {
                "type": "string",
                "description": "User's last name"
              },
              "public_username": {
                "type": "string",
                "description": "User's public username"
              },
              "profile_picture_url": {
                "type": "string",
                "description": "User's profile picture URL"
              }
            }
          },
          "is_guest": {
            "type": "boolean",
            "description": "Whether this is a guest ticket"
          },
          "created_at_local": {
            "type": "string",
            "format": "date-time",
            "description": "Created date in local timezone"
          },
          "created_at_local_formatted": {
            "type": "string",
            "description": "Human-readable formatted creation date"
          },
          "updated_at_local_formatted": {
            "type": "string",
            "description": "Human-readable formatted update date"
          }
        }
      },
      "SupportTicketMessage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Message ID"
          },
          "support_ticket_id": {
            "type": "integer",
            "description": "Support ticket ID"
          },
          "user_id": {
            "type": "integer",
            "nullable": true,
            "description": "User ID (null for admin messages)"
          },
          "sender_type": {
            "type": "string",
            "description": "Type of sender (user or admin)",
            "enum": ["user", "admin"]
          },
          "sender_name": {
            "type": "string",
            "description": "Name of the sender"
          },
          "sender_email": {
            "type": "string",
            "description": "Email of the sender"
          },
          "message": {
            "type": "string",
            "description": "Message content"
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SupportTicketAttachment"
            },
            "description": "File attachments"
          },
          "is_internal": {
            "type": "boolean",
            "description": "Whether this is an internal message"
          },
          "is_read": {
            "type": "boolean",
            "description": "Whether the message has been read"
          },
          "read_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "When the message was read"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "When the message was created"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "When the message was last updated"
          },
          "formatted_created_at": {
            "type": "string",
            "description": "Human-readable formatted creation date"
          },
          "is_sent_by_user": {
            "type": "boolean",
            "description": "Whether this message was sent by a user"
          },
          "is_sent_by_admin": {
            "type": "boolean",
            "description": "Whether this message was sent by an admin"
          }
        }
      },
      "SupportTicketAttachment": {
        "type": "object",
        "properties": {
          "original_name": {
            "type": "string",
            "description": "Original filename"
          },
          "filename": {
            "type": "string",
            "description": "Stored filename"
          },
          "path": {
            "type": "string",
            "description": "File path"
          },
          "url": {
            "type": "string",
            "description": "Download URL"
          },
          "size": {
            "type": "integer",
            "description": "File size in bytes"
          },
          "mime_type": {
            "type": "string",
            "description": "MIME type of the file"
          }
        }
      },
      "Notification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique notification UUID"
          },
          "icon_image_url": {
            "type": "string",
            "description": "URL to the icon image"
          },
          "icon_styling": {
            "type": "string",
            "description": "CSS classes for icon styling"
          },
          "icon_bg_color": {
            "type": "string",
            "description": "Hex color for icon background"
          },
          "category": {
            "type": "string",
            "description": "Notification category"
          },
          "category_group": {
            "type": "string",
            "description": "Grouped category for UI organization"
          },
          "category_styling": {
            "type": "string",
            "description": "CSS classes for category badge"
          },
          "category_bg_color": {
            "type": "string",
            "description": "Hex color for category background"
          },
          "category_text_color": {
            "type": "string",
            "description": "Hex color for category text"
          },
          "importance": {
            "type": "string",
            "enum": ["low", "medium", "high"],
            "description": "Importance level"
          },
          "importance_styling": {
            "type": "string",
            "description": "CSS classes for importance badge"
          },
          "importance_bg_color": {
            "type": "string",
            "description": "Hex color for importance background"
          },
          "importance_text_color": {
            "type": "string",
            "description": "Hex color for importance text"
          },
          "header": {
            "type": "string",
            "description": "Notification header/title"
          },
          "message": {
            "type": "string",
            "description": "Full notification message"
          },
          "preview": {
            "type": "string",
            "description": "Short preview of the message"
          },
          "read_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Timestamp when marked as read"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp (UTC)"
          },
          "created_at_formatted": {
            "type": "string",
            "description": "Human-readable formatted date (UTC)"
          },
          "created_at_local": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp in user's timezone"
          },
          "created_at_local_formatted": {
            "type": "string",
            "description": "Human-readable formatted date in user's timezone"
          },
          "is_system_notice": {
            "type": "boolean",
            "description": "Whether it's a system notice"
          },
          "interested_user_id": {
            "type": "integer",
            "nullable": true,
            "description": "ID of the interested user (for Profile notifications)"
          },
          "interested_user_name": {
            "type": "string",
            "nullable": true,
            "description": "Name of the interested user"
          },
          "interested_user_avatar": {
            "type": "string",
            "nullable": true,
            "description": "Avatar URL of the interested user"
          }
        }
      },
      "NotificationFilters": {
        "type": "object",
        "properties": {
          "importances": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Display name for the importance level"
                },
                "value": {
                  "type": "string",
                  "description": "Value for filtering"
                }
              }
            },
            "description": "Available importance filter options"
          },
          "filter_topics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Display name for the category"
                },
                "value": {
                  "type": "string",
                  "description": "Value for filtering"
                }
              }
            },
            "description": "Available category filter options"
          },
          "notify_methods": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Display name for the notification method"
                },
                "value": {
                  "type": "string",
                  "description": "Value for the notification method"
                }
              }
            },
            "description": "Available notification methods"
          },
          "notification_content": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Display name for the content type"
                },
                "value": {
                  "type": "string",
                  "description": "Value for the content type"
                }
              }
            },
            "description": "Available content type options"
          }
        }
      },
      "NotificationPreferences": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Preferences ID"
          },
          "user_id": {
            "type": "integer",
            "description": "User ID"
          },
          "important_notices_email": {
            "type": "boolean",
            "description": "Receive important notices via email"
          },
          "important_notices_push": {
            "type": "boolean",
            "description": "Receive important notices via push"
          },
          "content_type": {
            "type": "string",
            "enum": ["header", "header_content"],
            "description": "Content type preference"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "When preferences were created"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "When preferences were last updated"
          }
        }
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "description": "Total number of items"
          },
          "per_page": {
            "type": "integer",
            "description": "Number of items per page"
          },
          "current_page": {
            "type": "integer",
            "description": "Current page number"
          },
          "last_page": {
            "type": "integer",
            "description": "Last page number"
          }
        }
      },
      "AffiliateLink": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of landing page"
          },
          "url": {
            "type": "string",
            "description": "Complete affiliate link with referral code"
          },
          "description": {
            "type": "string",
            "description": "Description of the landing page"
          }
        }
      },
      "AffiliateLinksResponse": {
        "type": "object",
        "properties": {
          "affiliate_code": {
            "type": "string",
            "description": "Unique affiliate code for the user"
          },
          "affiliate_links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AffiliateLink"
            },
            "description": "Array of available affiliate links"
          }
        }
      },
      "AffiliateStats": {
        "type": "object",
        "properties": {
          "users_referred": {
            "type": "integer",
            "description": "Total number of users referred by the affiliate"
          },
          "affiliate_earning_balance": {
            "type": "number",
            "description": "Total earnings balance (numeric)"
          },
          "affiliate_earning_balance_trimmed": {
            "type": "string",
            "description": "Formatted earnings balance with commas"
          },
          "total_earnings_count": {
            "type": "integer",
            "description": "Total number of earning transactions"
          },
          "currency": {
            "type": "string",
            "description": "User's preferred currency"
          }
        }
      },
      "ReferralEarning": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique record identifier"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Full name of referred user"
              },
              "username": {
                "type": "string",
                "description": "Public username"
              },
              "profile_picture_url": {
                "type": "string",
                "description": "Profile picture URL"
              }
            }
          },
          "earning": {
            "type": "number",
            "description": "Earning amount in user's local currency"
          },
          "original_amount": {
            "type": "number",
            "description": "Original transaction amount"
          },
          "amount_trimmed": {
            "type": "string",
            "description": "Formatted original amount"
          },
          "amount_in_lc_trimmed": {
            "type": "string",
            "description": "Formatted earning amount"
          },
          "currency": {
            "type": "string",
            "description": "Transaction currency"
          },
          "earning_percentage": {
            "type": "number",
            "description": "Commission percentage earned (always 25.00%)"
          },
          "transaction_id": {
            "type": "integer",
            "description": "Associated transaction ID"
          },
          "earning_type": {
            "type": "string",
            "description": "Type of earning (e.g., subscription_purchase)"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "UTC timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          },
          "created_at_local": {
            "type": "string",
            "format": "date-time",
            "description": "Localized timestamp"
          },
          "created_at_local_formatted": {
            "type": "string",
            "description": "Human-readable local timestamp"
          }
        }
      },
      "ReferralsEarningsResponse": {
        "type": "object",
        "properties": {
          "referrals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReferralEarning"
            },
            "description": "Array of earning history records"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination",
            "description": "Pagination information"
          }
        }
      }
    },
    "securitySchemes": {
      "Authorization": {
        "name": "Authorization",
        "type": "apiKey",
        "in": "header"
      },
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Bearer token authentication for API access"
      }
    }
  }
}
